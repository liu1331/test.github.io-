{"version":3,"sources":["games/Crash/game/game.module.css","games/Crash/game/Game.tsx"],"names":["module","exports","Game","render","scale","isWhiteThemeActive","useWhiteTheme","pathname","useLocation","manager","useController","crashText","useRef","crashGame","crashWrapper","width","useWindowSize","useState","isOnline","setIsOnline","useEffect","setIsFirstLoad","current","destroy","canvas","querySelector","remove","configWidth","config","configHeight","height","isMobile","newConfig","Number","canvasStyle","backgroundColor","innerHTML","classList","Phaser","removeListener","connectionListener","id","className","clsx","css","game","offline","ref","ping","fps","gameText"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,IAAM,kBAAkB,KAAO,mBAAmB,QAAU,wB,mKCwF3HC,UAxES,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAwB,IAAhBC,aAAgB,MAAR,EAAQ,EACzCC,EAAuBC,0BAAvBD,mBACAE,EAAaC,cAAbD,SACAE,EAAYC,cAAZD,QAEFE,EAAYC,iBAA2B,MACvCC,EAAYD,iBAA2B,MACvCE,EAAeF,iBAAuB,MACpCG,EAAUC,0BAAVD,MARyC,EAUjBE,oBAAS,GAVQ,mBAU1CC,EAV0C,KAUhCC,EAVgC,KAwDjD,OA5CAC,qBAAU,WAAO,IAAD,EAGd,GAFAC,aAAe,GACf,UAAAR,EAAUS,eAAV,SAAmBC,SAAQ,GAAM,GAC7BT,EAAaQ,QAAS,CACxB,IAAME,EAASV,EAAaQ,QAAQG,cAAc,UAC5C,OAAND,QAAM,IAANA,KAAQE,SALI,IAQCC,EAAsCC,IAA7Cb,MAA4Bc,EAAiBD,IAAzBE,OACtBC,EAAWhB,EAAQ,IAEnBiB,EAAS,2BACVJ,KADU,IAEbb,MAAOkB,OAAON,IAAgBI,EAAW,GAAM,GAC/CD,OAAQG,OAAOJ,IAAiBE,EAAW,GAAM,GACjDG,YAAY,oBAAD,OAAsB9B,GAAS2B,EAAW,EAAI,GAA9C,KACXI,gBACE9B,GAAmC,WAAbE,EAAwB,UAAY,YAY9D,OAVII,EAAUW,UAAYnB,IACxBQ,EAAUW,QAAQc,UAAY,MAC9BzB,EAAUW,QAAQe,UAAUX,OAAO,uBAEjCvB,IACFU,EAAUS,QAAU,IAAIgB,IAAOpC,KAAK8B,IAGtCX,aAAe,GAER,WAAO,IAAD,EACX,UAAAR,EAAUS,eAAV,SAAmBC,SAAQ,GAAM,MAElC,CAACpB,EAAQI,EAAUH,IAEtBgB,qBAAU,WACR,IAAMmB,EAAc,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAS+B,oBAAmB,SAACtB,GAClDC,EAAYD,MAGd,OAAO,WACLqB,GAAkBA,OAEnB,IAGD,sBACEE,GAAG,gBACHC,UAAWC,YAAKC,IAAIC,MAAO3B,GAAY0B,IAAIE,SAC3CC,IAAKjC,EAHP,UAIE,mBAAG2B,GAAI,YAAaC,UAAWE,IAAII,OACnC,mBAAGP,GAAG,WAAWC,UAAWE,IAAIK,MAChC,oBACEP,UAAWC,YAAKC,IAAIM,UACpBT,GAAG,oBACHM,IAAKpC","file":"static/js/116.23173caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"game_game__38mgS\",\"gameText\":\"game_gameText__YGPd0\",\"fps\":\"game_fps__34ban\",\"ping\":\"game_ping__3gZf-\",\"offline\":\"game_offline__2U2g-\"};","import React, { FC, useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport Phaser from \"phaser\";\r\n\r\nimport { useWhiteTheme, useWindowSize } from \"providers\";\r\n\r\nimport css from \"./game.module.css\";\r\nimport { config } from \"../game/data/config\";\r\nimport { setIsFirstLoad } from \"./engine/entities/Graph/calculates/setHeadAngle\";\r\nimport { useController } from \"pages/Crash/controller\";\r\n\r\ninterface Props {\r\n  render: boolean;\r\n  scale?: number;\r\n}\r\n\r\nconst Game: FC<Props> = ({ render, scale = 1 }) => {\r\n  const { isWhiteThemeActive } = useWhiteTheme();\r\n  const { pathname } = useLocation();\r\n  const { manager } = useController();\r\n\r\n  const crashText = useRef<HTMLHeadingElement>(null);\r\n  const crashGame = useRef<Phaser.Game | null>(null);\r\n  const crashWrapper = useRef<HTMLDivElement>(null);\r\n  const { width } = useWindowSize();\r\n\r\n  const [isOnline, setIsOnline] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsFirstLoad(false);\r\n    crashGame.current?.destroy(true, false);\r\n    if (crashWrapper.current) {\r\n      const canvas = crashWrapper.current.querySelector(\"canvas\");\r\n      canvas?.remove();\r\n    }\r\n\r\n    const { width: configWidth, height: configHeight } = config;\r\n    const isMobile = width < 600;\r\n\r\n    const newConfig = {\r\n      ...config,\r\n      width: Number(configWidth) * (isMobile ? 0.5 : 1),\r\n      height: Number(configHeight) * (isMobile ? 0.5 : 1),\r\n      canvasStyle: `transform: scale(${scale * (isMobile ? 2 : 1)})`,\r\n      backgroundColor:\r\n        isWhiteThemeActive && pathname === \"/crash\" ? \"#ffffff\" : \"#150a30\",\r\n    };\r\n    if (crashText.current && !render) {\r\n      crashText.current.innerHTML = \"...\";\r\n      crashText.current.classList.remove(\"crashGameAnimation\");\r\n    }\r\n    if (render) {\r\n      crashGame.current = new Phaser.Game(newConfig);\r\n    }\r\n\r\n    setIsFirstLoad(true);\r\n\r\n    return () => {\r\n      crashGame.current?.destroy(true, false);\r\n    };\r\n  }, [render, pathname, scale]);\r\n\r\n  useEffect(() => {\r\n    const removeListener = manager?.connectionListener((isOnline) => {\r\n      setIsOnline(isOnline);\r\n    });\r\n\r\n    return () => {\r\n      removeListener && removeListener();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"crash-app-box\"\r\n      className={clsx(css.game, !isOnline && css.offline)}\r\n      ref={crashWrapper}>\r\n      <p id={\"crashPing\"} className={css.ping} />\r\n      <p id=\"crashFPS\" className={css.fps} />\r\n      <h1\r\n        className={clsx(css.gameText)}\r\n        id=\"crash-payout-text\"\r\n        ref={crashText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"sourceRoot":""}