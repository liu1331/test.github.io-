{"version":3,"sources":["pages/VideoPoker/style.module.scss","pages/VideoPoker/Controller/components/Bet/components/DesktopInput/style.module.scss","pages/VideoPoker/Controller/components/Bet/components/MobileInput/style.module.scss","pages/VideoPoker/Controller/components/Bet/style.module.scss","pages/VideoPoker/Controller/components/Bet/components/ButtonGroup/style.module.scss","pages/VideoPoker/Controller/style.module.scss","pages/VideoPoker/Game/style.module.scss","components/HotKeys/Listener/index.ts","pages/VideoPoker/Controller/components/Bet/components/DesktopInput/index.tsx","pages/VideoPoker/Controller/components/Bet/components/MobileInput/index.tsx","pages/VideoPoker/Controller/components/Bet/components/ButtonGroup/index.tsx","pages/VideoPoker/Controller/components/Bet/index.tsx","pages/VideoPoker/Controller/hooks/useGameSession.ts","pages/VideoPoker/Controller/hooks/useLatestGameSession.ts","pages/VideoPoker/Controller/index.tsx","pages/VideoPoker/Controller/hooks/useGameConfig.ts","pages/VideoPoker/Game/index.tsx","pages/VideoPoker/page.tsx","pages/VideoPoker/index.tsx","pages/VideoPoker/Controller/components/Reducer/config.ts","pages/VideoPoker/Controller/components/Reducer/actions/actionTypes.ts","pages/VideoPoker/Controller/components/Reducer/actions/fieldManipulation.ts","pages/VideoPoker/Controller/components/Reducer/actions/defineCombination.ts","pages/VideoPoker/Controller/components/Reducer/reducer.ts","pages/VideoPoker/Controller/components/Reducer/context.ts","pages/VideoPoker/Controller/components/Reducer/provider.tsx","pages/VideoPoker/Controller/components/Reducer/index.ts"],"names":["module","exports","ActiveKeys","useHotKeyListener","callbacks","useHotKeys","isHotkeyActive","isHotKeysPaused","useEffect","keyDownListenerIgnore","event","isKeyboardEvent","target","tagName","toLowerCase","code","preventDefault","keyListener","key","callbackKeyA","callbackKeyS","callbackSpace","callbackKeyQ","callbackKeyW","callbackKeyE","callbackKeyR","callbackKeyT","callbackKeyY","callbackKeyD","window","addEventListener","removeEventListener","Input","className","props","clsx","styles","wrapper","classes","root","disabled","children","buttonsWrapper","ButtonGroup","setRelativeAmount","isForMobileInput","minBtnText","maxBtnText","openWarning","btnClass","button","mobileInputBtn","btnLeft","onClick","btnCenter","btnRight","Bet","betButtonOnClick","startGameFetchLoading","useState","isWarningOpen","setIsWarningOpen","intl","useGetLocale","useCoins","coinsList","selectedCoin","showInUSD","coinsPrices","useVideoPokerControl","controlState","controlDispatch","betAmount","gamePhase","coinsConfig","USDMode","setUSDMode","isInit","setInit","isUSDCurrent","setIsUSDCurrent","setBetAmount","amount","type","SET_BET_AMOUNT","setBetAmountHandler","useCallback","Number","value","replace","isNaN","isFinite","GamePhases","HOLD","coin","config","find","currency","minimum_bet","bet","price","toFixed","coinOptions","useMemo","map","balance","label","icon","image","setProportionalAmount","proportion","currentBet","coinConfig","coinInfo","Math","min","maximum_bet","betInputOnBlur","convertedBalance","length","inputLabelText","formatMessage","id","warningModal","Warning","warning","isOpen","callBack","onClose","rootWrapper","currencyBlock","selectWrapper","Select","onChange","coinsManager","changeSelectedCoin","options","inputWrapper","desktopInput","DesktopInput","labelClassName","inputLabel","onBlur","btnWrapper","MobileInput","betButtons","betButton","useGameSession","useLocalStorage","token","useSeed","clientSeed","rotateClientSeed","updateNonce","language","useLocale","holdCards","actualBet","useFetch","startGameFetch","loading","dealFetch","dealFetchLoading","playEffect","useSoundSystemControl","controlFunctions","getSoundEffectNames","gamePathNames","VIDEO_POKER","win","dealEffect","deal","playDealSoundEffects","isWin","a","startGame","bet_amt","reqParams","locale","client_seed","seed","variables","error","data","notifyBarManager","message","timeOut","success","newCoinValue","coinValueUpdate","SET_ACTUAL_BET","START_GAME","cards","initial_hand","hold","filter","card","join","isSetManually","DEAL","final_hand","outcome","liveStatsManager","addBet","profit","isCheckedUnfinishedSession","Controller","liveStatsIsOpen","liveStatsHandleClose","setClientSeed","searchSessionFetch","searchSession","session_exists","SET_GAME_SESSION","useLatestGameSession","fetchConfiguration","configurationFetchResponse","coins","forEach","item","push","ceil","toString","maximum_profit","SET_COINS_CONFIG","useGameConfig","hotKeyBetHandler","playFunc","LiveStats","handleClose","rebetButtonActions","NOT_START","END_GAME","clickSoundIndex","Game","field","combination","cardClick1","cardClick2","onClickCardHandler","cardIndex","cardPosition","cardIsHold","REMOVE_HOLD_CARD","position","ADD_HOLD_CARD","hand","animateCard","index","isCombination","includes","showCard","isSelect","isLose","coinAmount","isDealButton","BettingInformation","React","lazy","LazyComponentLoader","VideoPokerPage","isSoundOpen","setIsSoundOpen","hotKeyIsOpen","setHotKeyIsOpen","setLiveStatsIsOpen","betInfoIsOpen","setBetInfoIsOpen","SoundModal","HotKeys","hrSmall","optionWrapper","OptionsButton","withSound","soundOnClick","liveStatOnclick","hotKeysOnClick","bettingInformationOnClick","hrBig","statisticsWrapper","game","withFairness","VideoPokerWrapper","Helmet","name","content","http-equiv","Seed","gameName","removeHoldCard","holdCardsCopy","holdCard","fullPositions","getFullPositions","findSameCards","sameCardsCounting","deck","getCard","cardValue","lodashGet","isPairOfJacksOrBetter","Outcomes","PAIR_OF_JACKS_OR_BETTER","skipLowPairs","isNumber","combinations","ROYAL_FLUSH","STRAIGHT_FLUSH","FLUSH","FOUR_OF_A_KIND","FULL_HOUSE","STRAIGHT","THREE_OF_A_KIND","TWO_PAIR","NOTHING","defineCombination","emptyHoldCards","Array","fill","initialVideoPokerControlState","videoPokerControlReducer","state","action","actions","console","log","phase","defaultValue","Context","createContext","VideoPokerControlProvider","useReducer","Provider","useContext"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,oBAAoB,cAAgB,6BAA6B,QAAU,uBAAuB,MAAQ,qBAAqB,kBAAoB,mC,qBCAzfD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,cAAc,2BAA2B,QAAU,uBAAuB,KAAO,oBAAoB,SAAW,0B,qBCA/cD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,QAAU,uBAAuB,KAAO,oBAAoB,SAAW,wBAAwB,eAAiB,gC,qBCA/cD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,cAAc,2BAA2B,QAAU,uBAAuB,KAAO,oBAAoB,SAAW,wBAAwB,YAAc,2BAA2B,cAAgB,6BAA6B,cAAgB,6BAA6B,aAAe,4BAA4B,aAAe,4BAA4B,WAAa,0BAA0B,WAAa,0BAA0B,UAAY,yBAAyB,UAAY,yBAAyB,WAAa,0BAA0B,QAAU,yB,qBCAz4BD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,OAAS,sBAAsB,QAAU,uBAAuB,SAAW,wBAAwB,UAAY,yBAAyB,eAAiB,gC,qBCAxfD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,sB,qBCAtWD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,sB,iCCDtW,sCAIKC,EAJL,yB,SAIKA,O,eAAAA,I,eAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,gBAAAA,M,KA0BE,IAAMC,EAAoB,SAACC,GAAiC,IAAD,EACpBC,cAApCC,EADwD,EACxDA,eAAgBC,EADwC,EACxCA,gBAExBC,qBAAU,WACR,IAAMC,EAAwB,SAACC,GAE1BC,YAAgBD,IAChBJ,IACDC,GAEuC,SAAvCG,EAAME,OAAOC,QAAQC,gBAIXJ,EAAMK,QACPb,GACTQ,EAAMM,mBAIJC,EAAc,SAACP,GACnB,GACGC,YAAgBD,IAChBJ,IACDC,GAEuC,SAAvCG,EAAME,OAAOC,QAAQC,cALvB,CAUA,IAAMI,EAAMR,EAAMK,KAClB,GAAIG,KAAOhB,EAAY,CACrBQ,EAAMM,iBADe,IAGnBG,EAUEf,EAVFe,aACAC,EASEhB,EATFgB,aACAC,EAQEjB,EARFiB,cACAC,EAOElB,EAPFkB,aACAC,EAMEnB,EANFmB,aACAC,EAKEpB,EALFoB,aACAC,EAIErB,EAJFqB,aACAC,EAGEtB,EAHFsB,aACAC,EAEEvB,EAFFuB,aACAC,EACExB,EADFwB,aAEF,OAAQV,GACN,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,QACCC,GAAeA,IACnB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,IAClB,MACF,IAAK,OACCC,GAAcA,QAU1B,OAFAC,OAAOC,iBAAiB,UAAWrB,GACnCoB,OAAOC,iBAAiB,QAASb,GAC1B,WACLY,OAAOE,oBAAoB,UAAWtB,GACtCoB,OAAOE,oBAAoB,QAASd,MAErC,CAACX,EAAgBC,EAAiBH,M,gQClGxB4B,EAde,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAcC,EAAY,6BACzD,OACE,qBAAKD,UAAWE,YAAKC,IAAOC,QAASJ,GAArC,SACE,cAAC,QAAD,2BACMC,GADN,IAEEI,QAAS,CACPC,KAAMH,IAAOG,KACbC,SAAUJ,IAAOI,gB,mBCQZR,EAfe,SAAC,GAAuC,IAArCS,EAAoC,EAApCA,SAAUR,EAA0B,EAA1BA,UAAcC,EAAY,wCACnE,OACE,sBAAKD,UAAWE,YAAKC,IAAOC,QAASJ,GAArC,UACE,cAAC,QAAD,2BACMC,GADN,IAEEI,QAAS,CACPC,KAAMH,IAAOG,KACbC,SAAUJ,IAAOI,aAGrB,qBAAKP,UAAWG,IAAOM,eAAvB,SAAwCD,Q,+CCoC/BE,EApCgB,SAAC,GAOzB,IANLC,EAMI,EANJA,kBACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAP,EACI,EADJA,SAEIQ,EAAWb,IAAOc,OAGtB,OAFIL,IAAkBI,EAAWd,YAAKC,IAAOc,OAAQd,IAAOe,iBAG1D,qCACGV,EACD,cAAC,SAAD,CACER,UAAWE,YAAKc,EAAUb,IAAOgB,SACjCC,QAAS,kBAAMT,EAAkB,QAFnC,SAGGE,IAEH,cAAC,SAAD,CACEb,UAAWE,YAAKc,EAAUb,IAAOkB,WACjCD,QAAS,kBAAMT,EAAkB,SAFnC,iBAKA,cAAC,SAAD,CACEX,UAAWE,YAAKc,EAAUb,IAAOkB,WACjCD,QAAS,kBAAMT,EAAkB,WAFnC,gBAKA,cAAC,SAAD,CAAQX,UAAWE,YAAKc,EAAUb,IAAOmB,UAAWF,QAASL,EAA7D,SACGD,QCqOMS,EAtPQ,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,iBAAkBC,EAA4B,EAA5BA,sBAA4B,EAC5BC,oBAAS,GADmB,mBAC/DC,EAD+D,KAChDC,EADgD,KAGhEC,EAAOC,yBAHyD,EAIVC,cAApDC,EAJ8D,EAI9DA,UAAWC,EAJmD,EAInDA,aAAcC,EAJqC,EAIrCA,UAAWC,EAJ0B,EAI1BA,YAJ0B,EAK5BC,cAAlCC,EAL8D,EAK9DA,aAAcC,EALgD,EAKhDA,gBACdC,EAAsCF,EAAtCE,UAAWC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,YANwC,EAOxCf,oBAAkB,GAPsB,mBAO/DgB,EAP+D,KAOtDC,EAPsD,OAQ5CjB,oBAAS,GARmC,mBAQ/DkB,EAR+D,KAQvDC,EARuD,OAS9BnB,oBAAS,GATqB,mBAS/DoB,EAT+D,KASjDC,EATiD,KAWhEC,EAAe,SAACC,GACpBX,EAAgB,CACdY,KAAMC,IACNF,YAIEG,EAAsBC,uBAC1B,SAAC5E,GACC,IAAMwE,EAASK,OAAO7E,EAAME,OAAO4E,MAAMC,QAAQ,IAAK,MAClDC,MAAMR,IAAYS,SAAST,IAC/BD,EAAavE,EAAME,OAAO4E,MAAMC,QAAQ,IAAK,OAE/C,IAGFjF,qBAAU,WACJiE,IAAcmB,IAAWC,MAC3BjB,EAAWT,GAAoC,SAAX,OAAZD,QAAY,IAAZA,OAAA,EAAAA,EAAc4B,SAEvC,CAAC5B,EAAcO,EAAWN,IAE7B3D,qBAAU,WACR,IAAMuF,EAASrB,EAAYsB,MACzB,SAACC,GAAD,OAAcA,EAASH,QAAT,OAAkB5B,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAc4B,SAEhD,GAAK5B,GAAiB6B,EAAtB,CAIA,IAAKlB,EAOH,OANAN,EAAgB,CACdY,KAAMC,IACNF,OAAQa,EAAOG,cAEjBpB,GAAQ,QACRE,EAAgBb,GAIlB,GAAIM,IAAcmB,IAAWC,KAAM,CACjC,GAAId,IAAiBZ,EACnB,OAEF,GAA0B,QAAtBD,EAAa4B,KAEf,YADAd,EAAgBb,GAGlB,IAAIgC,EAEFA,EADEhC,GAEAoB,OAAOjB,EAAaE,WAAae,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAckC,QACtDC,QAAQ,IAGRd,OAAOjB,EAAaE,WAAae,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAckC,QACtDC,QAAQ,GAEZ9B,EAAgB,CACdY,KAAMC,IACNF,OACEK,OAAOQ,EAAOG,aAAeX,OAAOY,GAAOJ,EAAOG,YAAcC,IAEpEnB,EAAgBb,OAEjB,CAACM,EAAWC,IAEf,IAAM4B,EAAcC,mBAClB,kBACEtC,EAAUuC,KAAI,SAACP,GACb,GAAIA,EAASH,QAAT,OAAkB5B,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAc4B,MAAM,CACxC,IAAIW,EAAUvC,EAAauC,QAQ3B,OAPItC,GAAmC,QAAtBD,EAAa4B,OAC5BW,EACE,KAEElB,OAAOrB,EAAauC,SAAWlB,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAckC,QACpDC,QAAQ,IAEP,CACLb,MAAOS,EAASH,KAChBY,MAAOD,EACPE,KAAMV,EAASW,OAGnB,MAAO,CACLpB,MAAOS,EAASH,KAChBa,KAAMV,EAASW,MACfF,MAAOT,EAASQ,cAGtB,CAACxC,EAAWC,EAAcC,IAGtB0C,EAAwB,SAC5BC,GAEA,GAAIrC,IAAcmB,IAAWC,KAA7B,CACA,IAAMkB,EAAaxB,OAAOf,GAC1B,OAAQsC,GACN,IAAK,UACH,OAAO7B,GAAc8B,EAAa,GAAGV,QAAQ,IAC/C,IAAK,OACH,OAAOpB,GAAc8B,EAAa,GAAGV,QAAQ,IAC/C,IAAK,SACH,OAAOpB,GAA2B,EAAb8B,GAAgBV,QAAQ,IAC/C,IAAK,MACH,IAAMW,EAAatC,EAAYsB,MAC7B,SAACD,GAAD,OAAYA,EAAOD,QAAP,OAAgB5B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAc4B,SAE5C,OAAOb,EAAa+B,EAAaA,EAAWd,YAAc,IAE5D,IAAK,MACH,IAO8C,EAPxCc,EAAatC,EAAYsB,MAC7B,SAACD,GAAD,OAAYA,EAAOD,QAAP,OAAgB5B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAc4B,SAEtCA,EAAO7B,EAAU+B,MACrB,SAACiB,GAAD,OAAcA,EAASnB,QAAT,OAAkB5B,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAc4B,SAE5CW,GAAc,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMW,UAAW,EAC/B,GAAItC,GAAa2B,GAAsB,QAAdA,EAAKA,KAC5BW,EACElB,OAAOO,EAAKW,SAAWlB,OAAM,UAACnB,EAAY0B,EAAKA,aAAlB,aAAC,EAAwBM,OAE1D,OAAOnB,EACLiC,KAAKC,IACH5B,OAAM,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAYI,cAAgB,EACnC7B,OAAOkB,IAAY,GACnBJ,QAAQ,OAMZgB,EAAiB,SAAC,GAEc,IAD1B7B,EACyB,EADnC5E,OAAU4E,MAEJ8B,EACJnD,GAAoC,SAAX,OAAZD,QAAY,IAAZA,OAAA,EAAAA,EAAc4B,MACvBP,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAcuC,SAAWlB,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAckC,OACrDb,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAcuC,SAEvBlB,OAAOC,EAAMC,QAAQ,IAAK,KAAO6B,GACnCT,EAAsB,QAI1BrG,qBAAU,WACJkE,EAAY6C,OAAS,GAAGV,EAAsB,SACjD,QAAC3C,QAAD,IAACA,OAAD,EAACA,EAAc4B,OAElB3F,YAAkB,CAChBgB,aAAc,kBAAM0F,EAAsB,SAC1CzF,aAAc,kBAAMyF,EAAsB,aAG5C,IAAMW,EAAiB1D,EAAK2D,cAAc,CAAEC,GAAI,0BAC1C5E,EAAagB,EAAK2D,cAAc,CAAEC,GAAI,2BACtC3E,EAAae,EAAK2D,cAAc,CAAEC,GAAI,2BAEtCC,GACJ,cAACC,EAAA,EAAD,CACE3F,UAAWG,IAAOyF,QAClBC,OAAQlE,EACRmE,SAAU,kBAAMlB,EAAsB,QACtCmB,QAAS,kBAAMnE,GAAiB,MAIpC,OACE,sBAAK5B,UAAWG,IAAO6F,YAAvB,UACE,sBAAKhG,UAAWG,IAAO8F,cAAvB,UACE,qBAAKjG,UAAWG,IAAO+F,cAAvB,SACE,cAACC,EAAA,EAAD,CACE5C,OAAmB,OAAZtB,QAAY,IAAZA,OAAA,EAAAA,EAAc4B,MAAO5B,EAAa4B,KAAO,GAChDuC,SAAU,SAAC7C,GACT,IAAMM,EAAO7B,EAAU+B,MACrB,SAACC,GAAD,OAAcA,EAASH,OAASN,KAE9BM,GAAMwC,IAAaC,mBAAmBzC,EAAKA,OAEjD0C,QAASlC,MAGb,sBAAKrE,UAAWE,YAAKC,IAAOqG,aAAcrG,IAAOsG,cAAjD,UACE,cAACC,EAAD,CACEjC,MAAOc,EACPhC,MAAOb,EAAO,WAAOH,GAAcA,EACnC6D,SAAUhD,EACV7C,SAAUiC,IAAcmB,IAAWC,KACnC+C,eAAgBxG,IAAOyG,WACvBC,OAAQzB,IAEV,qBAAKpF,UAAWG,IAAO2G,WAAvB,SACE,cAAC,EAAD,CACElG,kBAAkB,EAClBD,kBAAmBiE,EACnB/D,WAAYA,EACZC,WAAYA,EACZC,YAAa,kBAAMa,GAAiB,IALtC,SAMG8D,UAIP,qBAAK1F,UAAWG,IAAOqG,aAAvB,SACE,cAACO,EAAD,CACEtC,MAAOc,EACPhC,MAAOhB,EACP6D,SAAUhD,EACVyD,OAAQzB,EACRuB,eAAgBxG,IAAOyG,WACvBrG,SAAUiC,IAAcmB,IAAWC,KANrC,SAOE,cAAC,EAAD,CACEjD,kBAAmBiE,EACnBhE,kBAAgB,EAChBC,WAAYA,EACZC,WAAYA,EACZC,YAAa,kBAAMa,GAAiB,IALtC,SAMG8D,YAKT,qBAAK1F,UAAWG,IAAO6G,WAAvB,SACE,cAAC,SAAD,CACEzG,SAAUiC,IAAcmB,IAAWC,MAAQnC,EAC3CzB,UAAWG,IAAO8G,UAClB7F,QAASI,EAHX,SAIGK,EAAK2D,cAAc,CAAEC,GAAI,mC,sECrOvByB,EAAiB,SAC5B7E,EACAC,GACI,IAAD,EACa6E,YAAgB,SAAzBC,EADJ,sBAEmDC,oBAA9CC,EAFL,EAEKA,WAAYC,EAFjB,EAEiBA,iBAAkBC,EAFnC,EAEmCA,YAFnC,EAGiCzF,cAA5BE,EAHL,EAGKA,aAAcC,EAHnB,EAGmBA,UAChBuF,EAAWC,sBAETnF,EAAoCF,EAApCE,UAAWoF,EAAyBtF,EAAzBsF,UAAWC,EAAcvF,EAAduF,UAN3B,EASDC,YAAiC,mBAThC,mBAQIC,EARJ,KAQ+BrG,EAR/B,KAQsBsG,QARtB,EAWDF,YAA4B,mBAX3B,mBAUIG,EAVJ,KAU0BC,EAV1B,KAUiBF,QAGEG,EAClBC,kCADFC,iBAAoBF,WAbnB,EAmBCG,YAAoBC,IAAcC,aAHpCrE,EAhBC,EAgBDA,IACAsE,EAjBC,EAiBDA,IACMC,EAlBL,EAkBDC,KAGIC,EAAoB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAC3BX,EAAWO,GACPG,GACFV,EAAWM,GAHc,2CAAH,sDAsF1B,MAAO,CACLM,UAhFa,uCAAG,sCAAAD,EAAA,yDACXvB,GAAerF,EADJ,wDAGZ8G,EAAUxG,EACVL,GAAmC,QAAtBD,EAAa4B,OAC5BkF,GAAWzF,OAAOf,GAAae,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAckC,QAAQC,QAAQ,IAGhE4E,EAAY,CAChB5B,MAAOA,EACPK,SAAUA,EAASwB,OACnBC,YAAW,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAY6B,KACzBJ,QAASA,EACTlF,KAAM5B,EAAa4B,MAbL,SAgBciE,EAAe,CAAEsB,UAAWJ,IAhB1C,mBAgBRK,EAhBQ,EAgBRA,MAAOC,EAhBC,EAgBDA,KAEXD,GACFE,mBAAiBF,MAAM,CACrBG,QAASH,EACTI,QAAS,MArBG,OAyBXH,QAzBW,IAyBXA,OAzBW,EAyBXA,EAAMI,QAzBK,mDA0BhBxB,EAAWhE,GACLyF,EAAerG,OAAOrB,EAAauC,SAAWlB,OAAOyF,GAC3D1C,IAAauD,gBAAgBD,EAAavF,QAAQ,GAAInC,EAAa4B,MAEnEvB,EAAgB,CACdY,KAAM2G,IACN3F,IAAK3B,IAEPD,EAAgB,CACdY,KAAM4G,IACNC,MAAOT,EAAKU,eApCE,4CAAH,qDAiFbtB,KAzCQ,uCAAG,kCAAAG,EAAA,6DACLG,EAAY,CAChB5B,MAAOA,EACPK,SAAUA,EAASwB,OACnBgB,KAAMtC,EAAUuC,QAAO,SAACC,GAAD,MAAmB,UAATA,KAAkBC,KAAK,MAJ/C,SAOmBpC,EAAU,CAAEoB,UAAWJ,IAP1C,mBAOHK,EAPG,EAOHA,MAAOC,EAPJ,EAOIA,KAEXD,GACFE,mBAAiBF,MAAM,CACrBG,QAASH,EACTI,QAAS,MAZF,OAgBNH,QAhBM,IAgBNA,OAhBM,EAgBNA,EAAMI,QAhBA,iDAiBXf,EAAkC,IAAbW,EAAKd,KACtBlB,KAAc,OAACA,QAAD,IAACA,OAAD,EAACA,EAAY+C,eAC7B9C,IAEAC,IAGFlF,EAAgB,CACdY,KAAMoH,IACNP,MAAOT,EAAKiB,WACZC,QAASlB,EAAKkB,UAGhBC,IAAiBC,OAAO,CACtBzH,OAAQK,OAAOsE,GACf+C,OAAQrH,OAAOgG,EAAKqB,QACpB9G,KAAMyF,EAAKzF,OAGbwC,IAAauD,gBAAgBN,EAAK9E,QAAS8E,EAAKzF,MApCrC,4CAAH,qDA0CRpC,wBACAwG,qBCrIA2C,GAA6B,EC0BlBC,EAhCe,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,gBAAiBC,EAA2B,EAA3BA,qBAA2B,EACjC3I,cAAlCC,EADmE,EACnEA,aAAcC,EADqD,EACrDA,gBACdE,EAAcH,EAAdG,WDM0B,SAClCF,GACI,IAAD,EACa6E,YAAgB,SAAzBC,EADJ,oBAEK6B,EAAWvB,sBAAXuB,OACA+B,EAAkB3D,oBAAlB2D,cACAhJ,EAAcD,cAAdC,UAJL,EAOD6F,YAAgC,sBAD3BoD,EANJ,oBASGC,EAAa,uCAAG,kCAAArC,EAAA,yDAEjBI,GACA7B,IACDwD,GACqB,IAArB5I,EAAUsD,OALQ,wDASpBsF,GAA6B,EAEvB5B,EAAY,CAChB5B,MAAOA,EACPK,SAAUwB,GAbQ,SAgBGgC,EAAmB,CAAE7B,UAAWJ,IAhBnC,iBAkBZ,QAFAM,EAhBY,EAgBZA,YAEA,IAAJA,OAAA,EAAAA,EAAMU,gBAAN,OAAsBV,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAM6B,kBAA5B,OAA8C7B,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAMI,WACtDsB,EAAc,CACZ7B,KAAMG,EAAKJ,YACXmB,eAAe,IAEjB/H,EAAgB,CACdY,KAAMkI,IACNrB,MAAOT,EAAKU,aACZzH,UAAW+G,EAAKP,WAEZlF,EAAO7B,EAAU+B,MAAK,SAACC,GAAD,OAAcA,EAASH,OAASyF,EAAKzF,UACvDwC,IAAaC,mBAAmBzC,EAAKA,OA7B7B,2CAAH,qDAiCnBtF,qBAAU,WAER,OADA2M,IACO,WACLN,GAA6B,KAE9B,CAAC5I,EAAUsD,OAAQ2D,EAAQ7B,ICrD9BiE,CAAqB/I,GAJsD,MAMzE4E,EAAe7E,EAAcC,GADvBwG,EALmE,EAKnEA,UAAWrH,EALwD,EAKxDA,sBAAuBiH,EALiC,EAKjCA,KAAMT,EAL2B,EAK3BA,kBCErB,SAC3B3F,GACI,IAAD,EAEDuF,YAA6B,gCAF5B,mBACIyD,EADJ,KACgCC,EADhC,KAC0BjC,KAD1B,EAGgCvH,YAAS,CAAC,YAAa,gBAAlDG,EAHL,EAGKA,UAAWC,EAHhB,EAGgBA,YAEnB5D,qBAAU,WACR+M,MACC,IAEH/M,qBAAU,WACR,UAAIgN,QAAJ,IAAIA,OAAJ,EAAIA,EAA4B7B,QAAS,CACvC,IAAI8B,EAAQD,EAA2BC,MACnCtJ,IACFsJ,EAAQ,GACRD,EAA2BC,MAAMC,SAAQ,SAACC,GACd,IAAD,MAvBTnI,EAAeY,EAuBb,QAAduH,EAAK7H,KACP2H,EAAMG,KAAK,CACT9H,KAAM6H,EAAK7H,KACXI,aA1BYV,EA2BVmI,EAAKzH,YA3BoBE,EA0BE,UAE3BhC,EAAYuJ,EAAK7H,aAFU,aAE3B,EAAwBM,QA1BpCc,KAAK2G,KAAKtI,OAAOC,GAASD,OAAOa,GAAS,KAAa,KACtDC,QAAQ,IA2BCe,aACE7B,OAAOoI,EAAKvG,aAAe7B,OAAM,UAACnB,EAAYuJ,EAAK7H,aAAlB,aAAC,EAAwBM,QAC1D0H,WACFC,gBACExI,OAAOoI,EAAKI,gBACZxI,OAAM,UAACnB,EAAYuJ,EAAK7H,aAAlB,aAAC,EAAwBM,QAC/B0H,aAGJL,EAAMG,KAAKD,OAIjBpJ,EAAgB,CACdY,KAAM6I,IACNjI,OAAQ0H,OAGX,CAACD,EAA4BrJ,EAAWC,ID1C3C6J,CAAc1J,GAEd,IAAM2J,EAAmB5I,uBAAY,WACnC,IAAM6I,EAAW1J,IAAcmB,IAAWC,KAAO8E,EAAOI,EACnDrH,GAA0BwG,GAC7BiE,MAED,CAAC1J,EAAWsG,EAAWJ,EAAMjH,EAAuBwG,IAMvD,OAJA/J,YAAkB,CAChBkB,cAAe6M,IAIf,sBAAKjM,UAAWG,IAAOG,KAAvB,UACE,cAAC6L,EAAA,EAAD,CAAWtG,OAAQiF,EAAiBsB,YAAarB,IACjD,cAAC,EAAD,CACEvJ,iBAAkBgB,IAAcmB,IAAWC,KAAO,aAAWkF,EAC7DrH,sBAAuBA,Q,oCEZzB4K,EAAqB,SACzBvD,EACAJ,EACAlG,GAHyB,aAKxB,mBACEmB,IAAW2I,WAAY,eADzB,cAEE3I,IAAW4I,SAAWzD,GAFxB,cAGEnF,IAAWC,KAAO8E,GAHpB,GAIClG,IAEAgK,EAAkB,EAgGPC,GA9FF,WACX,IAAM5K,EAAOC,yBADI,EAEmBC,YAAS,CAAC,eAAgB,cAAtDE,EAFS,EAETA,aAAcC,EAFL,EAEKA,UAFL,EAGyBE,cAAlCC,EAHS,EAGTA,aAAcC,EAHL,EAGKA,gBACdE,EAAsDH,EAAtDG,UAAWkK,EAA2CrK,EAA3CqK,MAAO/E,EAAoCtF,EAApCsF,UAAW6C,EAAyBnI,EAAzBmI,QAASmC,EAAgBtK,EAAhBsK,YAJ7B,EAMfzF,EAAe7E,EAAcC,GADvBwG,EALS,EAKTA,UAAWJ,EALF,EAKEA,KAAMjH,EALR,EAKQA,sBAAuBwG,EAL/B,EAK+BA,iBAL/B,EAOavG,oBAAkB,GAP/B,mBAOVgB,EAPU,KAODC,EAPC,KASKuF,EAClBC,kCADFC,iBAAoBF,WATL,EAWkBG,YACjCC,IAAcC,aADRqE,EAXS,EAWTA,WAAYC,EAXH,EAWGA,WAIpBtO,qBAAU,WACJiE,IAAcmB,IAAWC,MAC3BjB,EAAWT,GAAoC,SAAX,OAAZD,QAAY,IAAZA,OAAA,EAAAA,EAAc4B,SAEvC,CAACrB,EAAWN,EAAWD,IAE1B,IAAM6K,EAAqBzJ,uBACzB,SAAC0J,EAAsBC,EAA4BC,GAC7CzK,IAAcmB,IAAWC,OACzBqJ,EACF3K,EAAgB,CACdY,KAAMgK,IACNC,SAAUH,KAIU,IAApBR,GACFtE,EAAW0E,GACXJ,MAEAtE,EAAW2E,GACXL,EAAkB,GAEpBlK,EAAgB,CACdY,KAAMkK,IACND,SAAUH,EACV7C,KAAM4C,QAGV,CAACzK,EAAiBE,IAGd6K,EAAO/I,mBAAQ,WACnB,IAAMgJ,EAAc9K,IAAcmB,IAAW4I,SAC7C,OAAOG,EAAMnI,KAAI,SAACwI,EAAWQ,GAC3B,IAAMN,EAAkC,UAArBtF,EAAU4F,GACvBC,EAAgBb,EAAYc,SAASF,GAC3C,OACE,cAAC,IAAD,CAEER,UAAWA,EACXW,SAAU/J,IAAW2I,YAAc9J,EACnC8K,YAAaA,IAAgBL,EAC7BU,SAAUV,GAAczK,IAAcmB,IAAWC,KACjD4J,cAAeA,GAAiBhL,IAAcmB,IAAW4I,SACzDqB,QAASJ,GAAiBhL,IAAcmB,IAAW4I,SACnDnL,QAAS,kBACP0L,EAAmBC,EAAWQ,EAAuBN,KATzD,0BAC0BF,EAD1B,YACuCQ,SAa1C,CAAC/K,EAAWkK,EAAO/E,EAAWgF,EAAaG,IAE9C,OACE,sBAAK9M,UAAWG,IAAOG,KAAvB,UACE,cAAC,IAAD,CACEkK,QAASA,EACTqD,WAAYxL,EAAaE,UACzBsB,MAAkB,OAAZ5B,QAAY,IAAZA,OAAA,EAAAA,EAAc4B,OAAQ,GAC5BnB,QAASA,IAEX,cAAC,IAAD,CACEtB,QAASiL,EAAmBvD,EAAWJ,EAAMlG,GAC7CjC,SACEiC,IAAcmB,IAAW2I,WACzB7K,GACAwG,EAEF6F,aAActL,IAAcmB,IAAWC,KAPzC,SAQGpB,IAAcmB,IAAW4I,SACtB1K,EAAK2D,cAAc,CAAEC,GAAI,6BACzB5D,EAAK2D,cAAc,CAAEC,GAAI,8BAE/B,cAAC,IAAD,UAAY4H,Q,UCrHZU,GAAqBC,IAAMC,MAAK,kBACpCC,YAAoB,6CAiDPC,GA9CQ,WAAO,IAAD,EACWzM,oBAAS,GADpB,mBACpB0M,EADoB,KACPC,EADO,OAEa3M,oBAAS,GAFtB,mBAEpB4M,EAFoB,KAENC,EAFM,OAGmB7M,oBAAS,GAH5B,mBAGpBoJ,EAHoB,KAGH0D,EAHG,OAIe9M,oBAAS,GAJxB,mBAIpB+M,EAJoB,KAILC,EAJK,KAM3B,OACE,sBAAK1O,UAAWG,IAAOG,KAAvB,UACE,eAAC,IAAD,WACE,cAACqO,GAAA,YAAD,CACE9I,OAAQuI,EACRrI,QAAS,kBAAMsI,GAAe,MAEhC,cAACO,EAAA,EAAD,CACE/I,OAAQyI,EACRvI,QAAS,kBAAMwI,GAAgB,MAEjC,cAAC,GAAD,IACA,qBAAKvO,UAAWG,IAAO0O,UACvB,qBAAK7O,UAAWG,IAAO2O,cAAvB,SACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,aAAc,kBAAMZ,GAAe,IACnCa,gBAAiB,kBAAMV,GAAmB,IAC1CW,eAAgB,kBAAMZ,GAAgB,IACtCa,0BAA2B,kBAAMV,GAAiB,QAGtD,qBAAK1O,UAAWG,IAAOkP,QACvB,cAAC,EAAD,CACEtE,qBAAsB,kBAAMyD,GAAmB,IAC/C1D,gBAAiBA,OAGrB,sBAAK9K,UAAWG,IAAOmP,kBAAvB,UACE,cAACvB,GAAD,CACEwB,KAAK,aACL1J,OAAQ4I,EACR1I,QAAS,kBAAM2I,GAAiB,MAElC,cAAC,aAAD,CAAYc,cAAY,WCxBjBC,UAzBW,WACxB,OACE,qCACE,eAACC,EAAA,EAAD,WACE,yEACA,sBAAMC,KAAK,QAAQC,QAAQ,0CAC3B,sBACED,KAAK,cACLC,QAAQ,yGAEV,sBACED,KAAK,WACLC,QAAQ,gEAEV,sBAAMD,KAAK,SAASC,QAAQ,kBAC5B,sBAAMC,aAAW,eAAeD,QAAQ,6BACxC,sBAAMD,KAAK,WAAWC,QAAQ,eAEhC,cAACE,EAAA,EAAD,CAAcC,SAAS,aAAvB,SACE,cAAC,GAAD,W,+bC3BIpM,E,gCCCCyJ,EAAgB,gBAChBF,EAAmB,mBAGnB/J,EAAiB,iBAQjB2G,EAAa,aACbQ,EAAO,OACPc,EAAmB,mBAGnBvB,EAAiB,iBAEjBkC,EAAmB,mBChBnBiE,EAAiB,SAACrI,EAAiBwF,GAC9C,IAAM8C,EAAa,YAAOtI,GAE1B,OADAsI,EAAc9C,GAAY,QACnB8C,GAGIC,EAAW,SACtBvI,EACAwF,EACAhD,GAEA,IAAM8F,EAAa,YAAOtI,GAE1B,OADAsI,EAAc9C,GAAYhD,EACnB8F,G,wBCVHE,EAAqC,CAAC,EAAG,EAAG,EAAG,EAAG,GAClDC,EAAmB,2BAAUD,IAM7BE,EAAgB,SAAC3D,EAAyBlC,GAC9C,IAAM8F,EAAoB,GAC1B5D,EAAMjB,SAAQ,SAACsB,GACbuD,EAAkBC,IAAKC,QAAQzD,GAAW0D,WACxCC,YAAUJ,EAAmBC,IAAKC,QAAQzD,GAAW0D,UAAW,GAAK,KAGzE,IAAME,EAAwBnG,IAAYoG,IAASC,wBAC7C9G,EAA6B,GAYnC,OAXA2C,EAAMjB,SAAQ,SAACsB,EAAWI,GACxB,IAAM2D,EACJC,mBAASR,IAAKC,QAAQzD,GAAW0D,YAAcE,EAE/CL,EAAkBC,IAAKC,QAAQzD,GAAW0D,WAAa,IACtDK,GAED/G,EAAM4B,KAAKwB,MAIRpD,GAGHiH,GAGL,mBACEJ,IAASK,YAAcb,GADzB,cAEEQ,IAASM,eAAiBd,GAF5B,cAGEQ,IAASO,MAAQf,GAHnB,cAIEQ,IAASQ,eAAiBf,GAJ5B,cAKEO,IAASS,WAAajB,GALxB,cAMEQ,IAASU,SAAWlB,GANtB,cAOEQ,IAASW,gBAAkBlB,GAP7B,cAQEO,IAASY,SAAWnB,GARtB,cASEO,IAASC,wBAA0BR,GATrC,cAUEO,IAASa,SAAU,iBAAM,MAV3B,GAaYC,EAAoB,SAAChF,EAAyBlC,GAA1B,OAC/BwG,EAAaxG,GAASkC,EAAOlC,K,SHtDnB7G,O,yBAAAA,I,eAAAA,I,wBAAAA,M,KIWZ,IAEMgO,EAAuB,IAAIC,MAFd,GAEgCC,KAAK,SAE3CC,EAAwD,CACnEpF,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GACpB/E,UAAU,YAAKgK,GACfnP,UAAWmB,EAAW2I,UACtB/J,UAAW,WACXiI,QAASoG,IAASa,QAClB9E,YAAa,GACb/E,UAAW,GACXnF,YAAa,IAGFsP,EAA2B,SACtCC,EACAC,GAEA,OAAQA,EAAO/O,MACb,KAAKgP,EACH,OAAO,2BACFF,GADL,IAEErF,YAAa,GACbhF,UAAU,YAAKgK,GACfnH,QAASoG,IAASa,QAClB/E,MAAOuF,EAAOlI,MACdvH,UAAWmB,EAAWC,OAG1B,KAAKsO,EAIH,OAHAC,QAAQC,IAAIH,EAAOlI,OACnBoI,QAAQC,IAAIH,EAAOzH,SAEZ,2BACFwH,GADL,IAEEtF,MAAOuF,EAAOlI,MACdS,QAASyH,EAAOzH,QAChBhI,UAAWmB,EAAW4I,SACtBI,YAAa+E,EAAkBO,EAAOlI,MAAOkI,EAAOzH,WAGxD,KAAK0H,EACH,OAAO,2BACFF,GADL,IAEEtF,MAAOuF,EAAOlI,MACdvH,UAAWmB,EAAWC,KACtBrB,UAAW0P,EAAO1P,UAClBqF,UAAWqK,EAAO1P,YAGtB,IH9DqB,YG+DnB,OAAO,2BACFyP,GADL,IAEEtF,MAAOuF,EAAOlI,QAGlB,KAAKmI,EACH,OAAO,2BACFF,GADL,IAEErK,UAAWuI,EAAS8B,EAAMrK,UAAWsK,EAAO9E,SAAU8E,EAAO9H,QAGjE,KAAK+H,EACH,OAAO,2BACFF,GADL,IAEErK,UAAWqI,EAAegC,EAAMrK,UAAWsK,EAAO9E,YAGtD,IH5E0B,iBG6ExB,OAAO,2BACF6E,GADL,IAEExP,UAAWyP,EAAOI,QAGtB,KAAKH,EACH,OAAO,2BACFF,GADL,IAEEzP,UAAW0P,EAAOhP,SAGtB,IHrFuB,cGsFrB,OAAO,2BACF+O,GADL,IAEExH,QAASyH,EAAOzH,UAGpB,IHxF4B,mBGyF1B,OAAO,2BACFwH,GADL,IAEErK,UAAU,YAAKgK,KAGnB,IHhG2B,kBGiGzB,OAAO,2BACFK,GADL,IAEErF,YAAa+E,EAAkBO,EAAOlI,MAAOkI,EAAOzH,WAGxD,IHnG6B,oBGoG3B,OAAO,2BACFwH,GADL,IAEErF,YAAa,KAGjB,KAAKuF,EACH,OAAO,2BACFF,GADL,IAEEpK,UAAWqK,EAAO/N,MAGtB,KAAKgO,EACH,OAAO,2BACFF,GADL,IAEEvP,YAAawP,EAAOnO,SAGxB,QACE,OAAOkO,ICvHAM,EAAyC,CACpDjQ,aAAcyP,EACdxP,gBAAiB,cAKJiQ,EAFCC,wBAAwCF,G,eCUzCG,EAjBuB,SAAC,GAAkB,IAAhBjS,EAAe,EAAfA,SAAe,EACdkS,qBACtCX,EACAD,GAHoD,mBAC/CzP,EAD+C,KACjCC,EADiC,KAMtD,OACE,cAAC,EAAQqQ,SAAT,CACEpP,MAAO,CACLlB,eACAC,mBAHJ,SAKG9B,KCLM4B,EAAuB,kBAAMwQ,qBAAWL","file":"static/js/54.c997b248.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__9xSWM\",\"optionWrapper\":\"style_optionWrapper__1_CpM\",\"hrSmall\":\"style_hrSmall__2Fc_A\",\"hrBig\":\"style_hrBig__2SLHg\",\"statisticsWrapper\":\"style_statisticsWrapper__3PX2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"video-poker\":\"style_video-poker__2ywvW\",\"wrapper\":\"style_wrapper__3Ymn9\",\"root\":\"style_root__2jG4q\",\"disabled\":\"style_disabled__A2Tmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"wrapper\":\"style_wrapper__36ZP_\",\"root\":\"style_root__1M8JM\",\"disabled\":\"style_disabled__hoAv2\",\"buttonsWrapper\":\"style_buttonsWrapper__1vt0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"video-poker\":\"style_video-poker__2XCGR\",\"wrapper\":\"style_wrapper__3afAl\",\"root\":\"style_root__2PVZ8\",\"disabled\":\"style_disabled__1vfJd\",\"rootWrapper\":\"style_rootWrapper__3OCNN\",\"currencyBlock\":\"style_currencyBlock__1m2wc\",\"selectWrapper\":\"style_selectWrapper__3IJyo\",\"inputWrapper\":\"style_inputWrapper__1CH8x\",\"desktopInput\":\"style_desktopInput__1RFCS\",\"btnWrapper\":\"style_btnWrapper__1Ip4E\",\"betButtons\":\"style_betButtons__2Swo3\",\"betButton\":\"style_betButton__PmOwp\",\"highlight\":\"style_highlight__TI1nd\",\"inputLabel\":\"style_inputLabel__FjjCu\",\"warning\":\"style_warning__1LYmR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"button\":\"style_button__15poo\",\"btnLeft\":\"style_btnLeft__2qXIJ\",\"btnRight\":\"style_btnRight__3Vd3a\",\"btnCenter\":\"style_btnCenter__2rqeD\",\"mobileInputBtn\":\"style_mobileInputBtn__1VHsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3UGC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__-cqOd\"};","import { useEffect } from \"react\";\r\nimport { isKeyboardEvent } from \"utils/guards\";\r\nimport { useHotKeys } from \"../Provider\";\r\n\r\nenum ActiveKeys {\r\n  KeyA,\r\n  KeyS,\r\n  Space,\r\n  KeyQ,\r\n  KeyW,\r\n  KeyE,\r\n  KeyR,\r\n  KeyT,\r\n  KeyY,\r\n  KeyD,\r\n}\r\n\r\nexport interface HotKeysCallbacks {\r\n  callbackKeyA?: () => void;\r\n  callbackKeyS?: () => void;\r\n  callbackSpace?: () => void;\r\n  callbackKeyQ?: () => void;\r\n  callbackKeyW?: () => void;\r\n  callbackKeyE?: () => void;\r\n  callbackKeyR?: () => void;\r\n  callbackKeyT?: () => void;\r\n  callbackKeyY?: () => void;\r\n  callbackKeyD?: () => void;\r\n}\r\n\r\nexport const useHotKeyListener = (callbacks: HotKeysCallbacks) => {\r\n  const { isHotkeyActive, isHotKeysPaused } = useHotKeys();\r\n\r\n  useEffect(() => {\r\n    const keyDownListenerIgnore = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    const keyListener = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n        const {\r\n          callbackKeyA,\r\n          callbackKeyS,\r\n          callbackSpace,\r\n          callbackKeyQ,\r\n          callbackKeyW,\r\n          callbackKeyE,\r\n          callbackKeyR,\r\n          callbackKeyT,\r\n          callbackKeyY,\r\n          callbackKeyD,\r\n        } = callbacks;\r\n        switch (key) {\r\n          case \"KeyA\":\r\n            if (callbackKeyA) callbackKeyA();\r\n            break;\r\n          case \"KeyS\":\r\n            if (callbackKeyS) callbackKeyS();\r\n            break;\r\n          case \"Space\":\r\n            if (callbackSpace) callbackSpace();\r\n            break;\r\n          case \"KeyQ\":\r\n            if (callbackKeyQ) callbackKeyQ();\r\n            break;\r\n          case \"KeyW\":\r\n            if (callbackKeyW) callbackKeyW();\r\n            break;\r\n          case \"KeyE\":\r\n            if (callbackKeyE) callbackKeyE();\r\n            break;\r\n          case \"KeyR\":\r\n            if (callbackKeyR) callbackKeyR();\r\n            break;\r\n          case \"KeyT\":\r\n            if (callbackKeyT) callbackKeyT();\r\n            break;\r\n          case \"KeyY\":\r\n            if (callbackKeyY) callbackKeyY();\r\n            break;\r\n          case \"KeyD\":\r\n            if (callbackKeyD) callbackKeyD();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", keyDownListenerIgnore);\r\n    window.addEventListener(\"keyup\", keyListener);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyDownListenerIgnore);\r\n      window.removeEventListener(\"keyup\", keyListener);\r\n    };\r\n  }, [isHotkeyActive, isHotKeysPaused, callbacks]);\r\n};\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Input as InputBase, InputProps } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst Input: FC<InputProps> = ({ className, ...props }) => {\r\n  return (\r\n    <div className={clsx(styles.wrapper, className)}>\r\n      <InputBase\r\n        {...props}\r\n        classes={{\r\n          root: styles.root,\r\n          disabled: styles.disabled,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Input as InputBase, InputProps } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst Input: FC<InputProps> = ({ children, className, ...props }) => {\r\n  return (\r\n    <div className={clsx(styles.wrapper, className)}>\r\n      <InputBase\r\n        {...props}\r\n        classes={{\r\n          root: styles.root,\r\n          disabled: styles.disabled,\r\n        }}\r\n      />\r\n      <div className={styles.buttonsWrapper}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Button } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  setRelativeAmount: (\r\n    proportion: \"quarter\" | \"half\" | \"max\" | \"min\" | \"double\",\r\n  ) => void;\r\n  isForMobileInput: boolean;\r\n  minBtnText: string;\r\n  maxBtnText: string;\r\n  openWarning: () => void;\r\n}\r\n\r\nconst ButtonGroup: FC<Props> = ({\r\n  setRelativeAmount,\r\n  isForMobileInput,\r\n  minBtnText,\r\n  maxBtnText,\r\n  openWarning,\r\n  children,\r\n}) => {\r\n  let btnClass = styles.button;\r\n  if (isForMobileInput) btnClass = clsx(styles.button, styles.mobileInputBtn);\r\n\r\n  return (\r\n    <>\r\n      {children}\r\n      <Button\r\n        className={clsx(btnClass, styles.btnLeft)}\r\n        onClick={() => setRelativeAmount(\"min\")}>\r\n        {minBtnText}\r\n      </Button>\r\n      <Button\r\n        className={clsx(btnClass, styles.btnCenter)}\r\n        onClick={() => setRelativeAmount(\"half\")}>\r\n        1/2\r\n      </Button>\r\n      <Button\r\n        className={clsx(btnClass, styles.btnCenter)}\r\n        onClick={() => setRelativeAmount(\"double\")}>\r\n        2x\r\n      </Button>\r\n      <Button className={clsx(btnClass, styles.btnRight)} onClick={openWarning}>\r\n        {maxBtnText}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonGroup;\r\n","import React, {\r\n  FC,\r\n  ChangeEvent,\r\n  ChangeEventHandler,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Button } from \"components\";\r\nimport { coinsManager, useCoins } from \"hooks\";\r\n\r\nimport { useHotKeyListener } from \"components/HotKeys/Listener\";\r\nimport Warning from \"components/Warning\";\r\nimport Select from \"components/Select\";\r\n\r\nimport DesktopInput from \"./components/DesktopInput\";\r\nimport MobileInput from \"./components/MobileInput\";\r\nimport styles from \"./style.module.scss\";\r\nimport { useVideoPokerControl, GamePhases, SET_BET_AMOUNT } from \"../Reducer\";\r\nimport ButtonGroup from \"./components/ButtonGroup\";\r\n\r\ninterface Props {\r\n  betButtonOnClick: () => void;\r\n  startGameFetchLoading: boolean;\r\n}\r\n\r\nconst Bet: FC<Props> = ({ betButtonOnClick, startGameFetchLoading }) => {\r\n  const [isWarningOpen, setIsWarningOpen] = useState(false);\r\n\r\n  const intl = useGetLocale();\r\n  const { coinsList, selectedCoin, showInUSD, coinsPrices } = useCoins();\r\n  const { controlState, controlDispatch } = useVideoPokerControl();\r\n  const { betAmount, gamePhase, coinsConfig } = controlState;\r\n  const [USDMode, setUSDMode] = useState<boolean>(false);\r\n  const [isInit, setInit] = useState(false);\r\n  const [isUSDCurrent, setIsUSDCurrent] = useState(false);\r\n\r\n  const setBetAmount = (amount: string) => {\r\n    controlDispatch({\r\n      type: SET_BET_AMOUNT,\r\n      amount,\r\n    });\r\n  };\r\n\r\n  const setBetAmountHandler = useCallback<ChangeEventHandler<HTMLInputElement>>(\r\n    (event) => {\r\n      const amount = Number(event.target.value.replace(\"$\", \"\"));\r\n      if (isNaN(amount) || !isFinite(amount)) return;\r\n      setBetAmount(event.target.value.replace(\"$\", \"\"));\r\n    },\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (gamePhase !== GamePhases.HOLD) {\r\n      setUSDMode(showInUSD && selectedCoin?.coin !== \"GEM\");\r\n    }\r\n  }, [selectedCoin, gamePhase, showInUSD]);\r\n\r\n  useEffect(() => {\r\n    const config = coinsConfig.find(\r\n      (currency) => currency.coin === selectedCoin?.coin,\r\n    );\r\n    if (!selectedCoin || !config) {\r\n      return;\r\n    }\r\n\r\n    if (!isInit) {\r\n      controlDispatch({\r\n        type: SET_BET_AMOUNT,\r\n        amount: config.minimum_bet,\r\n      });\r\n      setInit(true);\r\n      setIsUSDCurrent(showInUSD);\r\n      return;\r\n    }\r\n\r\n    if (gamePhase !== GamePhases.HOLD) {\r\n      if (isUSDCurrent === showInUSD) {\r\n        return;\r\n      }\r\n      if (selectedCoin.coin === \"GEM\") {\r\n        setIsUSDCurrent(showInUSD);\r\n        return;\r\n      }\r\n      let bet: string;\r\n      if (showInUSD) {\r\n        bet = (\r\n          Number(controlState.betAmount) * Number(selectedCoin?.price)\r\n        ).toFixed(8);\r\n      } else {\r\n        bet = (\r\n          Number(controlState.betAmount) / Number(selectedCoin?.price)\r\n        ).toFixed(8);\r\n      }\r\n      controlDispatch({\r\n        type: SET_BET_AMOUNT,\r\n        amount:\r\n          Number(config.minimum_bet) > Number(bet) ? config.minimum_bet : bet,\r\n      });\r\n      setIsUSDCurrent(showInUSD);\r\n    }\r\n  }, [gamePhase, coinsConfig]);\r\n\r\n  const coinOptions = useMemo(\r\n    () =>\r\n      coinsList.map((currency) => {\r\n        if (currency.coin === selectedCoin?.coin) {\r\n          let balance = selectedCoin.balance;\r\n          if (showInUSD && selectedCoin.coin !== \"GEM\") {\r\n            balance =\r\n              \"$\" +\r\n              (\r\n                Number(selectedCoin.balance) * Number(selectedCoin?.price)\r\n              ).toFixed(8);\r\n          }\r\n          return {\r\n            value: currency.coin,\r\n            label: balance,\r\n            icon: currency.image,\r\n          };\r\n        }\r\n        return {\r\n          value: currency.coin,\r\n          icon: currency.image,\r\n          label: currency.balance,\r\n        };\r\n      }),\r\n    [coinsList, selectedCoin, showInUSD],\r\n  );\r\n\r\n  const setProportionalAmount = (\r\n    proportion: \"quarter\" | \"half\" | \"max\" | \"min\" | \"double\",\r\n  ) => {\r\n    if (gamePhase === GamePhases.HOLD) return;\r\n    const currentBet = Number(betAmount);\r\n    switch (proportion) {\r\n      case \"quarter\":\r\n        return setBetAmount((currentBet / 4).toFixed(8));\r\n      case \"half\":\r\n        return setBetAmount((currentBet / 2).toFixed(8));\r\n      case \"double\":\r\n        return setBetAmount((currentBet * 2).toFixed(8));\r\n      case \"min\": {\r\n        const coinConfig = coinsConfig.find(\r\n          (config) => config.coin === selectedCoin?.coin,\r\n        );\r\n        return setBetAmount(coinConfig ? coinConfig.minimum_bet : \"\");\r\n      }\r\n      case \"max\": {\r\n        const coinConfig = coinsConfig.find(\r\n          (config) => config.coin === selectedCoin?.coin,\r\n        );\r\n        const coin = coinsList.find(\r\n          (coinInfo) => coinInfo.coin === selectedCoin?.coin,\r\n        );\r\n        let balance = coin?.balance || 0;\r\n        if (showInUSD && coin && coin.coin !== \"GEM\") {\r\n          balance =\r\n            Number(coin.balance) * Number(coinsPrices[coin.coin]?.price);\r\n        }\r\n        return setBetAmount(\r\n          Math.min(\r\n            Number(coinConfig?.maximum_bet) || 0,\r\n            Number(balance) || 0,\r\n          ).toFixed(8),\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const betInputOnBlur = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => {\r\n    const convertedBalance =\r\n      showInUSD && selectedCoin?.coin !== \"GEM\"\r\n        ? Number(selectedCoin?.balance) * Number(selectedCoin?.price)\r\n        : Number(selectedCoin?.balance);\r\n\r\n    if (Number(value.replace(\"$\", \"\")) > convertedBalance) {\r\n      setProportionalAmount(\"min\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (coinsConfig.length > 0) setProportionalAmount(\"min\");\r\n  }, [selectedCoin?.coin]);\r\n\r\n  useHotKeyListener({\r\n    callbackKeyA: () => setProportionalAmount(\"half\"),\r\n    callbackKeyS: () => setProportionalAmount(\"double\"),\r\n  });\r\n\r\n  const inputLabelText = intl.formatMessage({ id: \"videopoker.inputLabel\" });\r\n  const minBtnText = intl.formatMessage({ id: \"videopoker.buttons.min\" });\r\n  const maxBtnText = intl.formatMessage({ id: \"videopoker.buttons.max\" });\r\n\r\n  const warningModal = (\r\n    <Warning\r\n      className={styles.warning}\r\n      isOpen={isWarningOpen}\r\n      callBack={() => setProportionalAmount(\"max\")}\r\n      onClose={() => setIsWarningOpen(false)}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={styles.rootWrapper}>\r\n      <div className={styles.currencyBlock}>\r\n        <div className={styles.selectWrapper}>\r\n          <Select\r\n            value={selectedCoin?.coin ? selectedCoin.coin : \"\"}\r\n            onChange={(value) => {\r\n              const coin = coinsList.find(\r\n                (currency) => currency.coin === value,\r\n              );\r\n              if (coin) coinsManager.changeSelectedCoin(coin.coin);\r\n            }}\r\n            options={coinOptions}\r\n          />\r\n        </div>\r\n        <div className={clsx(styles.inputWrapper, styles.desktopInput)}>\r\n          <DesktopInput\r\n            label={inputLabelText}\r\n            value={USDMode ? `$${betAmount}` : betAmount}\r\n            onChange={setBetAmountHandler}\r\n            disabled={gamePhase === GamePhases.HOLD}\r\n            labelClassName={styles.inputLabel}\r\n            onBlur={betInputOnBlur}\r\n          />\r\n          <div className={styles.btnWrapper}>\r\n            <ButtonGroup\r\n              isForMobileInput={false}\r\n              setRelativeAmount={setProportionalAmount}\r\n              minBtnText={minBtnText}\r\n              maxBtnText={maxBtnText}\r\n              openWarning={() => setIsWarningOpen(true)}>\r\n              {warningModal}\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n        <div className={styles.inputWrapper}>\r\n          <MobileInput\r\n            label={inputLabelText}\r\n            value={betAmount}\r\n            onChange={setBetAmountHandler}\r\n            onBlur={betInputOnBlur}\r\n            labelClassName={styles.inputLabel}\r\n            disabled={gamePhase === GamePhases.HOLD}>\r\n            <ButtonGroup\r\n              setRelativeAmount={setProportionalAmount}\r\n              isForMobileInput\r\n              minBtnText={minBtnText}\r\n              maxBtnText={maxBtnText}\r\n              openWarning={() => setIsWarningOpen(true)}>\r\n              {warningModal}\r\n            </ButtonGroup>\r\n          </MobileInput>\r\n        </div>\r\n      </div>\r\n      <div className={styles.betButtons}>\r\n        <Button\r\n          disabled={gamePhase === GamePhases.HOLD || startGameFetchLoading}\r\n          className={styles.betButton}\r\n          onClick={betButtonOnClick}>\r\n          {intl.formatMessage({ id: \"videopoker.buttons.bet\" })}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bet;\r\n","import { Dispatch } from \"react\";\r\n\r\nimport { coinsManager, useCoins, useFetch, useLocalStorage } from \"hooks\";\r\nimport { useSeed, useLocale } from \"providers\";\r\nimport { notifyBarManager } from \"components\";\r\n\r\nimport { CardIndex, Outcomes } from \"games/VideoPoker\";\r\n\r\nimport {\r\n  VideoPokerControlState,\r\n  VideoPokerControlActions,\r\n  START_GAME,\r\n  DEAL,\r\n  SET_ACTUAL_BET,\r\n} from \"../components/Reducer\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport { liveStatsManager } from \"components/LiveStats/eventEmitter/emitter\";\r\n\r\ninterface StartGameFetchResponse {\r\n  message: string;\r\n  initial_hand: Array<CardIndex>;\r\n  success: boolean;\r\n}\r\n\r\ninterface DealFetchResponse {\r\n  message: string;\r\n  win: number;\r\n  payout: number;\r\n  outcome: Outcomes;\r\n  coin: string;\r\n  balance: string;\r\n  profit: string;\r\n  final_hand: Array<CardIndex>;\r\n  success: boolean;\r\n}\r\n\r\nexport const useGameSession = (\r\n  controlState: VideoPokerControlState,\r\n  controlDispatch: Dispatch<VideoPokerControlActions>,\r\n) => {\r\n  const [token] = useLocalStorage(\"token\");\r\n  const { clientSeed, rotateClientSeed, updateNonce } = useSeed();\r\n  const { selectedCoin, showInUSD } = useCoins();\r\n  const language = useLocale();\r\n\r\n  const { betAmount, holdCards, actualBet } = controlState;\r\n\r\n  const [startGameFetch, { loading: startGameFetchLoading }] =\r\n    useFetch<StartGameFetchResponse>(\"videopoker/play\");\r\n  const [dealFetch, { loading: dealFetchLoading }] =\r\n    useFetch<DealFetchResponse>(\"videopoker/deal\");\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const {\r\n    bet,\r\n    win,\r\n    deal: dealEffect,\r\n  } = getSoundEffectNames(gamePathNames.VIDEO_POKER);\r\n\r\n  const playDealSoundEffects = async (isWin: boolean) => {\r\n    playEffect(dealEffect);\r\n    if (isWin) {\r\n      playEffect(win);\r\n    }\r\n  };\r\n\r\n  const startGame = async () => {\r\n    if (!clientSeed || !selectedCoin) return;\r\n\r\n    let bet_amt = betAmount;\r\n    if (showInUSD && selectedCoin.coin !== \"GEM\") {\r\n      bet_amt = (Number(betAmount) / Number(selectedCoin?.price)).toFixed(8);\r\n    }\r\n\r\n    const reqParams = {\r\n      token: token,\r\n      language: language.locale,\r\n      client_seed: clientSeed?.seed,\r\n      bet_amt: bet_amt,\r\n      coin: selectedCoin.coin,\r\n    };\r\n\r\n    const { error, data } = await startGameFetch({ variables: reqParams });\r\n\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        message: error,\r\n        timeOut: 4000,\r\n      });\r\n    }\r\n\r\n    if (!data?.success) return;\r\n    playEffect(bet);\r\n    const newCoinValue = Number(selectedCoin.balance) - Number(bet_amt);\r\n    coinsManager.coinValueUpdate(newCoinValue.toFixed(8), selectedCoin.coin);\r\n\r\n    controlDispatch({\r\n      type: SET_ACTUAL_BET,\r\n      bet: betAmount,\r\n    });\r\n    controlDispatch({\r\n      type: START_GAME,\r\n      cards: data.initial_hand,\r\n    });\r\n  };\r\n\r\n  const deal = async () => {\r\n    const reqParams = {\r\n      token: token,\r\n      language: language.locale,\r\n      hold: holdCards.filter((card) => card !== \"empty\").join(\",\"),\r\n    };\r\n\r\n    const { error, data } = await dealFetch({ variables: reqParams });\r\n\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        message: error,\r\n        timeOut: 4000,\r\n      });\r\n    }\r\n\r\n    if (!data?.success) return;\r\n    playDealSoundEffects(data.win !== 0);\r\n    if (clientSeed && !clientSeed?.isSetManually) {\r\n      rotateClientSeed();\r\n    } else {\r\n      updateNonce();\r\n    }\r\n\r\n    controlDispatch({\r\n      type: DEAL,\r\n      cards: data.final_hand,\r\n      outcome: data.outcome,\r\n    });\r\n\r\n    liveStatsManager.addBet({\r\n      amount: Number(actualBet),\r\n      profit: Number(data.profit),\r\n      coin: data.coin,\r\n    });\r\n\r\n    coinsManager.coinValueUpdate(data.balance, data.coin);\r\n  };\r\n\r\n  return {\r\n    startGame,\r\n    deal,\r\n    startGameFetchLoading,\r\n    dealFetchLoading,\r\n  };\r\n};\r\n","import { useEffect, useCallback, Dispatch } from \"react\";\r\n\r\nimport { coinsManager, useCoins, useFetch, useLocalStorage } from \"hooks\";\r\nimport { useLocale, useSeed } from \"providers\";\r\nimport { CardIndex } from \"games/VideoPoker\";\r\n\r\nimport {\r\n  VideoPokerControlActions,\r\n  SET_GAME_SESSION,\r\n} from \"../components/Reducer\";\r\n\r\ninterface SearchSessionResponse {\r\n  message: string;\r\n  session_exists: boolean;\r\n  bet_amt: string;\r\n  coin: string;\r\n  client_seed: string;\r\n  initial_hand: Array<CardIndex>;\r\n  success: boolean;\r\n}\r\n\r\nlet isCheckedUnfinishedSession = false;\r\n\r\nexport const useLatestGameSession = (\r\n  controlDispatch: Dispatch<VideoPokerControlActions>,\r\n) => {\r\n  const [token] = useLocalStorage(\"token\");\r\n  const { locale } = useLocale();\r\n  const { setClientSeed } = useSeed();\r\n  const { coinsList } = useCoins();\r\n\r\n  const [searchSessionFetch] =\r\n    useFetch<SearchSessionResponse>(\"videopoker/session\");\r\n\r\n  const searchSession = async () => {\r\n    if (\r\n      !locale ||\r\n      !token ||\r\n      isCheckedUnfinishedSession ||\r\n      coinsList.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n    isCheckedUnfinishedSession = true;\r\n\r\n    const reqParams = {\r\n      token: token,\r\n      language: locale,\r\n    };\r\n\r\n    const { data } = await searchSessionFetch({ variables: reqParams });\r\n\r\n    if (data?.initial_hand && data?.session_exists && data?.success) {\r\n      setClientSeed({\r\n        seed: data.client_seed,\r\n        isSetManually: false,\r\n      });\r\n      controlDispatch({\r\n        type: SET_GAME_SESSION,\r\n        cards: data.initial_hand,\r\n        betAmount: data.bet_amt,\r\n      });\r\n      const coin = coinsList.find((currency) => currency.coin === data.coin);\r\n      if (coin) coinsManager.changeSelectedCoin(coin.coin);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchSession();\r\n    return () => {\r\n      isCheckedUnfinishedSession = false;\r\n    };\r\n  }, [coinsList.length, locale, token]);\r\n};\r\n","import React, { FC, useCallback } from \"react\";\r\n\r\nimport { useHotKeyListener } from \"components/HotKeys/Listener\";\r\nimport LiveStats from \"components/LiveStats\";\r\n\r\nimport Bet from \"./components/Bet\";\r\nimport { useVideoPokerControl, GamePhases } from \"./components/Reducer\";\r\nimport styles from \"./style.module.scss\";\r\nimport { useGameSession, useLatestGameSession, useGameConfig } from \"./hooks\";\r\n\r\ninterface Props {\r\n  liveStatsIsOpen: boolean;\r\n  liveStatsHandleClose: () => void;\r\n}\r\n\r\nconst Controller: FC<Props> = ({ liveStatsIsOpen, liveStatsHandleClose }) => {\r\n  const { controlState, controlDispatch } = useVideoPokerControl();\r\n  const { gamePhase } = controlState;\r\n\r\n  useLatestGameSession(controlDispatch);\r\n  const { startGame, startGameFetchLoading, deal, dealFetchLoading } =\r\n    useGameSession(controlState, controlDispatch);\r\n  useGameConfig(controlDispatch);\r\n\r\n  const hotKeyBetHandler = useCallback(() => {\r\n    const playFunc = gamePhase === GamePhases.HOLD ? deal : startGame;\r\n    if (!startGameFetchLoading && !dealFetchLoading) {\r\n      playFunc();\r\n    }\r\n  }, [gamePhase, startGame, deal, startGameFetchLoading, dealFetchLoading]);\r\n\r\n  useHotKeyListener({\r\n    callbackSpace: hotKeyBetHandler,\r\n  });\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <LiveStats isOpen={liveStatsIsOpen} handleClose={liveStatsHandleClose} />\r\n      <Bet\r\n        betButtonOnClick={gamePhase === GamePhases.HOLD ? () => {} : startGame}\r\n        startGameFetchLoading={startGameFetchLoading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { VideoPokerControlProvider } from \"./components/Reducer\";\r\nexport default Controller;\r\n","import { useEffect, Dispatch } from \"react\";\r\n\r\nimport { useCoins, useFetch } from \"hooks\";\r\n\r\nimport {\r\n  VideoPokerControlActions,\r\n  CoinConfig,\r\n  SET_COINS_CONFIG,\r\n} from \"../components/Reducer\";\r\n\r\ninterface ConfigurationFetch {\r\n  coins: CoinConfig[];\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\nconst calculateMinCeil = (value: string, price: string) => {\r\n  return (+(\r\n    Math.ceil(Number(value) * Number(price) * 100000000) / 100000000\r\n  )).toFixed(8);\r\n};\r\n\r\nexport const useGameConfig = (\r\n  controlDispatch: Dispatch<VideoPokerControlActions>,\r\n) => {\r\n  const [fetchConfiguration, { data: configurationFetchResponse }] =\r\n    useFetch<ConfigurationFetch>(\"videopoker/get-configuration\");\r\n  const { showInUSD, coinsPrices } = useCoins([\"showInUSD\", \"coinsPrices\"]);\r\n\r\n  useEffect(() => {\r\n    fetchConfiguration();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (configurationFetchResponse?.success) {\r\n      let coins = configurationFetchResponse.coins;\r\n      if (showInUSD) {\r\n        coins = [];\r\n        configurationFetchResponse.coins.forEach((item) => {\r\n          if (item.coin !== \"GEM\") {\r\n            coins.push({\r\n              coin: item.coin,\r\n              minimum_bet: calculateMinCeil(\r\n                item.minimum_bet,\r\n                coinsPrices[item.coin]?.price,\r\n              ),\r\n              maximum_bet: (\r\n                Number(item.maximum_bet) * Number(coinsPrices[item.coin]?.price)\r\n              ).toString(),\r\n              maximum_profit: (\r\n                Number(item.maximum_profit) *\r\n                Number(coinsPrices[item.coin]?.price)\r\n              ).toString(),\r\n            });\r\n          } else {\r\n            coins.push(item);\r\n          }\r\n        });\r\n      }\r\n      controlDispatch({\r\n        type: SET_COINS_CONFIG,\r\n        config: coins,\r\n      });\r\n    }\r\n  }, [configurationFetchResponse, showInUSD, coinsPrices]);\r\n};\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { useCoins } from \"hooks\";\r\n\r\nimport {\r\n  SetOfCards,\r\n  Field as CardField,\r\n  CardWrapper,\r\n  RebetButton,\r\n  CardIndex,\r\n} from \"games/VideoPoker\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport {\r\n  useVideoPokerControl,\r\n  GamePhases,\r\n  CardPosition,\r\n  ADD_HOLD_CARD,\r\n  REMOVE_HOLD_CARD,\r\n} from \"../Controller/components/Reducer\";\r\nimport { useGameSession } from \"../Controller/hooks\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\n\r\nconst rebetButtonActions = (\r\n  startGame: () => void,\r\n  deal: () => void,\r\n  gamePhase: GamePhases,\r\n) =>\r\n  ({\r\n    [GamePhases.NOT_START]: () => {},\r\n    [GamePhases.END_GAME]: startGame,\r\n    [GamePhases.HOLD]: deal,\r\n  }[gamePhase]);\r\n\r\nlet clickSoundIndex = 0;\r\n\r\nconst Game = () => {\r\n  const intl = useGetLocale();\r\n  const { selectedCoin, showInUSD } = useCoins([\"selectedCoin\", \"showInUSD\"]);\r\n  const { controlState, controlDispatch } = useVideoPokerControl();\r\n  const { gamePhase, field, holdCards, outcome, combination } = controlState;\r\n  const { startGame, deal, startGameFetchLoading, dealFetchLoading } =\r\n    useGameSession(controlState, controlDispatch);\r\n  const [USDMode, setUSDMode] = useState<boolean>(false);\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { cardClick1, cardClick2 } = getSoundEffectNames(\r\n    gamePathNames.VIDEO_POKER,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (gamePhase !== GamePhases.HOLD) {\r\n      setUSDMode(showInUSD && selectedCoin?.coin !== \"GEM\");\r\n    }\r\n  }, [gamePhase, showInUSD, selectedCoin]);\r\n\r\n  const onClickCardHandler = useCallback(\r\n    (cardIndex: CardIndex, cardPosition: CardPosition, cardIsHold: boolean) => {\r\n      if (gamePhase !== GamePhases.HOLD) return;\r\n      if (cardIsHold) {\r\n        controlDispatch({\r\n          type: REMOVE_HOLD_CARD,\r\n          position: cardPosition,\r\n        });\r\n        return;\r\n      }\r\n      if (clickSoundIndex === 0) {\r\n        playEffect(cardClick1);\r\n        clickSoundIndex++;\r\n      } else {\r\n        playEffect(cardClick2);\r\n        clickSoundIndex = 0;\r\n      }\r\n      controlDispatch({\r\n        type: ADD_HOLD_CARD,\r\n        position: cardPosition,\r\n        card: cardIndex,\r\n      });\r\n    },\r\n    [controlDispatch, gamePhase],\r\n  );\r\n\r\n  const hand = useMemo(() => {\r\n    const animateCard = gamePhase === GamePhases.END_GAME;\r\n    return field.map((cardIndex, index) => {\r\n      const cardIsHold = holdCards[index] !== \"empty\";\r\n      const isCombination = combination.includes(index as CardPosition);\r\n      return (\r\n        <CardWrapper\r\n          key={`VideoPokerField_${cardIndex}_${index}`}\r\n          cardIndex={cardIndex}\r\n          showCard={GamePhases.NOT_START !== gamePhase}\r\n          animateCard={animateCard && !cardIsHold}\r\n          isSelect={cardIsHold && gamePhase === GamePhases.HOLD}\r\n          isCombination={isCombination && gamePhase === GamePhases.END_GAME}\r\n          isLose={!isCombination && gamePhase === GamePhases.END_GAME}\r\n          onClick={() =>\r\n            onClickCardHandler(cardIndex, index as CardPosition, cardIsHold)\r\n          }\r\n        />\r\n      );\r\n    });\r\n  }, [gamePhase, field, holdCards, combination, onClickCardHandler]);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <SetOfCards\r\n        outcome={outcome}\r\n        coinAmount={controlState.betAmount}\r\n        coin={selectedCoin?.coin || \"\"}\r\n        USDMode={USDMode}\r\n      />\r\n      <RebetButton\r\n        onClick={rebetButtonActions(startGame, deal, gamePhase)}\r\n        disabled={\r\n          gamePhase === GamePhases.NOT_START ||\r\n          startGameFetchLoading ||\r\n          dealFetchLoading\r\n        }\r\n        isDealButton={gamePhase === GamePhases.HOLD}>\r\n        {gamePhase === GamePhases.END_GAME\r\n          ? intl.formatMessage({ id: \"videopoker.buttons.rebet\" })\r\n          : intl.formatMessage({ id: \"videopoker.buttons.deal\" })}\r\n      </RebetButton>\r\n      <CardField>{hand}</CardField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Statistics } from \"components\";\r\n\r\nimport LazyComponentLoader from \"config/LazyComponentLoader\";\r\nimport OptionsButton from \"components/OptionsButton\";\r\nimport { HotKeysModal } from \"components/HotKeys\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Controller, { VideoPokerControlProvider } from \"./Controller\";\r\nimport Game from \"./Game\";\r\nimport { SoundModals } from \"components/SoundModal\";\r\n\r\nconst BettingInformation = React.lazy(() =>\r\n  LazyComponentLoader(import(\"pages/ModalPages/pages/BettingInformation\")),\r\n);\r\n\r\nconst VideoPokerPage = () => {\r\n  const [isSoundOpen, setIsSoundOpen] = useState(false);\r\n  const [hotKeyIsOpen, setHotKeyIsOpen] = useState(false);\r\n  const [liveStatsIsOpen, setLiveStatsIsOpen] = useState(false);\r\n  const [betInfoIsOpen, setBetInfoIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <VideoPokerControlProvider>\r\n        <SoundModals\r\n          isOpen={isSoundOpen}\r\n          onClose={() => setIsSoundOpen(false)}\r\n        />\r\n        <HotKeysModal\r\n          isOpen={hotKeyIsOpen}\r\n          onClose={() => setHotKeyIsOpen(false)}\r\n        />\r\n        <Game />\r\n        <div className={styles.hrSmall} />\r\n        <div className={styles.optionWrapper}>\r\n          <OptionsButton\r\n            withSound\r\n            soundOnClick={() => setIsSoundOpen(true)}\r\n            liveStatOnclick={() => setLiveStatsIsOpen(true)}\r\n            hotKeysOnClick={() => setHotKeyIsOpen(true)}\r\n            bettingInformationOnClick={() => setBetInfoIsOpen(true)}\r\n          />\r\n        </div>\r\n        <div className={styles.hrBig} />\r\n        <Controller\r\n          liveStatsHandleClose={() => setLiveStatsIsOpen(false)}\r\n          liveStatsIsOpen={liveStatsIsOpen}\r\n        />\r\n      </VideoPokerControlProvider>\r\n      <div className={styles.statisticsWrapper}>\r\n        <BettingInformation\r\n          game=\"videopoker\"\r\n          isOpen={betInfoIsOpen}\r\n          onClose={() => setBetInfoIsOpen(false)}\r\n        />\r\n        <Statistics withFairness />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPokerPage;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport \"config/themes/_video-poker.scss\";\r\nimport SeedProvider from \"providers/Seed\";\r\n\r\nimport VideoPokerPage from \"./page\";\r\n\r\nconst VideoPokerWrapper = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Video Poker | Crypto Gambling Casino</title>\r\n        <meta name=\"title\" content=\"Play Bitcoin Video Poker - Pasino.com\" />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Play video poker with Bitcoin on Pasino.com. Easy and fast gameplay with several cryptocurrencies.  \"\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"Bitcoin Video Poker, Play Video Poker, Video Poker Bitcoin \"\r\n        />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        <meta name=\"language\" content=\"English\" />\r\n      </Helmet>\r\n      <SeedProvider gameName=\"videopoker\">\r\n        <VideoPokerPage />\r\n      </SeedProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoPokerWrapper;\r\n","export enum GamePhases {\r\n  NOT_START,\r\n  HOLD,\r\n  END_GAME,\r\n}\r\n","export const SET_FIELD = \"SET_FIELD\";\r\nexport const ADD_HOLD_CARD = \"ADD_HOLD_CARD\";\r\nexport const REMOVE_HOLD_CARD = \"REMOVE_HOLD_CARD\";\r\n\r\nexport const SET_GAME_PHASE = \"SET_GAME_PHASE\";\r\nexport const SET_BET_AMOUNT = \"SET_BET_AMOUNT\";\r\n\r\nexport const SET_OUTCOME = \"SET_OUTCOME\";\r\nexport const SET_COMBINATION = \"SET_COMBINATION\";\r\n\r\nexport const CLEAR_HOLD_CARDS = \"CLEAR_HOLD_CARDS\";\r\nexport const CLEAR_COMBINATION = \"CLEAR_COMBINATION\";\r\n\r\nexport const START_GAME = \"START_GAME\";\r\nexport const DEAL = \"DEAL\";\r\nexport const SET_GAME_SESSION = \"SET_GAME_SESSION\";\r\n\r\nexport const SET_LIVE_STATS = \"SET_LIVE_STATS\";\r\nexport const SET_ACTUAL_BET = \"SET_ACTUAL_BET\";\r\n\r\nexport const SET_COINS_CONFIG = \"SET_COINS_CONFIG\";\r\n","import { CardIndex } from \"games/VideoPoker\";\r\nimport { Hold } from \"../types\";\r\nimport { CardPosition } from \"../types\";\r\n\r\nexport const removeHoldCard = (holdCards: Hold, position: CardPosition) => {\r\n  const holdCardsCopy = [...holdCards];\r\n  holdCardsCopy[position] = \"empty\";\r\n  return holdCardsCopy;\r\n};\r\n\r\nexport const holdCard = (\r\n  holdCards: Hold,\r\n  position: CardPosition,\r\n  card: CardIndex,\r\n) => {\r\n  const holdCardsCopy = [...holdCards];\r\n  holdCardsCopy[position] = card;\r\n  return holdCardsCopy;\r\n};\r\n","import { get as lodashGet } from \"utils/lodash\";\r\n\r\nimport { isNumber } from \"utils\";\r\nimport { Outcomes, CardIndex, CardValue, deck } from \"games/VideoPoker\";\r\n\r\nimport { CardPosition } from \"../types\";\r\n\r\nconst fullPositions: Array<CardPosition> = [0, 1, 2, 3, 4];\r\nconst getFullPositions = () => [...fullPositions];\r\n\r\ntype SameCardsCounting = {\r\n  [key in CardValue]: number;\r\n};\r\n\r\nconst findSameCards = (field: Array<CardIndex>, outcome: Outcomes) => {\r\n  const sameCardsCounting = {} as SameCardsCounting;\r\n  field.forEach((cardIndex) => {\r\n    sameCardsCounting[deck.getCard(cardIndex).cardValue] =\r\n      lodashGet(sameCardsCounting, deck.getCard(cardIndex).cardValue, 0) + 1;\r\n  });\r\n\r\n  const isPairOfJacksOrBetter = outcome === Outcomes.PAIR_OF_JACKS_OR_BETTER;\r\n  const cards: Array<CardPosition> = [];\r\n  field.forEach((cardIndex, position) => {\r\n    const skipLowPairs =\r\n      isNumber(deck.getCard(cardIndex).cardValue) && isPairOfJacksOrBetter;\r\n    if (\r\n      sameCardsCounting[deck.getCard(cardIndex).cardValue] > 1 &&\r\n      !skipLowPairs\r\n    ) {\r\n      cards.push(position as CardPosition);\r\n    }\r\n  });\r\n\r\n  return cards;\r\n};\r\n\r\nconst combinations: Record<\r\n  Outcomes,\r\n  (field: Array<CardIndex>, outcome: Outcomes) => Array<CardPosition>\r\n> = {\r\n  [Outcomes.ROYAL_FLUSH]: getFullPositions,\r\n  [Outcomes.STRAIGHT_FLUSH]: getFullPositions,\r\n  [Outcomes.FLUSH]: getFullPositions,\r\n  [Outcomes.FOUR_OF_A_KIND]: findSameCards,\r\n  [Outcomes.FULL_HOUSE]: getFullPositions,\r\n  [Outcomes.STRAIGHT]: getFullPositions,\r\n  [Outcomes.THREE_OF_A_KIND]: findSameCards,\r\n  [Outcomes.TWO_PAIR]: findSameCards,\r\n  [Outcomes.PAIR_OF_JACKS_OR_BETTER]: findSameCards,\r\n  [Outcomes.NOTHING]: () => [],\r\n};\r\n\r\nexport const defineCombination = (field: Array<CardIndex>, outcome: Outcomes) =>\r\n  combinations[outcome](field, outcome);\r\n","import { Outcomes } from \"games/VideoPoker\";\r\n\r\nimport { removeHoldCard, holdCard, defineCombination } from \"./actions\";\r\nimport * as actions from \"./actions/actionTypes\";\r\nimport { GamePhases } from \"./config\";\r\nimport {\r\n  Hold,\r\n  VideoPokerControlState,\r\n  VideoPokerControlActions,\r\n} from \"./types\";\r\n\r\nconst FIELD_SIZE = 5;\r\n\r\nconst emptyHoldCards: Hold = new Array(FIELD_SIZE).fill(\"empty\");\r\n\r\nexport const initialVideoPokerControlState: VideoPokerControlState = {\r\n  field: [0, 0, 0, 0, 0],\r\n  holdCards: [...emptyHoldCards],\r\n  gamePhase: GamePhases.NOT_START,\r\n  betAmount: \"0.000000\",\r\n  outcome: Outcomes.NOTHING,\r\n  combination: [],\r\n  actualBet: \"\",\r\n  coinsConfig: [],\r\n};\r\n\r\nexport const videoPokerControlReducer = (\r\n  state: VideoPokerControlState,\r\n  action: VideoPokerControlActions,\r\n): VideoPokerControlState => {\r\n  switch (action.type) {\r\n    case actions.START_GAME:\r\n      return {\r\n        ...state,\r\n        combination: [],\r\n        holdCards: [...emptyHoldCards],\r\n        outcome: Outcomes.NOTHING,\r\n        field: action.cards,\r\n        gamePhase: GamePhases.HOLD,\r\n      };\r\n\r\n    case actions.DEAL:\r\n      console.log(action.cards);\r\n      console.log(action.outcome);\r\n\r\n      return {\r\n        ...state,\r\n        field: action.cards,\r\n        outcome: action.outcome,\r\n        gamePhase: GamePhases.END_GAME,\r\n        combination: defineCombination(action.cards, action.outcome),\r\n      };\r\n\r\n    case actions.SET_GAME_SESSION:\r\n      return {\r\n        ...state,\r\n        field: action.cards,\r\n        gamePhase: GamePhases.HOLD,\r\n        betAmount: action.betAmount,\r\n        actualBet: action.betAmount,\r\n      };\r\n\r\n    case actions.SET_FIELD:\r\n      return {\r\n        ...state,\r\n        field: action.cards,\r\n      };\r\n\r\n    case actions.ADD_HOLD_CARD:\r\n      return {\r\n        ...state,\r\n        holdCards: holdCard(state.holdCards, action.position, action.card),\r\n      };\r\n\r\n    case actions.REMOVE_HOLD_CARD:\r\n      return {\r\n        ...state,\r\n        holdCards: removeHoldCard(state.holdCards, action.position),\r\n      };\r\n\r\n    case actions.SET_GAME_PHASE:\r\n      return {\r\n        ...state,\r\n        gamePhase: action.phase,\r\n      };\r\n\r\n    case actions.SET_BET_AMOUNT:\r\n      return {\r\n        ...state,\r\n        betAmount: action.amount,\r\n      };\r\n\r\n    case actions.SET_OUTCOME:\r\n      return {\r\n        ...state,\r\n        outcome: action.outcome,\r\n      };\r\n\r\n    case actions.CLEAR_HOLD_CARDS:\r\n      return {\r\n        ...state,\r\n        holdCards: [...emptyHoldCards],\r\n      };\r\n\r\n    case actions.SET_COMBINATION:\r\n      return {\r\n        ...state,\r\n        combination: defineCombination(action.cards, action.outcome),\r\n      };\r\n\r\n    case actions.CLEAR_COMBINATION:\r\n      return {\r\n        ...state,\r\n        combination: [],\r\n      };\r\n\r\n    case actions.SET_ACTUAL_BET:\r\n      return {\r\n        ...state,\r\n        actualBet: action.bet,\r\n      };\r\n\r\n    case actions.SET_COINS_CONFIG:\r\n      return {\r\n        ...state,\r\n        coinsConfig: action.config,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Dispatch, createContext } from \"react\";\r\n\r\nimport { initialVideoPokerControlState } from \"./reducer\";\r\nimport { VideoPokerControlActions, VideoPokerControlState } from \"./types\";\r\n\r\ntype VideoPokerControlContext = {\r\n  controlState: VideoPokerControlState;\r\n  controlDispatch: Dispatch<VideoPokerControlActions>;\r\n};\r\n\r\nexport const defaultValue: VideoPokerControlContext = {\r\n  controlState: initialVideoPokerControlState,\r\n  controlDispatch: () => {},\r\n};\r\n\r\nconst Context = createContext<VideoPokerControlContext>(defaultValue);\r\n\r\nexport default Context;\r\n","import React, { FC, useReducer } from \"react\";\r\n\r\nimport Context from \"./context\";\r\nimport {\r\n  initialVideoPokerControlState,\r\n  videoPokerControlReducer,\r\n} from \"./reducer\";\r\n\r\nconst VideoPokerControlProvider: FC = ({ children }) => {\r\n  const [controlState, controlDispatch] = useReducer(\r\n    videoPokerControlReducer,\r\n    initialVideoPokerControlState,\r\n  );\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        controlState,\r\n        controlDispatch,\r\n      }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default VideoPokerControlProvider;\r\n","import { useContext } from \"react\";\r\n\r\nimport Context from \"./context\";\r\n\r\nexport type {\r\n  VideoPokerControlState,\r\n  VideoPokerControlActions,\r\n  CardPosition,\r\n  CoinConfig,\r\n} from \"./types\";\r\n\r\nexport { default as VideoPokerControlProvider } from \"./provider\";\r\nexport * from \"./actions\";\r\nexport * from \"./config\";\r\n\r\nexport const useVideoPokerControl = () => useContext(Context);\r\n"],"sourceRoot":""}