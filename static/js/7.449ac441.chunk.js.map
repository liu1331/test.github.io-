{"version":3,"sources":["games/Keno/Field/style.module.scss","games/Keno/Field/Cell/style.module.scss","games/Keno/RewardInfo/style.module.scss","games/Keno/RewardInfo/components/Payout/style.module.scss","games/Keno/RewardInfo/components/ProfitPanel/style.module.scss","games/Keno/RewardInfo/components/ProfitPanel/InfoField/style.module.scss","games/Keno/Field/Cell/config.ts","games/Keno/Field/config.ts","pages/Keno/Controller/components/Reducer/reducer.ts","pages/Keno/Controller/components/Reducer/actions/actionTypes.ts","pages/Keno/Controller/components/Reducer/actions/cellManipulation.ts","pages/Keno/Controller/components/Reducer/actions/utils.ts","pages/Keno/Controller/components/Reducer/actions/coinsAmount.ts","games/Keno/index.ts","assets/keno/diamond.svg","games/Keno/RewardInfo/components/Payout/index.tsx","games/Keno/RewardInfo/components/ProfitPanel/InfoField/index.tsx","games/Keno/RewardInfo/components/ProfitPanel/index.tsx","games/Keno/RewardInfo/index.tsx","games/Keno/Field/Cell/index.tsx","games/Keno/Field/index.tsx"],"names":["module","exports","CellState","FIELD_SIZE","MAX_SELECTED_ROWS","field","Object","freeze","range","getHighlightCells","state","reduce","accumulator","cell","riskTypes","initialKenoControlState","cells","CLOSED","selectedCellsCount","betAmount","coinsConfiguration","autoBetsIsStart","risk","fieldIsClear","matchedNumbersCount","isAutoMode","payoutTable","autoModeValues","numberOfBets","onWin","onWinMode","onLoss","onLossMode","stopOnProfit","stopOnLoss","actualBet","profit","selectedCells","matchedCells","coin","autoModeActionFieldMatching","actions","SET_NUMBER_OF_BETS","SET_ON_WIN","SET_ON_LOSS","SET_STOP_ON_LOSS","SET_STOP_ON_PROFIT","kenoControlReducer","action","type","SET_CELLS","getSelectedCell","cellIndex","updatedCells","prevSelectedCellsCount","updatedState","getBlockedOrClosedCellsExceptSelected","SET_SELECTED_CELLS_COUNT","count","SET_BET_AMOUNT","value","SET_RISK_TYPE","PLAY","result","getResultCells","drawnCells","matchedCellsCount","AUTO_PLAY","bet","CLEAR_FIELD","AUTO_SELECT_CELLS","getRandomSelectedCells","SET_MATCHED_NUMBERS_COUNT","SET_IS_AUTO_MODE","SET_PAYOUT_TABLE","table","SET_ACTUAL_BET","SET_AUTO_BET_IS_START","SET_COINS_CONFIGURATION","config","SET_BET_AMOUNT_FROM_CONFIG","getCoinAmountFromConfig","configType","balance","selectedCoin","showUsd","coinPrices","SET_ON_WIN_MODE","mode","SET_ON_LOSS_MODE","BLOCK_CELLS","UNBLOCK_CELLS","highlightCells","mapValue","cellState","cellNumber","cellIsDrawn","includes","Number","SELECTED","REWARD","EMPTY","BLOCKED","isBlock","selectedCellIndex","updatedSelectedCellCount","randomCells","rowsCount","cellNumberLimit","Error","Set","size","add","random","toArray","getRandomCellNumbers","getUsdValue","coinPrice","coinValue","price","showUSD","length","selectedCoinConfig","find","coinConfig","configValue","Math","min","toFixed","isNumberString","String","toDecimal","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","clipPath","filter","d","fill","opacity","_ref3","id","x","y","width","height","filterUnits","colorInterpolationFilters","floodOpacity","in","values","stdDeviation","in2","transform","SvgDiamond","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","ForwardRef","Payout","numberOfDiamonds","isWin","ratio","onMouseEnterAction","onMouseLeaveAction","className","styles","root","onMouseEnter","onMouseLeave","pointer","clsx","hit","win","icon","InfoField","label","mark","classes","coinIcon","ProfilePanel","payout","chance","fieldClasses","chances","chancesJson","RewardInfo","useState","isOpen","info","profitInfo","setProfitInfo","ProfitPanel","payouts","push","mul","minus","toString","toLocaleString","maximumFractionDigits","getPayouts","selectRowsText","Cell","onClick","isNeedRewardIcon","opened","notClickable","reward","selectedReward","selected","blocked","empty","diamondIcon","areEqual","prevProps","nextProps","memo","Field","onCellClickHandler","cellsInState","cellClasses","map","fieldRoot"],"mappings":"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","file":"static/js/7.449ac441.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1Piba\",\"field\":\"style_field__3wkV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1MDMs\",\"selected\":\"style_selected__2mGna\",\"blocked\":\"style_blocked__1aUNP\",\"notClickable\":\"style_notClickable__2cmIs\",\"cell\":\"style_cell__2PCFY\",\"opened\":\"style_opened__1Gf0Q\",\"reward\":\"style_reward__32sPU\",\"selectedReward\":\"style_selectedReward__QCNy6\",\"empty\":\"style_empty__GSDLu\",\"showLoss\":\"style_showLoss__2QDq_\",\"diamondIcon\":\"style_diamondIcon__2P0G4\",\"showReward\":\"style_showReward__3IA5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3WqOL\",\"payouts\":\"style_payouts__35ESU\",\"profit\":\"style_profit__1jsHI\",\"selectRowsText\":\"style_selectRowsText__3ltp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"diamonds\":\"style_diamonds__2IsAa\",\"root\":\"style_root__2oJK_\",\"pointer\":\"style_pointer__38Is8\",\"icon\":\"style_icon__1brmA\",\"win\":\"style_win__1N8ZB\",\"ratio\":\"style_ratio__2_GkC\",\"hit\":\"style_hit__2Fay-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__1Rc6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"diamonds\":\"style_diamonds__2ZtRa\",\"root\":\"style_root__1AYT0\",\"field\":\"style_field__2RufI\",\"coinIcon\":\"style_coinIcon__3BKRR\"};","export enum CellState {\r\n  CLOSED,\r\n  EMPTY,\r\n  REWARD,\r\n  SELECTED,\r\n  BLOCKED,\r\n}\r\n","import { range } from \"utils/lodash\";\r\n\r\nexport const FIELD_SIZE = 40;\r\nexport const MAX_SELECTED_ROWS = 10;\r\n\r\nexport const field = Object.freeze(range(1, FIELD_SIZE + 1));\r\n","import { MAX_SELECTED_ROWS, field } from \"games/Keno/Field/config\";\r\nimport { CellState } from \"games/Keno/Field/Cell/config\";\r\n\r\nimport {\r\n  actions,\r\n  getResultCells,\r\n  getBlockedOrClosedCellsExceptSelected,\r\n  getSelectedCell,\r\n  getRandomSelectedCells,\r\n  getCoinAmountFromConfig,\r\n} from \"./actions\";\r\nimport {\r\n  KenoControlState,\r\n  KenoControlActions,\r\n  HighlightCells,\r\n  Risk,\r\n} from \"./types\";\r\n\r\nexport const getHighlightCells = (state: CellState) =>\r\n  field.reduce((accumulator, cell) => {\r\n    accumulator[cell] = state;\r\n    return accumulator;\r\n  }, {} as HighlightCells);\r\n\r\nexport const riskTypes: Array<Risk> = [\"low\", \"medium\", \"high\"];\r\n\r\nexport const initialKenoControlState: KenoControlState = {\r\n  cells: getHighlightCells(CellState.CLOSED),\r\n  selectedCellsCount: 0,\r\n  betAmount: \"\",\r\n  coinsConfiguration: [],\r\n  autoBetsIsStart: false,\r\n  risk: riskTypes[0],\r\n  fieldIsClear: true,\r\n  matchedNumbersCount: 0,\r\n  isAutoMode: false,\r\n  payoutTable: null,\r\n  autoModeValues: {\r\n    numberOfBets: \"\",\r\n    onWin: \"\",\r\n    onWinMode: \"change\",\r\n    onLoss: \"\",\r\n    onLossMode: \"change\",\r\n    stopOnProfit: \"\",\r\n    stopOnLoss: \"\",\r\n  },\r\n  actualBet: {\r\n    profit: 0,\r\n    risk: \"low\",\r\n    selectedCells: 0,\r\n    matchedCells: 0,\r\n    coin: \"\",\r\n    betAmount: 0,\r\n  },\r\n};\r\n\r\nconst autoModeActionFieldMatching = {\r\n  [actions.SET_NUMBER_OF_BETS]: \"numberOfBets\",\r\n  [actions.SET_ON_WIN]: \"onWin\",\r\n  [actions.SET_ON_LOSS]: \"onLoss\",\r\n  [actions.SET_STOP_ON_LOSS]: \"stopOnLoss\",\r\n  [actions.SET_STOP_ON_PROFIT]: \"stopOnProfit\",\r\n};\r\n\r\nexport const kenoControlReducer = (\r\n  state: KenoControlState,\r\n  action: KenoControlActions,\r\n): KenoControlState => {\r\n  switch (action.type) {\r\n    case actions.SET_CELLS: {\r\n      if (state.autoBetsIsStart) return state;\r\n      if (!state.fieldIsClear) {\r\n        return {\r\n          ...state,\r\n          cells: getHighlightCells(CellState.CLOSED),\r\n          selectedCellsCount: 0,\r\n          fieldIsClear: true,\r\n          matchedNumbersCount: 0,\r\n        };\r\n      }\r\n      const {\r\n        cells: updatedCells,\r\n        selectedCellsCount,\r\n        prevSelectedCellsCount,\r\n      } = getSelectedCell(state, action.cellIndex);\r\n      const updatedState = {\r\n        ...state,\r\n        selectedCellsCount,\r\n      };\r\n      if (selectedCellsCount === MAX_SELECTED_ROWS) {\r\n        updatedState.cells = getBlockedOrClosedCellsExceptSelected(\r\n          updatedCells,\r\n          true,\r\n        );\r\n        return updatedState;\r\n      } else if (\r\n        selectedCellsCount === MAX_SELECTED_ROWS - 1 &&\r\n        prevSelectedCellsCount === MAX_SELECTED_ROWS\r\n      ) {\r\n        updatedState.cells = getBlockedOrClosedCellsExceptSelected(\r\n          updatedCells,\r\n          false,\r\n        );\r\n        return updatedState;\r\n      }\r\n      updatedState.cells = updatedCells;\r\n      return updatedState;\r\n    }\r\n    case actions.SET_SELECTED_CELLS_COUNT:\r\n      return {\r\n        ...state,\r\n        selectedCellsCount: action.count,\r\n      };\r\n    case actions.SET_BET_AMOUNT:\r\n      return {\r\n        ...state,\r\n        betAmount: action.value,\r\n      };\r\n    case actions.SET_NUMBER_OF_BETS:\r\n    case actions.SET_ON_WIN:\r\n    case actions.SET_ON_LOSS:\r\n    case actions.SET_STOP_ON_LOSS:\r\n    case actions.SET_STOP_ON_PROFIT:\r\n      return {\r\n        ...state,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          [autoModeActionFieldMatching[action.type]]: action.value,\r\n        },\r\n      };\r\n    case actions.SET_RISK_TYPE:\r\n      return {\r\n        ...state,\r\n        risk: action.risk,\r\n      };\r\n    case actions.PLAY: {\r\n      const result = getResultCells(state.cells, action.drawnCells);\r\n      return {\r\n        ...state,\r\n        cells: result.cells,\r\n        matchedNumbersCount: result.matchedCellsCount,\r\n        fieldIsClear: false,\r\n        actualBet: action.actualBet,\r\n      };\r\n    }\r\n    case actions.AUTO_PLAY: {\r\n      const result = getResultCells(state.cells, action.drawnCells);\r\n      return {\r\n        ...state,\r\n        cells: result.cells,\r\n        matchedNumbersCount: result.matchedCellsCount,\r\n        fieldIsClear: false,\r\n        actualBet: action.actualBet,\r\n        betAmount: action.bet,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          numberOfBets: action.numberOfBets,\r\n        },\r\n      };\r\n    }\r\n    case actions.CLEAR_FIELD:\r\n      return {\r\n        ...state,\r\n        cells: getHighlightCells(CellState.CLOSED),\r\n        fieldIsClear: true,\r\n        selectedCellsCount: 0,\r\n        matchedNumbersCount: 0,\r\n      };\r\n    case actions.AUTO_SELECT_CELLS:\r\n      return {\r\n        ...state,\r\n        cells: getRandomSelectedCells(),\r\n        selectedCellsCount: MAX_SELECTED_ROWS,\r\n        matchedNumbersCount: 0,\r\n        fieldIsClear: true,\r\n      };\r\n    case actions.SET_MATCHED_NUMBERS_COUNT:\r\n      return {\r\n        ...state,\r\n        matchedNumbersCount: action.count,\r\n      };\r\n    case actions.SET_IS_AUTO_MODE:\r\n      return {\r\n        ...state,\r\n        isAutoMode: action.value,\r\n      };\r\n    case actions.SET_PAYOUT_TABLE:\r\n      return {\r\n        ...state,\r\n        payoutTable: action.table,\r\n      };\r\n    case actions.SET_ACTUAL_BET:\r\n      return {\r\n        ...state,\r\n        actualBet: action.actualBet,\r\n      };\r\n    case actions.SET_AUTO_BET_IS_START:\r\n      return {\r\n        ...state,\r\n        autoBetsIsStart: action.value,\r\n      };\r\n    case actions.SET_COINS_CONFIGURATION:\r\n      return {\r\n        ...state,\r\n        coinsConfiguration: action.config,\r\n      };\r\n    case actions.SET_BET_AMOUNT_FROM_CONFIG:\r\n      return {\r\n        ...state,\r\n        betAmount: getCoinAmountFromConfig(\r\n          state,\r\n          action.configType,\r\n          action.balance,\r\n          action.betAmount,\r\n          action.selectedCoin,\r\n          action.showUsd,\r\n          action.coinPrices,\r\n        ),\r\n      };\r\n    case actions.SET_ON_WIN_MODE:\r\n      return {\r\n        ...state,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          onWinMode: action.mode,\r\n        },\r\n      };\r\n    case actions.SET_ON_LOSS_MODE:\r\n      return {\r\n        ...state,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          onLossMode: action.mode,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_BET_AMOUNT = \"SET_BET_AMOUNT\";\r\nexport const SET_CELLS = \"SET_CELLS\";\r\nexport const SET_RISK_TYPE = \"SET_RISK_TYPE\";\r\nexport const SET_SELECTED_CELLS_COUNT = \"SET_SELECTED_CELLS_COUNT\";\r\n\r\nexport const PLAY = \"PLAY\";\r\nexport const AUTO_PLAY = \"AUTO_PLAY\";\r\nexport const CLEAR_FIELD = \"CLEAR_FIELD\";\r\nexport const BLOCK_CELLS = \"BLOCKED_CELLS\";\r\nexport const UNBLOCK_CELLS = \"UNBLOCK_CELLS\";\r\nexport const AUTO_SELECT_CELLS = \"AUTO_SELECT_CELLS\";\r\n\r\nexport const SET_AUTO_BET_IS_START = \"SET_AUTO_BET_IS_START\";\r\n\r\nexport const SET_NUMBER_OF_BETS = \"SET_NUMBER_OF_BETS\";\r\nexport const SET_ON_WIN = \"SET_ON_WIN\";\r\nexport const SET_ON_LOSS = \"SET_ON_LOSS\";\r\nexport const SET_STOP_ON_PROFIT = \"SET_STOP_ON_PROFIT\";\r\nexport const SET_STOP_ON_LOSS = \"SET_STOP_ON_LOSS\";\r\n\r\nexport const SET_ON_WIN_MODE = \"SET_ON_WIN_MODE\";\r\nexport const SET_ON_LOSS_MODE = \"SET_ON_LOSS_MODE\";\r\n\r\nexport const SET_MATCHED_NUMBERS_COUNT = \"SET_MATCHED_NUMBERS_COUNT\";\r\n\r\nexport const SET_IS_AUTO_MODE = \"SET_IS_AUTO_MODE\";\r\n\r\nexport const SET_PAYOUT_TABLE = \"SET_PAYOUT_TABLE\";\r\n\r\nexport const SET_ACTUAL_BET = \"SET_ACTUAL_BET\";\r\n\r\nexport const SET_COINS_CONFIGURATION = \"SET_COINS_CONFIGURATION\";\r\nexport const SET_BET_AMOUNT_FROM_CONFIG = \"SET_BET_AMOUNT_FROM_CONFIG\";\r\n","import { mapValue } from \"utils/lodash\";\r\nimport { CellState } from \"games/Keno/Field/Cell/config\";\r\nimport { MAX_SELECTED_ROWS, FIELD_SIZE } from \"games/Keno/Field/config\";\r\n\r\nimport { HighlightCells, KenoControlState } from \"../types\";\r\nimport { getHighlightCells } from \"../reducer\";\r\nimport { getRandomCellNumbers } from \"./utils\";\r\n\r\nexport const getResultCells = (\r\n  highlightCells: HighlightCells,\r\n  drawnCells: Array<number>,\r\n): { matchedCellsCount: number; cells: HighlightCells } => {\r\n  let matchedCellsCount = 0;\r\n  const cells = mapValue(highlightCells, (cellState, cellNumber) => {\r\n    const cellIsDrawn = drawnCells.includes(Number(cellNumber));\r\n    if (\r\n      cellIsDrawn &&\r\n      (cellState === CellState.SELECTED || cellState === CellState.REWARD)\r\n    ) {\r\n      matchedCellsCount++;\r\n      return CellState.REWARD;\r\n    } else if (cellIsDrawn) {\r\n      return CellState.EMPTY;\r\n    } else if (cellState === CellState.REWARD) {\r\n      return CellState.SELECTED;\r\n    } else if (cellState !== CellState.SELECTED) {\r\n      return CellState.BLOCKED;\r\n    }\r\n    return cellState;\r\n  });\r\n\r\n  return {\r\n    cells,\r\n    matchedCellsCount,\r\n  };\r\n};\r\n\r\nexport const getBlockedOrClosedCellsExceptSelected = (\r\n  highlightCells: HighlightCells,\r\n  isBlock?: boolean,\r\n): HighlightCells => {\r\n  return mapValue(highlightCells, (cellState) => {\r\n    if (\r\n      (cellState !== CellState.SELECTED && isBlock) ||\r\n      (cellState === CellState.BLOCKED && !isBlock)\r\n    ) {\r\n      return isBlock ? CellState.BLOCKED : CellState.CLOSED;\r\n    }\r\n    return cellState;\r\n  });\r\n};\r\n\r\nexport const getSelectedCell = (\r\n  state: KenoControlState,\r\n  selectedCellIndex: number,\r\n) => {\r\n  const prevSelectedCellsCount = state.selectedCellsCount;\r\n  let updatedSelectedCellCount = prevSelectedCellsCount;\r\n  if (state.cells[selectedCellIndex] === CellState.CLOSED) {\r\n    updatedSelectedCellCount++;\r\n    state.cells[selectedCellIndex] = CellState.SELECTED;\r\n  } else if (state.cells[selectedCellIndex] === CellState.SELECTED) {\r\n    updatedSelectedCellCount--;\r\n    state.cells[selectedCellIndex] = CellState.CLOSED;\r\n  }\r\n  const result = {\r\n    selectedCellsCount: updatedSelectedCellCount,\r\n    prevSelectedCellsCount,\r\n    cells: state.cells,\r\n  };\r\n  if (updatedSelectedCellCount !== prevSelectedCellsCount) {\r\n    result.cells = { ...state.cells };\r\n    return result;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getRandomSelectedCells = () => {\r\n  const cells = getHighlightCells(CellState.BLOCKED);\r\n  const randomCells = getRandomCellNumbers(MAX_SELECTED_ROWS, FIELD_SIZE);\r\n  for (const cell of randomCells) {\r\n    cells[cell] = CellState.SELECTED;\r\n  }\r\n  return cells;\r\n};\r\n","import { random, toArray } from \"utils/lodash\";\r\n\r\nexport const getRandomCellNumbers = (\r\n  rowsCount: number,\r\n  cellNumberLimit: number,\r\n) => {\r\n  if (rowsCount < 0 || cellNumberLimit < rowsCount) {\r\n    throw new Error(\"invalid parameters\");\r\n  }\r\n  const selectedCells = new Set<number>();\r\n  while (selectedCells.size < rowsCount) {\r\n    selectedCells.add(random(1, cellNumberLimit));\r\n  }\r\n  return toArray(selectedCells) as Array<number>;\r\n};\r\n","import { toDecimal, isNumberString } from \"utils\";\r\n\r\nimport { KenoControlState } from \"../types\";\r\n\r\nexport const getUsdValue = (\r\n  coin: string | undefined,\r\n  coinPrice: any,\r\n  coinValue: string | number,\r\n) => {\r\n  return coin && coin !== \"GEM\" && coinPrice[coin]\r\n    ? Number(coinPrice[coin]?.price) * Number(coinValue)\r\n    : 0;\r\n};\r\n\r\nexport const getCoinAmountFromConfig = (\r\n  state: KenoControlState,\r\n  type: \"min\" | \"max\" | \"half\" | \"double\",\r\n  balance: string | number,\r\n  betAmount: string | number,\r\n  selectedCoin: string,\r\n  showUSD: boolean,\r\n  coinPrice: any,\r\n): string => {\r\n  const { coinsConfiguration } = state;\r\n  if (coinsConfiguration.length === 0) return \"0\";\r\n\r\n  switch (type) {\r\n    case \"max\":\r\n    case \"min\":\r\n      const selectedCoinConfig = coinsConfiguration.find(\r\n        (coinConfig) => coinConfig.coin === selectedCoin,\r\n      );\r\n      if (!selectedCoinConfig) return \"0\";\r\n      const configValue =\r\n        selectedCoinConfig[type === \"max\" ? \"maximum_bet\" : \"minimum_bet\"];\r\n      return !showUSD\r\n        ? Math.min(Number(configValue), Number(balance)).toFixed(8)\r\n        : Math.min(\r\n            getUsdValue(selectedCoin, coinPrice, balance),\r\n            getUsdValue(selectedCoin, coinPrice, configValue),\r\n          ).toFixed(8);\r\n    case \"double\":\r\n    case \"half\":\r\n      if (!isNumberString(String(betAmount))) return \"0\";\r\n      return toDecimal(betAmount)\r\n        [type === \"half\" ? \"div\" : \"mul\"](2)\r\n        .toFixed(8);\r\n  }\r\n};\r\n","export { default as Field } from \"./Field\";\r\nexport { default as RewardInfo } from \"./RewardInfo\";\r\nexport * from \"./RewardInfo/types\";\r\nexport * as config from \"./Field/config\";\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  clipPath: \"url(#clip0)\",\n  filter: \"url(#filter0_dd)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.8192 5.77734L11.9091 19.4518L13.6922 34.0636L24.8192 38.9572V39.1364L35.9463 34.2428L37.7294 19.631L24.8192 5.77734Z\",\n  fill: \"#A2FF5A\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M25.8697 38.5988V38.5161L14.7427 33.6363L12.9596 19.0107L25.1648 6.08061L24.8192 5.77734L11.9091 19.3829L13.6922 33.9947L24.8192 38.8745V39.0537L25.8697 38.5988Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.82 5.77734L5.97998 15.7437L11.9098 19.4518L24.82 5.77734Z\",\n  fill: \"#A2FF5A\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.4,\n  d: \"M19.7748 8.4378L11.5781 17.136L7.80454 14.765L5.97998 15.7437L11.9098 19.4518L24.82 5.77734L19.7748 8.4378Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.9801 15.7432L7.01679 37.6333L13.693 34.0631L13.3751 31.4853L11.9099 19.4513L5.9801 15.7432Z\",\n  fill: \"#8ED84E\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M43.0656 15.5094L37.7301 19.631L24.8199 5.77734L43.0656 15.5094Z\",\n  fill: \"#8ED84E\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.6911 34.0635L24.8182 38.9571V46.2216L7.01489 37.6337L13.6911 34.0635Z\",\n  fill: \"#75BA4D\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.8199 38.9575L35.947 34.2432L43.0656 37.6342L24.8199 46.2221V38.9575Z\",\n  fill: \"#8ED84E\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M37.7297 19.6304L35.9467 34.2423L43.0652 37.6333V15.5088L37.7297 19.6304Z\",\n  fill: \"#75BA4D\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M40.6601 22.0024L43.0652 18.446V15.3857L37.7297 19.5074L35.9467 34.1192L37.7712 34.9876L40.6601 22.0024Z\",\n  fill: \"#349155\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M35.9463 34.243L37.7293 19.6312L28.8553 16.9707L35.9463 34.243Z\",\n  fill: \"#349155\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.4,\n  d: \"M35.2398 16.9707L36.2488 18.0459L16.8697 35.4698L13.6906 34.0638L13.2621 30.5349L35.2398 16.9707Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M13.6931 34.0632L21.2955 29.9277L35.9472 34.2424L24.8202 38.9567L13.6931 34.0632Z\",\n  fill: \"#349155\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.4,\n  d: \"M24.8199 38.9575L37.0528 25.1865L35.947 34.2431L24.8199 38.9575Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.4,\n  d: \"M12.269 22.4571L29.5609 10.8779L30.0309 11.3742L12.7805 26.5788L12.269 22.4571Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M13.0002 34.4359C13.0002 34.4359 20.6855 38.0889 21.8742 39.7844C23.063 41.4799 24.8184 46.2081 24.8184 46.2081V38.9435L13.6914 33.9121L13.0002 34.4359Z\",\n  fill: \"#349155\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M5.9801 17.2871C5.9801 17.2871 8.57872 17.6179 9.83656 20.8435C11.0944 24.0692 13.0019 34.4491 13.0019 34.4491L13.7621 34.0769L11.9099 19.465L5.9801 15.7432V17.2871Z\",\n  fill: \"#349155\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.01489 37.6334L13.7602 34.0631L13.6911 33.5117L7.01489 37.6334Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M37.731 19.5064L43.0665 15.5088L36.9431 18.7896L37.731 19.5064Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M24.7511 40.7625L31.9388 38.5018C38.8223 36.6133 41.6974 38.2674 41.6974 38.2674L43.0658 37.6196L35.9473 34.2285L24.8202 38.9291L24.7511 40.7625Z\",\n  fill: \"#349155\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.8199 38.9577V46.2223L25.8702 38.5166L24.8199 38.9577Z\",\n  fill: \"white\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n  id: \"filter0_dd\",\n  x: -0.26667,\n  y: -0.000434399,\n  width: 49.1111,\n  height: 52,\n  filterUnits: \"userSpaceOnUse\",\n  colorInterpolationFilters: \"sRGB\"\n}, /*#__PURE__*/React.createElement(\"feFlood\", {\n  floodOpacity: 0,\n  result: \"BackgroundImageFix\"\n}), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n  in: \"SourceAlpha\",\n  type: \"matrix\",\n  values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n  result: \"hardAlpha\"\n}), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n  stdDeviation: 1.44444\n}), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n  type: \"matrix\",\n  values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.15 0\"\n}), /*#__PURE__*/React.createElement(\"feBlend\", {\n  mode: \"normal\",\n  in2: \"BackgroundImageFix\",\n  result: \"effect1_dropShadow\"\n}), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n  in: \"SourceAlpha\",\n  type: \"matrix\",\n  values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n  result: \"hardAlpha\"\n}), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n  stdDeviation: 2.88889\n}), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n  type: \"matrix\",\n  values: \"0 0 0 0 0.654902 0 0 0 0 1 0 0 0 0 0.388235 0 0 0 1 0\"\n}), /*#__PURE__*/React.createElement(\"feBlend\", {\n  mode: \"normal\",\n  in2: \"effect1_dropShadow\",\n  result: \"effect2_dropShadow\"\n}), /*#__PURE__*/React.createElement(\"feBlend\", {\n  mode: \"normal\",\n  in: \"SourceGraphic\",\n  in2: \"effect2_dropShadow\",\n  result: \"shape\"\n})), /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"clip0\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 37.5556,\n  height: 40.4444,\n  fill: \"white\",\n  transform: \"translate(5.51111 5.77734)\"\n})));\n\nfunction SvgDiamond(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 49,\n    height: 52,\n    viewBox: \"0 0 49 52\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDiamond);\nexport default __webpack_public_path__ + \"static/media/diamond.a70516a7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { ReactComponent as DiamondIcon } from \"assets/keno/diamond.svg\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  numberOfDiamonds: number | string;\r\n  ratio: number | string;\r\n  isWin?: boolean;\r\n  onMouseEnterAction: () => void;\r\n  onMouseLeaveAction: () => void;\r\n}\r\n\r\nconst Payout: FC<Props> = ({\r\n  numberOfDiamonds,\r\n  isWin,\r\n  ratio,\r\n  onMouseEnterAction,\r\n  onMouseLeaveAction,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={styles.root}\r\n      onMouseEnter={onMouseEnterAction}\r\n      onMouseLeave={onMouseLeaveAction}>\r\n      <div className={styles.pointer} />\r\n      <div className={styles.ratio}>{`${ratio}x`}</div>\r\n      <div\r\n        className={clsx(styles.hit, {\r\n          [styles.win]: isWin,\r\n        })}>\r\n        {`${numberOfDiamonds}x`}\r\n        <DiamondIcon className={styles.icon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payout;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { GetCoinImg } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  value: string | number;\r\n  coin?: string;\r\n  mark?: string;\r\n  classes?: {\r\n    root?: string;\r\n    field?: string;\r\n  };\r\n}\r\n\r\nconst InfoField: FC<Props> = ({ label, value, coin, mark, classes }) => {\r\n  return (\r\n    <div className={clsx(styles.root, classes?.root)}>\r\n      <h5>{label}</h5>\r\n      <div className={clsx(styles.field, classes?.field)}>\r\n        <span>{value}</span>\r\n        {mark && <span>{mark}</span>}\r\n        {coin && <GetCoinImg className={styles.coinIcon} coin={coin} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoField;\r\n","import React, { FC } from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport InfoField from \"./InfoField\";\r\n\r\ninterface Props {\r\n  payout: string | number;\r\n  profit: string | number;\r\n  chance: string | number;\r\n  coin?: string;\r\n  fieldClasses?: {\r\n    root?: string;\r\n    field?: string;\r\n  };\r\n}\r\n\r\nconst ProfilePanel: FC<Props> = ({\r\n  payout,\r\n  profit,\r\n  chance,\r\n  coin,\r\n  fieldClasses,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <InfoField\r\n        label=\"Payout\"\r\n        value={payout}\r\n        mark=\"x\"\r\n        classes={fieldClasses}\r\n      />\r\n      <InfoField\r\n        label=\"Profit\"\r\n        value={profit}\r\n        coin={coin}\r\n        classes={fieldClasses}\r\n      />\r\n      <InfoField\r\n        label=\"Chance\"\r\n        value={chance}\r\n        mark=\"%\"\r\n        classes={fieldClasses}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePanel;\r\n","import React, { FC, useState } from \"react\";\r\n\r\nimport { toDecimal, isNumberString } from \"utils\";\r\nimport { Risk } from \"pages/Keno/Controller/components/Reducer\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Payout from \"./components/Payout\";\r\nimport ProfitPanel from \"./components/ProfitPanel\";\r\nimport { PayoutTable } from \"./types\";\r\nimport chancesJson from \"./chances.json\";\r\nimport { MAX_SELECTED_ROWS } from \"../Field/config\";\r\n\r\nconst chances = chancesJson as Record<number, number[]>;\r\n\r\ninterface Props {\r\n  selectedCellsCount: number;\r\n  betAmount: string;\r\n  risk: Risk;\r\n  payoutTable: PayoutTable | null;\r\n  matchedNumbersCount: number;\r\n  coin?: string;\r\n  fieldClasses?: {\r\n    root?: string;\r\n    field: string;\r\n  };\r\n}\r\n\r\nconst RewardInfo: FC<Props> = ({\r\n  selectedCellsCount,\r\n  betAmount,\r\n  payoutTable,\r\n  risk,\r\n  matchedNumbersCount,\r\n  coin,\r\n  fieldClasses,\r\n}) => {\r\n  const [profitInfo, setProfitInfo] = useState({\r\n    isOpen: false,\r\n    info: {\r\n      payout: \"\",\r\n      profit: \"\",\r\n      chance: \"\",\r\n    },\r\n  });\r\n  const getPayouts = () => {\r\n    const payouts = [] as JSX.Element[];\r\n    if (!selectedCellsCount || !payoutTable) return payouts;\r\n    for (let i = 0; i < selectedCellsCount + 1; i++) {\r\n      const ratio = payoutTable[risk][selectedCellsCount][i];\r\n      const bet = toDecimal(isNumberString(betAmount) ? betAmount : 0);\r\n      payouts.push(\r\n        <Payout\r\n          onMouseEnterAction={() =>\r\n            setProfitInfo({\r\n              isOpen: true,\r\n              info: {\r\n                payout: String(ratio),\r\n                profit: bet.mul(ratio).minus(bet).toString(),\r\n                chance: chances[selectedCellsCount][i].toLocaleString(\"en-US\", {\r\n                  maximumFractionDigits: 8,\r\n                }),\r\n              },\r\n            })\r\n          }\r\n          onMouseLeaveAction={() => {\r\n            setProfitInfo((state) => ({\r\n              isOpen: false,\r\n              info: { ...state.info },\r\n            }));\r\n          }}\r\n          key={`keno_payout_${i}`}\r\n          numberOfDiamonds={i}\r\n          ratio={ratio}\r\n          isWin={matchedNumbersCount > 0 && matchedNumbersCount === i}\r\n        />,\r\n      );\r\n    }\r\n    return payouts;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {profitInfo.isOpen ? (\r\n        <div className={styles.profit}>\r\n          <ProfitPanel\r\n            {...profitInfo.info}\r\n            coin={coin}\r\n            fieldClasses={{\r\n              ...fieldClasses,\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {selectedCellsCount ? (\r\n        <div className={styles.payouts}>{getPayouts()}</div>\r\n      ) : (\r\n        <span\r\n          className={\r\n            styles.selectRowsText\r\n          }>{`Select 1-${MAX_SELECTED_ROWS} numbers to play`}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RewardInfo;\r\n","import React, { FC, memo } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { ReactComponent as DiamondIcon } from \"assets/keno/diamond.svg\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport { CellState } from \"./config\";\r\n\r\ninterface Props {\r\n  cellNumber: number;\r\n  state: CellState;\r\n  onClick: () => void;\r\n  isNeedRewardIcon?: boolean;\r\n  classes?: {\r\n    root?: string;\r\n    selected?: string;\r\n    cell?: string;\r\n  };\r\n}\r\n\r\nconst Cell: FC<Props> = ({\r\n  cellNumber,\r\n  state,\r\n  onClick,\r\n  isNeedRewardIcon = true,\r\n  classes,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={clsx(\r\n        styles.root,\r\n        classes?.root,\r\n        {\r\n          [styles.opened]:\r\n            state === CellState.REWARD || state === CellState.EMPTY,\r\n        },\r\n        {\r\n          [styles.notClickable]:\r\n            state === CellState.EMPTY || state === CellState.BLOCKED,\r\n        },\r\n        {\r\n          [clsx(styles.reward, styles.selectedReward, classes?.selected)]:\r\n            state === CellState.REWARD && isNeedRewardIcon,\r\n        },\r\n        {\r\n          [classes?.selected || styles.selected]: state === CellState.SELECTED,\r\n        },\r\n        {\r\n          [styles.blocked]: state === CellState.BLOCKED,\r\n        },\r\n      )}>\r\n      <div\r\n        className={clsx(styles.cell, classes?.cell, {\r\n          [styles.empty]: state === CellState.EMPTY,\r\n        })}>\r\n        {state === CellState.REWARD && isNeedRewardIcon ? (\r\n          <DiamondIcon className={styles.diamondIcon} />\r\n        ) : null}\r\n        <span>{cellNumber}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst areEqual = (prevProps: Props, nextProps: Props) =>\r\n  prevProps.state === nextProps.state;\r\n\r\nexport default memo(Cell, areEqual);\r\nexport { CellState } from \"./config\";\r\n","import React, { FC } from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Cell, { CellState } from \"./Cell\";\r\nimport { field } from \"./config\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface Props {\r\n  onCellClickHandler: (index: number) => void;\r\n  cells: Record<number, CellState>;\r\n  classes?: {\r\n    field?: string;\r\n    fieldRoot?: string;\r\n  };\r\n  cellClasses?: {\r\n    root?: string;\r\n    selected?: string;\r\n    cell?: string;\r\n  };\r\n  isNeedRewardIcon?: boolean;\r\n}\r\n\r\nconst Field: FC<Props> = ({\r\n  onCellClickHandler,\r\n  cells: cellsInState,\r\n  classes,\r\n  cellClasses,\r\n  isNeedRewardIcon,\r\n}) => {\r\n  const cells = field.map((cellNumber) => {\r\n    return (\r\n      <Cell\r\n        classes={cellClasses}\r\n        key={`keno_cell_${cellNumber}`}\r\n        state={cellsInState[cellNumber]}\r\n        cellNumber={cellNumber}\r\n        onClick={() => onCellClickHandler(cellNumber)}\r\n        isNeedRewardIcon={isNeedRewardIcon}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={clsx(styles.root, classes?.fieldRoot)}>\r\n      <div className={clsx(styles.field, classes?.field)}>{cells}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n"],"sourceRoot":""}