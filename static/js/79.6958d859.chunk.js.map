{"version":3,"sources":["components/HotKeys/Modal/components/Content/index.tsx","components/HotKeys/Modal/components/DialogHeader/style.module.scss","components/HotKeys/Modal/components/Section/style.module.scss","components/HotKeys/Modal/components/DialogHeader/index.tsx","components/HotKeys/Modal/components/Section/index.tsx","components/HotKeys/Modal/components/Content/style.module.scss"],"names":["Content","onClose","isMinesPage","moreSections","intl","useGetLocale","useHotKeys","isHotkeyActive","setIsHotkeyActive","useLocalStorage","isEnable","setIsEnable","useEffect","is","JSON","parse","changeSwitch","useCallback","action","stringify","className","css","header","formatMessage","id","variant","onClick","fontSize","closeIcon","button","text","map","value","formatHotKeyButtonId","on","off","isChecked","switchHandleChange","module","exports","parseInt","paddingTop","paddingBottom","iconHeight","Section","root","buttonWrapper","clsx"],"mappings":"oMAqHeA,UAjGY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC5CC,EAAOC,yBADwD,EAGvBC,cAAtCC,EAH6D,EAG7DA,eAAgBC,EAH6C,EAG7CA,kBAH6C,EAIrCC,YAAgB,oBAJqB,mBAI9DC,EAJ8D,KAIpDC,EAJoD,KAMrEC,qBAAU,WACR,GAAIF,EAAU,CACZ,IAAMG,EAAcC,KAAKC,MAAML,GAE/BF,EAAkBK,MAEnB,IAEH,IAAMG,EAAeC,uBAAY,SAACC,GAChCP,EAAYG,KAAKK,UAAUD,IAC3BV,EAAkBU,KACjB,IAEH,OACE,qCACE,sBAAKE,UAAWC,IAAIC,OAApB,UACE,+BACGlB,EAAKmB,cAAc,CAClBC,GAAI,oBAGR,cAAC,OAAD,CACEC,QAAQ,QACRC,QAASzB,EACT0B,SAAU,GACVP,UAAWC,IAAIO,eAGnB,cAAC,IAAD,CACEC,OAAQ,IACRC,KAAM1B,EAAKmB,cAAc,CACvBC,GAAI,wBAGR,cAAC,IAAD,CACEK,OAAQ,IACRC,KAAM1B,EAAKmB,cAAc,CACvBC,GAAI,wBAGR,cAAC,IAAD,CACEK,OAAQ,QACRC,KACG5B,EAAD,UAIOE,EAAKmB,cAAc,CACpBC,GAAI,0BALV,cACIpB,EAAKmB,cAAc,CACjBC,GAAI,4BA/BhB,OAuCGrB,QAvCH,IAuCGA,OAvCH,EAuCGA,EAAc4B,KAAI,SAACC,GAAW,IAAD,EACmBA,EAAvCH,EADoB,EACpBA,OAAQC,EADY,EACZA,KAAMG,EADM,EACNA,qBAMtB,OACE,cAAC,IAAD,CACEJ,OAAQA,EACRC,KACEA,GACA1B,EAAKmB,cAAc,CACjBC,GAAIS,SAOb/B,EAAc,cAAC,IAAD,CAAS2B,OAAQ,IAAKC,KAAM,sBAA0B,KAErE,cAAC,YAAD,CACEA,KAAM,CACJI,GAAI9B,EAAKmB,cAAc,CACrBC,GAAI,sBAENW,IAAK/B,EAAKmB,cAAc,CACtBC,GAAI,wBAGRY,UAAW7B,EACX8B,mBAAoBrB,S,oBC9G5BsB,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,WAAa,OAAO,cAAgB,OAAO,cAAgB,6BAA6B,MAAQ,qBAAqB,UAAY,yBAAyB,KAAO,sB,oBCAhgBD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,cAAgB,+B,mHCMlcC,SAASnB,IAAIoB,YAAcD,SAASnB,IAAIqB,eAAiBC,a,0BCc5CC,EAXY,SAAC,GAAsB,IAApBf,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACpC,OACE,sBAAKV,UAAWC,IAAIwB,KAApB,UACE,mBAAGzB,UAAWC,IAAIS,KAAlB,SAAyBA,IACzB,sBAAMV,UAAWC,IAAIyB,cAArB,SACE,mBAAG1B,UAAW2B,YAAK1B,IAAIQ,OAAQR,IAAIS,MAAnC,SAA2CD,W,oBCdnDS,EAAOC,QAAU,CAAC,OAAS,sBAAsB,UAAY","file":"static/js/79.6958d859.chunk.js","sourcesContent":["import React, { FC, useCallback, useEffect } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { useLocalStorage } from \"hooks\";\r\n\r\nimport { useHotKeys } from \"components/HotKeys/Provider\";\r\nimport { Icon, SwitchBox } from \"components\";\r\n\r\nimport { Section } from \"../\";\r\nimport { MoreHotKeys } from \"../../types\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  onClose: () => void;\r\n  isMinesPage?: boolean;\r\n\r\n  moreSections?: MoreHotKeys[];\r\n}\r\n\r\nconst Content: FC<Props> = ({ onClose, isMinesPage, moreSections }) => {\r\n  const intl = useGetLocale();\r\n\r\n  const { isHotkeyActive, setIsHotkeyActive } = useHotKeys();\r\n  const [isEnable, setIsEnable] = useLocalStorage(\"isHotkeysEnabled\");\r\n\r\n  useEffect(() => {\r\n    if (isEnable) {\r\n      const is: boolean = JSON.parse(isEnable);\r\n\r\n      setIsHotkeyActive(is);\r\n    }\r\n  }, []);\r\n\r\n  const changeSwitch = useCallback((action: boolean) => {\r\n    setIsEnable(JSON.stringify(action));\r\n    setIsHotkeyActive(action);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={css.header}>\r\n        <span>\r\n          {intl.formatMessage({\r\n            id: \"hotKeys.title\",\r\n          })}\r\n        </span>\r\n        <Icon\r\n          variant=\"close\"\r\n          onClick={onClose}\r\n          fontSize={12}\r\n          className={css.closeIcon}\r\n        />\r\n      </div>\r\n      <Section\r\n        button={\"A\"}\r\n        text={intl.formatMessage({\r\n          id: \"hotKeys.buttons.a\",\r\n        })}\r\n      />\r\n      <Section\r\n        button={\"S\"}\r\n        text={intl.formatMessage({\r\n          id: \"hotKeys.buttons.s\",\r\n        })}\r\n      />\r\n      <Section\r\n        button={\"Space\"}\r\n        text={\r\n          !isMinesPage\r\n            ? intl.formatMessage({\r\n                id: \"hotKeys.buttons.space\",\r\n              })\r\n            : `${intl.formatMessage({\r\n                id: \"hotKeys.buttons.space\",\r\n              })} / Cashout`\r\n        }\r\n      />\r\n\r\n      {moreSections?.map((value) => {\r\n        const { button, text, formatHotKeyButtonId } = value as {\r\n          button: string;\r\n          text?: string;\r\n          formatHotKeyButtonId: string;\r\n        };\r\n\r\n        return (\r\n          <Section\r\n            button={button}\r\n            text={\r\n              text ||\r\n              intl.formatMessage({\r\n                id: formatHotKeyButtonId,\r\n              })\r\n            }\r\n          />\r\n        );\r\n      })}\r\n\r\n      {isMinesPage ? <Section button={\"R\"} text={\"Pick Random Tiles\"} /> : null}\r\n\r\n      <SwitchBox\r\n        text={{\r\n          on: intl.formatMessage({\r\n            id: \"hotKeys.switch.on\",\r\n          }),\r\n          off: intl.formatMessage({\r\n            id: \"hotKeys.switch.off\",\r\n          }),\r\n        }}\r\n        isChecked={isHotkeyActive}\r\n        switchHandleChange={changeSwitch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"paddingTop\":\"16px\",\"paddingBottom\":\"16px\",\"dialogActions\":\"style_dialogActions__lmX3a\",\"title\":\"style_title__2873B\",\"closeIcon\":\"style_closeIcon__2jiDf\",\"grow\":\"style_grow__2ewmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__2Afwv\",\"text\":\"style_text__10V95\",\"button\":\"style_button__3Nodn\",\"buttonWrapper\":\"style_buttonWrapper__gwVrW\"};","import React from \"react\";\r\n\r\nimport { DialogActions, Icon, iconHeight, Typography } from \"components\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const headerHeight =\r\n  parseInt(css.paddingTop) + parseInt(css.paddingBottom) + iconHeight;\r\n\r\nexport interface DialogHeaderButtonOption {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport interface DialogHeaderProps {\r\n  title: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogHeader = ({ title, onClose }: DialogHeaderProps) => {\r\n  return (\r\n    <DialogActions className={css.dialogActions}>\r\n      <Typography className={css.title}>{title}</Typography>\r\n\r\n      <div className={css.grow} />\r\n\r\n      <Icon variant=\"close\" className={css.closeIcon} onClick={onClose} />\r\n    </DialogActions>\r\n  );\r\n};\r\n\r\nexport default React.memo(DialogHeader);\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  button: string;\r\n  text: string;\r\n}\r\n\r\nconst Section: FC<Props> = ({ button, text }) => {\r\n  return (\r\n    <div className={css.root}>\r\n      <p className={css.text}>{text}</p>\r\n      <span className={css.buttonWrapper}>\r\n        <p className={clsx(css.button, css.text)}>{button}</p>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__38smT\",\"closeIcon\":\"style_closeIcon__so8Lm\"};"],"sourceRoot":""}