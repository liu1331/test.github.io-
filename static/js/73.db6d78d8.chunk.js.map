{"version":3,"sources":["pages/Crash/components/Panel/components/Params/components/Auto/components/OnOperation/style.module.scss","pages/Crash/components/Panel/components/Params/components/Auto/components/StopOn/style.module.scss","pages/Crash/components/Panel/components/Params/components/Auto/components/Limits/style.module.scss","pages/Crash/components/Panel/components/Params/components/Auto/components/OnOperation/index.tsx","pages/Crash/components/Panel/components/Params/components/Auto/components/Controller/index.tsx","pages/Crash/components/Panel/components/Params/components/Auto/components/StopOn/index.tsx","pages/Crash/components/Panel/components/Params/components/Auto/components/Limits/index.tsx","pages/Crash/components/Panel/components/Params/components/Auto/components/Base/index.tsx","pages/Crash/components/Panel/components/Params/components/Auto/index.tsx","pages/Crash/components/Panel/components/Params/components/Auto/style.module.scss"],"names":["module","exports","OnOperation","title","changeBetPlaceholder","cashoutPlaceholder","value","onChange","className","css","box","variant","event","Number","target","values","labels","name","toLowerCase","replace","nestedComponents","1","inputWrapper","CrashInput","type","placeholder","betPercent","String","replaceLetters","onBlur","replaceNumbers","radioClasses","label","radioLabel","radio","radioRadio","round","radioRound","Checkbox","isCashoutTurnOn","checked","classes","root","checkboxRoot","cashout","Controller","intl","useGetLocale","manager","useController","useState","onWin","setOnWin","onLoss","setOnLoss","useEffect","removeListener","autoParamsListener","betPercentValue","payoutValue","isChangePayout","handleOnChange","controllerValue","newParams","fields","auto","params","setAutoParams","section","formatMessage","id","coinStyle","zIndex","StopOn","limits","stopOnLoss","stopOnProfit","onProfit","setOnProfit","data","isStarted","setIsStarted","useCoins","showInUSD","selectedCoin","removeALL","autoLimitListener","removeASL","autoStartedListener","stopOnBlur","direction","element","newLimits","toFixed","setAutoLimits","gCss","clsx","input","inputMove","coin","disabled","style","dollarLabel","Limits","setLimits","maxBetAmount","amount","numberOfBets","Base","manual","setManual","returnMListener","manualValuesListener","manualValues","MainInput","wrap","payout","setManualField","newPayout","Math","max","crashControlConfig","min","Auto"],"mappings":"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","file":"static/js/73.db6d78d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"box\":\"style_box__2E7bt\",\"formBox\":\"style_formBox__rUjKt\",\"title\":\"style_title__1KvBc\",\"checkbox\":\"style_checkbox__bbGRC\",\"check\":\"style_check__3kWFW\",\"label\":\"style_label__3YEES\",\"checkboxRoot\":\"style_checkboxRoot__egTK0\",\"inputWrapper\":\"style_inputWrapper__2D62R\",\"radioLabel\":\"style_radioLabel__2khHF\",\"radioRadio\":\"style_radioRadio__1Xu6d\",\"radioRound\":\"style_radioRound__H5WZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dollarLabel\":\"style_dollarLabel__3vFzn\",\"input\":\"style_input__2vdcn\",\"inputMove\":\"style_inputMove__2uvfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__xjD36\",\"inputMove\":\"style_inputMove__38hXj\",\"dollarLabel\":\"style_dollarLabel__uubWy\"};","import React, { ChangeEvent, FocusEvent } from \"react\";\r\n\r\nimport { RadioGroup } from \"components\";\r\nimport Checkbox from \"components/Checkbox\";\r\n\r\nimport { replaceLetters, replaceNumbers } from \"utils/replaceString\";\r\nimport { OnOperationValue } from \"pages/Crash/crashTypes\";\r\n\r\nimport { CrashInput } from \"../../../CrashInput\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  changeBetPlaceholder: string;\r\n  cashoutPlaceholder: string;\r\n  value: OnOperationValue;\r\n  onChange: Function;\r\n}\r\n\r\nexport const OnOperation = ({\r\n  title,\r\n  changeBetPlaceholder,\r\n  cashoutPlaceholder,\r\n  value,\r\n  onChange,\r\n}: Props) => {\r\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange({ ...value, variant: Number(event.target.value) });\r\n  };\r\n  const handleCheckerChange = () => {\r\n    onChange({ ...value, isCashoutTurnOn: !value.isCashoutTurnOn });\r\n  };\r\n  const handleBetInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    onChange({\r\n      ...value,\r\n      betPercent: String(replaceLetters(event.target.value)),\r\n    });\r\n  };\r\n\r\n  const handleCashoutInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    onChange({\r\n      ...value,\r\n      cashout: String(replaceLetters(event.target.value)),\r\n    });\r\n  };\r\n\r\n  const handleBetInputBlur = (event: FocusEvent<HTMLInputElement>) => {\r\n    const target = Number(event.target.value);\r\n    onChange({\r\n      ...value,\r\n      betPercent: String(replaceNumbers(String(target))),\r\n    });\r\n  };\r\n  const handleCashoutInputBlur = (event: FocusEvent<HTMLInputElement>) => {\r\n    const target = Number(event.target.value);\r\n\r\n    onChange({\r\n      ...value,\r\n      cashout: String(replaceNumbers(String(target))),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={css.box}>\r\n      <h1 className={css.title}>{title}</h1>\r\n      <div>\r\n        <RadioGroup\r\n          value={value.variant}\r\n          onChange={handleRadioChange}\r\n          values={[0, 1, 2]}\r\n          labels={[\"Change Bet By (%):\", \"Reset to Base Bet\", \"Stop Betting\"]}\r\n          name={`${title}_radiogroup`.toLowerCase().replace(\" \", \"_\")}\r\n          nestedComponents={{\r\n            1: (\r\n              <div className={css.inputWrapper}>\r\n                <CrashInput\r\n                  type=\"number\"\r\n                  placeholder={changeBetPlaceholder}\r\n                  onChange={handleBetInputChange}\r\n                  value={value.betPercent}\r\n                  onBlur={handleBetInputBlur}\r\n                />\r\n              </div>\r\n            ),\r\n          }}\r\n          radioClasses={{\r\n            label: css.radioLabel,\r\n            radio: css.radioRadio,\r\n            round: css.radioRound,\r\n          }}\r\n        />\r\n        <div>\r\n          <Checkbox\r\n            onChange={handleCheckerChange}\r\n            checked={value.isCashoutTurnOn}\r\n            label=\"Change Cashout At:\"\r\n            classes={{\r\n              label: css.label,\r\n              root: css.checkboxRoot,\r\n            }}\r\n          />\r\n          <div className={css.inputWrapper}>\r\n            <CrashInput\r\n              type=\"number\"\r\n              placeholder={cashoutPlaceholder}\r\n              onChange={handleCashoutInputChange}\r\n              value={value.cashout}\r\n              onBlur={handleCashoutInputBlur}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(OnOperation);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { CrashAutoParams, useController } from \"pages/Crash/controller\";\r\nimport { OnOperationValue } from \"pages/Crash/crashTypes\";\r\nimport { OnOperation } from \"../OnOperation\";\r\nimport css from \"../../style.module.scss\";\r\nexport const Controller = () => {\r\n  const intl = useGetLocale();\r\n  const { manager } = useController();\r\n\r\n  const [onWin, setOnWin] = useState<OnOperationValue>({\r\n    betPercent: 0,\r\n    cashout: 2,\r\n    isCashoutTurnOn: false,\r\n    variant: 1,\r\n  });\r\n\r\n  const [onLoss, setOnLoss] = useState<OnOperationValue>({\r\n    betPercent: 100,\r\n    cashout: 2,\r\n    isCashoutTurnOn: false,\r\n    variant: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const removeListener = manager?.autoParamsListener((values) => {\r\n      const { onLoss, onWin } = values;\r\n      setOnLoss({\r\n        betPercent: Number(onLoss.betPercentValue),\r\n        cashout: Number(onLoss.payoutValue),\r\n        isCashoutTurnOn: onLoss.isChangePayout,\r\n        variant: onLoss.value,\r\n      });\r\n      setOnWin({\r\n        betPercent: Number(onWin.betPercentValue),\r\n        cashout: Number(onWin.payoutValue),\r\n        isCashoutTurnOn: onWin.isChangePayout,\r\n        variant: onWin.value,\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      removeListener && removeListener();\r\n    };\r\n  }, []);\r\n\r\n  const handleOnChange = (\r\n    type: \"onLoss\" | \"onWin\",\r\n    value: OnOperationValue,\r\n  ) => {\r\n    const controllerValue: CrashAutoParams[\"onLoss\" | \"onWin\"] = {\r\n      betPercentValue: String(value.betPercent),\r\n      isChangePayout: value.isCashoutTurnOn,\r\n      payoutValue: String(value.cashout),\r\n      //@ts-ignore\r\n      value: value.variant,\r\n    };\r\n    if (manager) {\r\n      const newParams = manager.fields.auto.values.params;\r\n      newParams[type] = controllerValue;\r\n      manager?.setAutoParams(newParams);\r\n    }\r\n  };\r\n\r\n  const handleChangeOnWin = (value: OnOperationValue) => {\r\n    handleOnChange(\"onWin\", value);\r\n  };\r\n\r\n  const handleChangeOnLoss = (value: OnOperationValue) => {\r\n    handleOnChange(\"onLoss\", value);\r\n  };\r\n\r\n  return (\r\n    <div className={css.section}>\r\n      <OnOperation\r\n        title={intl.formatMessage({\r\n          id: \"crashInterface.autoBet.onWin\",\r\n        })}\r\n        changeBetPlaceholder=\"100%\"\r\n        cashoutPlaceholder=\"2\"\r\n        value={onWin}\r\n        onChange={handleChangeOnWin}\r\n      />\r\n      <OnOperation\r\n        title={intl.formatMessage({\r\n          id: \"crashInterface.autoBet.onLoss\",\r\n        })}\r\n        changeBetPlaceholder=\"0%\"\r\n        cashoutPlaceholder=\"2\"\r\n        value={onLoss}\r\n        onChange={handleChangeOnLoss}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEventHandler, FC, useEffect, useState } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GetCoinImg } from \"components\";\r\nimport { useCoins } from \"hooks\";\r\nimport { toFixed } from \"utils\";\r\n\r\nimport { fields, useController } from \"pages/Crash/controller\";\r\n\r\nimport css from \"./style.module.scss\";\r\nimport gCss from \"../../style.module.scss\";\r\nimport { CrashInput } from \"../../../CrashInput\";\r\n\r\nconst coinStyle = { zIndex: 3 };\r\n\r\nconst StopOn: FC = () => {\r\n  const intl = useGetLocale();\r\n\r\n  const { manager } = useController();\r\n  const [onLoss, setOnLoss] = useState(\r\n    manager?.fields.auto.values.limits.stopOnLoss || 0,\r\n  );\r\n  const [onProfit, setOnProfit] = useState(\r\n    manager?.fields.auto.values.limits.stopOnProfit || 0,\r\n  );\r\n  const [isStarted, setIsStarted] = useState(fields.auto.data.isStarted);\r\n\r\n  const { showInUSD, selectedCoin } = useCoins([\"showInUSD\", \"selectedCoin\"]);\r\n\r\n  useEffect(() => {\r\n    const removeALL = manager?.autoLimitListener((values) => {\r\n      const { stopOnLoss, stopOnProfit } = values;\r\n      setOnLoss(stopOnLoss);\r\n      setOnProfit(stopOnProfit);\r\n    });\r\n    const removeASL = manager?.autoStartedListener((value) =>\r\n      setIsStarted(value),\r\n    );\r\n\r\n    return () => {\r\n      removeASL && removeASL();\r\n      removeALL && removeALL();\r\n    };\r\n  }, []);\r\n\r\n  const handleOnProfitChange: ChangeEventHandler<HTMLInputElement> = ({\r\n    target,\r\n  }) => {\r\n    manager?.setAutoLimits({\r\n      ...manager.fields.auto.values.limits,\r\n      //@ts-ignore\r\n      stopOnProfit: target.value,\r\n    });\r\n  };\r\n\r\n  const handleOnLossChange: ChangeEventHandler<HTMLInputElement> = ({\r\n    target,\r\n  }) => {\r\n    manager?.setAutoLimits({\r\n      ...manager.fields.auto.values.limits,\r\n      //@ts-ignore\r\n      stopOnLoss: target.value,\r\n    });\r\n  };\r\n\r\n  const stopOnBlur = (direction: \"profit\" | \"loss\") => {\r\n    let value = Number(direction === \"profit\" ? onProfit : onLoss);\r\n    const element = direction === \"profit\" ? \"stopOnProfit\" : \"stopOnLoss\";\r\n\r\n    if (Number(value) < 0) {\r\n      value *= -1;\r\n    }\r\n\r\n    if (manager) {\r\n      const newLimits = manager.fields.auto.values.limits;\r\n      newLimits[element] = toFixed(value);\r\n\r\n      manager?.setAutoLimits(newLimits);\r\n    }\r\n  };\r\n\r\n  const handleOnProfitBlur = () => {\r\n    stopOnBlur(\"profit\");\r\n  };\r\n\r\n  const handleOnLossBlur = () => {\r\n    stopOnBlur(\"loss\");\r\n  };\r\n\r\n  return (\r\n    <div className={gCss.section}>\r\n      <div>\r\n        <h1 className={gCss.title}>\r\n          {intl.formatMessage({\r\n            id: \"crashInterface.autoBet.stopOnProfit\",\r\n          })}\r\n        </h1>\r\n\r\n        <div className={gCss.inputWrapper}>\r\n          <CrashInput\r\n            className={clsx(css.input, {\r\n              [css.inputMove]: showInUSD && selectedCoin?.coin !== \"GEM\",\r\n            })}\r\n            value={onProfit}\r\n            onChange={handleOnProfitChange}\r\n            onBlur={handleOnProfitBlur}\r\n            type=\"number\"\r\n            disabled={isStarted}\r\n          />\r\n          <GetCoinImg style={coinStyle} />\r\n          {showInUSD && selectedCoin?.coin !== \"GEM\" && (\r\n            <span className={css.dollarLabel}>$</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h1 className={gCss.title}>\r\n          {intl.formatMessage({\r\n            id: \"crashInterface.autoBet.stopOnLoss\",\r\n          })}\r\n        </h1>\r\n\r\n        <div className={gCss.inputWrapper}>\r\n          <CrashInput\r\n            className={clsx(css.input, {\r\n              [css.inputMove]: showInUSD && selectedCoin?.coin !== \"GEM\",\r\n            })}\r\n            value={onLoss}\r\n            onChange={handleOnLossChange}\r\n            onBlur={handleOnLossBlur}\r\n            type=\"number\"\r\n            disabled={isStarted}\r\n          />\r\n          <GetCoinImg style={coinStyle} />\r\n          {showInUSD && selectedCoin?.coin !== \"GEM\" && (\r\n            <span className={css.dollarLabel}>$</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopOn;\r\n","import React, { ChangeEventHandler, FC, useEffect, useState } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GetCoinImg } from \"components\";\r\nimport { useCoins } from \"hooks\";\r\n\r\nimport { fields, useController } from \"pages/Crash/controller\";\r\nimport { CrashInput } from \"../../../CrashInput\";\r\nimport gCss from \"../../style.module.scss\";\r\nimport css from \"./style.module.scss\";\r\nimport { toFixed } from \"utils\";\r\n\r\nconst Limits: FC = () => {\r\n  const intl = useGetLocale();\r\n  const { manager } = useController();\r\n\r\n  const { showInUSD, selectedCoin } = useCoins([\"showInUSD\", \"selectedCoin\"]);\r\n  const [limits, setLimits] = useState(\r\n    manager?.fields.auto.values.limits || fields.auto.values.limits,\r\n  );\r\n  const [isStarted, setIsStarted] = useState(fields.auto.data.isStarted);\r\n\r\n  useEffect(() => {\r\n    const removeALL = manager?.autoLimitListener((limits) => {\r\n      setLimits(limits);\r\n    });\r\n\r\n    const removeASL = manager?.autoStartedListener((value) =>\r\n      setIsStarted(value),\r\n    );\r\n\r\n    return () => {\r\n      removeASL && removeASL();\r\n      removeALL && removeALL();\r\n    };\r\n  }, []);\r\n\r\n  const handleChangeMaxBetAmount: ChangeEventHandler<HTMLInputElement> = ({\r\n    target,\r\n  }) => {\r\n    manager?.setAutoLimits({\r\n      ...limits,\r\n      //@ts-ignore\r\n      maxBetAmount: target.value,\r\n    });\r\n  };\r\n\r\n  const handleBlurMaxBetAmount = () => {\r\n    let amount = Number(limits.maxBetAmount);\r\n\r\n    if (amount < 0) {\r\n      amount = amount * -1;\r\n    }\r\n\r\n    manager?.setAutoLimits({\r\n      ...limits,\r\n      maxBetAmount: toFixed(amount),\r\n    });\r\n  };\r\n\r\n  const handleChangeMaxBets: ChangeEventHandler<HTMLInputElement> = ({\r\n    target,\r\n  }) => {\r\n    manager?.setAutoLimits({\r\n      ...limits,\r\n      numberOfBets: target.value,\r\n    });\r\n  };\r\n\r\n  const handleBlurMaxBets = () => {\r\n    let amount = Number(limits.numberOfBets);\r\n    if (amount < 0) {\r\n      amount = amount * -1;\r\n    }\r\n\r\n    manager?.setAutoLimits({\r\n      ...limits,\r\n      numberOfBets: amount,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={gCss.section}>\r\n      <div>\r\n        <h1 className={gCss.title}>\r\n          {intl.formatMessage({\r\n            id: \"crashInterface.autoBet.maximumBetAmount\",\r\n          })}\r\n        </h1>\r\n\r\n        <div className={gCss.inputWrapper}>\r\n          <CrashInput\r\n            type=\"number\"\r\n            className={clsx(css.input, {\r\n              [css.inputMove]: showInUSD && selectedCoin?.coin !== \"GEM\",\r\n            })}\r\n            value={limits.maxBetAmount}\r\n            disabled={isStarted}\r\n            onChange={handleChangeMaxBetAmount}\r\n            onBlur={handleBlurMaxBetAmount}\r\n          />\r\n          <GetCoinImg />\r\n          {showInUSD && selectedCoin?.coin !== \"GEM\" ? (\r\n            <span className={css.dollarLabel}>$</span>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h1 className={gCss.title}>\r\n          {intl.formatMessage({\r\n            id: \"crashInterface.autoBet.maximumBets\",\r\n          })}\r\n        </h1>\r\n\r\n        <div className={gCss.inputWrapper}>\r\n          <CrashInput\r\n            type=\"number\"\r\n            value={limits.numberOfBets}\r\n            disabled={isStarted}\r\n            onChange={handleChangeMaxBets}\r\n            onBlur={handleBlurMaxBets}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Limits;\r\n","import React, { ChangeEventHandler, useEffect, useState, FC } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { crashControlConfig } from \"pages/Crash/components\";\r\n\r\nimport {\r\n  fields,\r\n  ManualFieldsValues,\r\n  useController,\r\n} from \"pages/Crash/controller\";\r\n\r\nimport { CrashInput } from \"../../../CrashInput\";\r\nimport MainInput from \"../../../MainInput\";\r\nimport css from \"../../style.module.scss\";\r\n\r\nconst Base: FC = () => {\r\n  const intl = useGetLocale();\r\n\r\n  const { manager } = useController();\r\n  const [manual, setManual] = useState<ManualFieldsValues>(\r\n    manager?.fields.manual || fields.manual,\r\n  );\r\n  const [isStarted, setIsStarted] = useState(fields.auto.data.isStarted);\r\n  const handleChangePayout: ChangeEventHandler<HTMLInputElement> = ({\r\n    target,\r\n  }) => {\r\n    //@ts-ignore\r\n    manager?.setManualField(\"payout\", target.value);\r\n  };\r\n\r\n  const handleBlurPayout = () => {\r\n    let newPayout = Number(manual.payout);\r\n\r\n    newPayout = Math.max(newPayout, crashControlConfig.payout.min);\r\n    newPayout = Math.min(newPayout, crashControlConfig.payout.max);\r\n\r\n    manager?.setManualField(\"payout\", newPayout);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const returnMListener = manager?.manualValuesListener((manualValues) => {\r\n      setManual({ ...manualValues });\r\n    });\r\n    const removeASL = manager?.autoStartedListener((value) =>\r\n      setIsStarted(value),\r\n    );\r\n\r\n    return () => {\r\n      removeASL && removeASL();\r\n      returnMListener && returnMListener();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={css.section}>\r\n      <div>\r\n        <h1 className={css.title}>\r\n          {intl.formatMessage({\r\n            id: \"crashInterface.autoBet.baseBetAmount\",\r\n          })}\r\n        </h1>\r\n\r\n        <MainInput wrap disabled={isStarted} />\r\n      </div>\r\n      <div>\r\n        <h1 className={css.title}>\r\n          {intl.formatMessage({\r\n            id: \"crashInterface.autoBet.baseCashout\",\r\n          })}\r\n        </h1>\r\n\r\n        <div className={css.inputWrapper}>\r\n          <CrashInput\r\n            value={manual.payout}\r\n            type=\"number\"\r\n            onChange={handleChangePayout}\r\n            onBlur={handleBlurPayout}\r\n            disabled={isStarted}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import React from \"react\";\r\n\r\nimport { Controller } from \"./components/Controller\";\r\nimport StopOn from \"./components/StopOn\";\r\nimport Limits from \"./components/Limits\";\r\nimport Base from \"./components/Base\";\r\n\r\nconst Auto = () => {\r\n  return (\r\n    <>\r\n      <Base />\r\n      <StopOn />\r\n      <Controller />\r\n      <Limits />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auto;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"style_section__P_Kz-\",\"title\":\"style_title__1-yxB\",\"inputWrapper\":\"style_inputWrapper__QAJ5A\"};"],"sourceRoot":""}