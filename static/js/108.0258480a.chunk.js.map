{"version":3,"sources":["components/Statistics/Tabs/AllBets/AllBets.tsx","components/Statistics/Tabs/AllBets/createBetsTableData.tsx","components/Statistics/Tabs/AllBets/style.module.scss"],"names":["wait","throttle","f","AllBets","open","intl","useGetLocale","tableRef","useRef","newBet","useState","betsList","setBetsList","pushHistoryTo","useModalLocation","getTableHeaderName","getIntlValue","handleOpenData","id","user_name","searchParams","userName","useEffect","chatSocket","send","type","chatPipeFunctions","statisticAllBetsListener","data","action","bets","reverse","bet","bet_amt","coin","game","payout","profile_picture_url","profit","current","unshift","length","children","querySelector","forEach","tr","index","onclick","textContent","src","generateCoinUrl","betProfit","Number","classList","replace","css","profitLose","error","track","errors","tableData","showUSD","coinPrice","callBack","map","i","price","toFixed","toString","values","variant","className","coinContainer","coinIcon","coinWrapper","replaceNumbers","key","createBetsTableData","coinsManager","showInUSD","coinPriceState","wrapper","tableWrapper","ref","head","body","rows","classes","td","module","exports"],"mappings":"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","file":"static/js/108.0258480a.chunk.js","sourcesContent":["//@ts-nocheck\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { getIntlValue } from \"providers\";\r\nimport { coinsManager, useModalLocation } from \"hooks\";\r\nimport { chatSocket, track } from \"utils\";\r\nimport { Table, generateCoinUrl } from \"components\";\r\nimport { throttle } from \"utils/lodash\";\r\n\r\nimport { BetType } from \"pages/Home/components/BetsList\";\r\n\r\nimport { createBetsTableData } from \"./createBetsTableData\";\r\nimport css from \"./style.module.scss\";\r\nimport { chatPipeFunctions } from \"components/Chat/chatContext\";\r\n\r\nexport interface HistoryElement {\r\n  id: string;\r\n  payout: string;\r\n  hash: string;\r\n}\r\n\r\nconst wait = throttle((f: () => void) => {\r\n  f();\r\n}, 300);\r\n\r\nconst betsLength = 10;\r\n\r\ninterface Props {\r\n  open: boolean;\r\n}\r\n\r\nconst AllBets = ({ open }: Props) => {\r\n  const intl = useGetLocale();\r\n\r\n  const tableRef = useRef<HTMLDivElement | null>(null);\r\n  const newBet = useRef<BetType[]>([]);\r\n  const [betsList, setBetsList] = useState<BetType[]>([]);\r\n\r\n  const { pushHistoryTo } = useModalLocation(\"bet-data\");\r\n\r\n  const getTableHeaderName = getIntlValue(\r\n    intl,\r\n    \"gameTemplate.statistics.allBetsTable.\",\r\n  );\r\n\r\n  const handleOpenData = (id: string, user_name: string) => {\r\n    pushHistoryTo({ searchParams: { id, userName: user_name } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      const listener = (data: StatisticAllBetsTypes) => {\r\n        switch (data.action) {\r\n          case \"all_bets\":\r\n            setBetsList(data?.bets?.reverse());\r\n            break;\r\n\r\n          case \"new_bet_received\":\r\n            const bet = {\r\n              bet_amt: data.bet_amt,\r\n              coin: data.coin,\r\n              game: data.game,\r\n              id: data.id,\r\n              payout: data.payout,\r\n              profile_picture_url: data.profile_picture_url,\r\n              profit: data.profit,\r\n              user_name: data.user_name,\r\n            };\r\n\r\n            const updateTable = () => {\r\n              try {\r\n                newBet.current.unshift(bet);\r\n                if (newBet.current.length >= betsLength)\r\n                  newBet.current.length = betsLength;\r\n\r\n                const table = tableRef.current?.querySelector(\"tbody\");\r\n                const { children } = table as HTMLElement;\r\n                const tableElements = [...children];\r\n                tableElements.forEach((tr, index) => {\r\n                  const bet = newBet.current[index];\r\n                  if (!bet) return;\r\n\r\n                  const { id, user_name, game, payout, coin, bet_amt, profit } =\r\n                    bet;\r\n\r\n                  tr.onclick = () => handleOpenData(id, user_name);\r\n\r\n                  const { children } = tr;\r\n\r\n                  children[0].textContent = game;\r\n\r\n                  children[1].textContent = user_name;\r\n\r\n                  children[2].querySelector(\"span\").textContent = `${payout}x`;\r\n\r\n                  children[3].querySelector(\"img\").src = generateCoinUrl(coin);\r\n\r\n                  children[3].querySelector(\"span\").textContent = bet_amt;\r\n\r\n                  const betProfit = children[4].querySelector(\"span\");\r\n                  betProfit.textContent = profit;\r\n\r\n                  if (betProfit) {\r\n                    Number(profit) < 0\r\n                      ? betProfit.classList.replace(css.profit, css.profitLose)\r\n                      : betProfit.classList.replace(css.profitLose, css.profit);\r\n                  }\r\n                });\r\n              } catch (error) {\r\n                track()?.errors(error);\r\n              }\r\n            };\r\n            wait(updateTable);\r\n            break;\r\n\r\n          case \"set_user_parameters\":\r\n            if (!betsList || !betsList.length) {\r\n              chatSocket.send({ type: \"get_all_bets\" });\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      };\r\n\r\n      chatSocket.send({ type: \"get_all_bets\" });\r\n      chatPipeFunctions.statisticAllBetsListener = listener;\r\n    } else {\r\n      chatPipeFunctions.statisticAllBetsListener = () => null;\r\n    }\r\n\r\n    return () => {\r\n      chatPipeFunctions.statisticAllBetsListener = () => null;\r\n    };\r\n  }, [open]);\r\n\r\n  if (!open) {\r\n    return null;\r\n  }\r\n\r\n  const tableData = createBetsTableData(\r\n    betsList,\r\n    coinsManager.showInUSD,\r\n    coinsManager.coinPriceState,\r\n    handleOpenData,\r\n  );\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <div className={css.tableWrapper} ref={tableRef}>\r\n        <Table\r\n          head={{\r\n            values: [\r\n              getTableHeaderName(\"game\"),\r\n              getTableHeaderName(\"user\"),\r\n              getTableHeaderName(\"payout\"),\r\n              getTableHeaderName(\"bet\"),\r\n              getTableHeaderName(\"profit\"),\r\n            ],\r\n          }}\r\n          body={{\r\n            rows: tableData,\r\n            classes: {\r\n              td: css.td,\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllBets;\r\n","import React from \"react\";\r\n\r\nimport { CoinPriceList } from \"hooks\";\r\nimport { replaceNumbers } from \"utils\";\r\nimport { GetCoinImg, TBodyProps, Typography } from \"components\";\r\n\r\nimport { BetType } from \"pages/Home/components/BetsList\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const createBetsTableData = (\r\n  betsList: BetType[],\r\n  showUSD: boolean,\r\n  coinPrice: CoinPriceList,\r\n  callBack: (id: string, user_name: string) => void,\r\n) =>\r\n  betsList.map<TBodyProps>(\r\n    ({ bet_amt, coin, game, id, payout, profit, user_name }, i) => {\r\n      if (game === \"VIDEOPOKER\") {\r\n        game = \"VIDEO POKER\";\r\n      }\r\n      bet_amt = showUSD\r\n        ? (Number(bet_amt) * Number(coinPrice[coin]?.price))\r\n            .toFixed(8)\r\n            .toString()\r\n        : bet_amt;\r\n      profit = showUSD\r\n        ? (Number(profit) * Number(coinPrice[coin]?.price))\r\n            .toFixed(8)\r\n            .toString()\r\n        : profit;\r\n\r\n      const values = [\r\n        game,\r\n        user_name,\r\n\r\n        <Typography variant=\"inherit\">{payout}x</Typography>,\r\n        <div className={css.coinContainer}>\r\n          <GetCoinImg coin={coin || \"BTC\"} className={css.coinIcon} />\r\n          <Typography variant=\"inherit\" className={css.coinWrapper}>\r\n            {showUSD && coin !== \"GEM\" ? \"$\" : null}\r\n            {replaceNumbers(bet_amt)}\r\n          </Typography>\r\n        </div>,\r\n\r\n        <Typography\r\n          variant=\"inherit\"\r\n          className={Number(profit) < 0 ? css.profitLose : css.profit}>\r\n          {showUSD && coin !== \"GEM\" ? \"$\" : null}\r\n          {replaceNumbers(profit)}\r\n        </Typography>,\r\n      ];\r\n\r\n      return {\r\n        values,\r\n        key: id,\r\n        callBack: () => callBack(id, user_name),\r\n      };\r\n    },\r\n  );\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"wrapper\":\"style_wrapper__2m-jn\",\"tableWrapper\":\"style_tableWrapper__3p4_m\",\"coinIcon\":\"style_coinIcon__15wM3\",\"profit\":\"style_profit__3-9F-\",\"profitLose\":\"style_profitLose__RgJh1\",\"td\":\"style_td__3W5sn\"};"],"sourceRoot":""}