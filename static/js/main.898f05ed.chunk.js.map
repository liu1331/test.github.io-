{"version":3,"sources":["components/ProductCard/ProductCard.module.css","redux/reducers/BasketReducer/BasketOrderType.ts","redux/reducers/BasketReducer/BasketReducer.tsx","types/discounts.ts","redux/reducers/ProductContentReducer/ProductType.ts","redux/reducers/ProductContentReducer/ProductContentReducer.tsx","redux/reducers/allActionCreators.tsx","hooks/useAC.tsx","hooks/withDiscount.tsx","hooks/useChangeValue.tsx","routing/routes.ts","components/ChangeValue/ChahgeValue.tsx","components/Basket/Order.tsx","hooks/useTypedSelector.tsx","pages/Basket.tsx","components/ProductCard/ProductCardModal/ProductCardModal.tsx","components/ProductCard/ProductCard.tsx","pages/ProductContent.tsx","components/AppRouter/AppRouter.tsx","components/Navbar/Navbar.tsx","App.tsx","redux/store.tsx","index.tsx"],"names":["module","exports","BasketActionName","InitalState","orders","totalPrice","DiscountName","ProductActionName","BasketActionCreators","setOrder","order","type","SET_ORDER","setOrders","SET_ORDERS","removeOrder","REMOVE_ORDER","setTotalPriceAction","SET_TOTAL_PRICE","cahngeValueOrdeAction","productName","countValue","CHANGE_ORDER_VALUE_ACTION","localStorageOrders","dispatch","localStorage","getItem","json","JSON","parse","push","setItem","stringify","jsonTotalPrice","Number","acceptOrders","clear","deleteOrderThunk","jsonOrders","i","length","splice","changeValueOrder","reduce","prev","curr","InitialState","products","ProductActionCreactors","setProducts","SET_PRODUCTS","getProductsThunk","response","img","price","inBasket","discount","ON_3_KG","pushProduct","product","PUSH_PRODUCT","allActionCreators","useActionCreators","useDispatch","bindActionCreators","withDiscount","priceWithDiscount","valueRule","useChangeValue","useState","countValueInHook","setCountValue","totalPriceInHook","setTotalPrice","useEffect","upValue","Value","newPrice","downValue","RoutePath","ChahgeValue","props","className","onClick","shape","icon","PlusOutlined","MinusOutlined","Order","src","alt","style","textAlign","marginRight","fontSize","fontWeight","CloseOutlined","cursor","UseTypedSelector","useSelector","Basket","state","storage","map","width","height","paddingTop","color","size","danger","ProductCardModal","title","visible","isModalVisible","onOk","setIsModalVisible","okText","cancelText","onCancel","ProductCard","btn","setBtn","j","showModal","item","hoverable","display","flexDirection","alignItems","flex","cover","CardImg","description","marginBottom","disabled","ProductContent","Routes","path","BASKET","component","exact","PRODUCT_CONTENT","AppRouter","route","to","Navbar","router","useHistory","Header","justify","align","theme","mode","selectable","Item","HomeOutlined","ShoppingOutlined","App","Reducers","combineReducers","action","e","newTotalPrice","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.898f05ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardImg\":\"ProductCard_CardImg__2bEm5\"};","import { IOrder } from './../../../types/order';\r\nexport interface IBasketState{\r\n    orders: IOrder[],\r\n    totalPrice: number\r\n}\r\n\r\nexport enum BasketActionName{\r\n    SET_ORDER= \"SET_ORDER\",\r\n    SET_ORDERS= \"SET_ORDERS\",\r\n    SET_TOTAL_PRICE= \"SET_TOTAL_PRICE\",\r\n    REMOVE_ORDER= \"REMOVE_ORDER\",\r\n    CHANGE_ORDER_VALUE_ACTION= \"CHANGE_ORDER_VALUE_ACTION\",\r\n}\r\n\r\nexport interface SetOrderAction{\r\n    type: BasketActionName.SET_ORDER\r\n    order: IOrder\r\n}\r\nexport interface SetOrdersAction{\r\n    type: BasketActionName.SET_ORDERS\r\n    orders: IOrder[]\r\n}\r\nexport interface removeOrder{\r\n    type: BasketActionName.REMOVE_ORDER\r\n    order: IOrder\r\n}\r\nexport interface setTotalPrice{\r\n    type: BasketActionName.SET_TOTAL_PRICE\r\n\r\n}\r\nexport interface changeOrderValueAction{\r\n    type: BasketActionName.CHANGE_ORDER_VALUE_ACTION;\r\n    productName:string;\r\n    countValue: number;\r\n    totalPrice: number\r\n\r\n}\r\n\r\n\r\nexport type BasketActions = SetOrderAction | SetOrdersAction | removeOrder | setTotalPrice | changeOrderValueAction","import { IOrder } from \"../../../types/order\"\r\nimport { AppDispatch } from \"../../store\";\r\nimport { BasketActionName, BasketActions, IBasketState } from \"./BasketOrderType\"\r\n\r\nconst InitalState: IBasketState = {\r\n    orders: [],\r\n    totalPrice: 0\r\n}\r\n\r\nexport function BasketReducer(state = InitalState, action: BasketActions) {\r\n    switch (action.type) {\r\n\r\n        case BasketActionName.SET_ORDER:\r\n            return { ...state, orders: [...state.orders, action.order], totalPrice: Number(state.totalPrice) + Number(action.order.totalPrice) }\r\n\r\n            break;\r\n        case BasketActionName.SET_ORDERS:\r\n\r\n            return { ...state, orders: [...action.orders] }\r\n        case BasketActionName.SET_TOTAL_PRICE:\r\n        const newTotalPrice = state.orders.reduce(function (prev, curr) {\r\n            return prev + curr.totalPrice\r\n    }, 0)\r\n\r\n        return {...state, totalPrice:newTotalPrice }\r\n        case BasketActionName.REMOVE_ORDER:\r\n            return {\r\n                ...state,\r\n                orders: state.orders.filter((order) => order.productName != action.order.productName), totalPrice: Number(state.totalPrice) - Number(action.order.totalPrice)\r\n            }\r\n        case BasketActionName.CHANGE_ORDER_VALUE_ACTION:\r\n            return {\r\n                ...state,\r\n                orders: state.orders.map((order)=>{\r\n                    if (order.productName ===action.productName){\r\n                        return {...order, countValue: action.countValue, totalPrice: action.totalPrice}\r\n                    }else{\r\n                        return {...order}\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const BasketActionCreators = {\r\n    setOrder: (order: IOrder): BasketActions => ({ type: BasketActionName.SET_ORDER, order }),\r\n    setOrders: (orders: IOrder[]): BasketActions => ({ type: BasketActionName.SET_ORDERS, orders }),\r\n    removeOrder: (order: IOrder): BasketActions => ({ type: BasketActionName.REMOVE_ORDER, order }),\r\n    setTotalPriceAction: (): BasketActions => ({ type: BasketActionName.SET_TOTAL_PRICE }),\r\n    cahngeValueOrdeAction: (productName:string, totalPrice:number, countValue:number): BasketActions => ({ type: BasketActionName.CHANGE_ORDER_VALUE_ACTION, productName, totalPrice, countValue }),\r\n\r\n    localStorageOrders: (order: IOrder) => (dispatch: AppDispatch) => {\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n        const json = JSON.parse(orders) as IOrder[];\r\n\r\n        json.push(order)\r\n        dispatch(BasketActionCreators.setOrder(order))\r\n        localStorage.setItem('orders', JSON.stringify(json))\r\n        const totalPrice = localStorage.getItem('totalPrice') || '0';\r\n        const jsonTotalPrice = JSON.parse(totalPrice);\r\n        localStorage.setItem('totalPrice', JSON.stringify(Number(jsonTotalPrice) + Number(order.totalPrice)))\r\n        dispatch(BasketActionCreators.setTotalPriceAction())\r\n\r\n    },\r\n    acceptOrders: () => (dispatch: AppDispatch) => {\r\n        //axios\r\n        localStorage.clear();\r\n        dispatch(BasketActionCreators.setOrders([]));\r\n    },\r\n    deleteOrderThunk: (order: IOrder) => (dispatch: AppDispatch) => {\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n\r\n        const jsonOrders = JSON.parse(orders) as IOrder[];\r\n        for (let i = 0; i < jsonOrders.length; i++) {\r\n            if (jsonOrders[i].productName === order.productName) {\r\n                jsonOrders.splice(i, 1);\r\n            }\r\n        }\r\n        localStorage.setItem('orders', JSON.stringify(jsonOrders))\r\n        dispatch(BasketActionCreators.removeOrder(order))\r\n        const totalPrice = localStorage.getItem('totalPrice') || '0';\r\n        const jsonTotalPrice = JSON.parse(totalPrice);\r\n        localStorage.setItem('totalPrice', JSON.stringify(Number(jsonTotalPrice) - Number(order.totalPrice)))\r\n        dispatch(BasketActionCreators.setTotalPriceAction())\r\n    },\r\n    changeValueOrder:(productName:string, totalPrice:number, countValue:number)=>(dispatch: AppDispatch)=>{\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n        const jsonOrders = JSON.parse(orders) as IOrder[];\r\n        for (let i = 0; i < jsonOrders.length; i++) {\r\n            if (jsonOrders[i].productName === productName) {\r\n                jsonOrders[i].countValue = countValue;\r\n                jsonOrders[i].totalPrice = totalPrice;\r\n            }\r\n        }\r\n        localStorage.setItem('orders', JSON.stringify(jsonOrders))\r\n        localStorage.setItem('totalPrice', JSON.stringify(jsonOrders.reduce(function(prev, curr) { return prev + curr.totalPrice},0)))\r\n        dispatch(BasketActionCreators.setOrders(jsonOrders));\r\n        dispatch( BasketActionCreators.setTotalPriceAction())\r\n\r\n    }\r\n\r\n\r\n}","export enum DiscountName{\r\n    ON_3_KG='ON_3_KG',\r\n    ON_2_KG='ON_2_KG'\r\n}","import { IProduct } from '../../../types/product';\r\n\r\n\r\nexport interface IProductState{\r\n    products: IProduct[],\r\n    // totalProductsPrice: number\r\n}\r\n\r\nexport interface IPushProduct{\r\n    productName: string;\r\n    totalPrice: number;\r\n    inBasket:boolean;\r\n\r\n}\r\n\r\nexport enum ProductActionName{\r\n    SET_PRODUCTS = \"SET_PRODUCTS\",\r\n    PUSH_PRODUCT = \"SET_PRODUCT\"\r\n}\r\n\r\nexport interface SetProducts{\r\n    type: ProductActionName.SET_PRODUCTS;\r\n    products: IProduct[]\r\n\r\n}\r\nexport interface pushProduct{\r\n    type: ProductActionName.PUSH_PRODUCT;\r\n    product: IProduct\r\n\r\n}\r\n\r\n\r\nexport type ProductAction = SetProducts | pushProduct\r\n","import axios from \"axios\";\r\nimport { DiscountName } from \"../../../types/discounts\";\r\nimport { IProduct } from \"../../../types/product\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { IProductState, ProductAction, ProductActionName } from \"./ProductType\";\r\n\r\n\r\n\r\nconst InitialState:IProductState = {\r\n    products: [],\r\n    // totalProductsPrice: 0\r\n\r\n}\r\n\r\nexport default function ProductContentReducer(state= InitialState, action:ProductAction ){\r\n\r\n    // debugger\r\n    switch (action.type) {\r\n        case ProductActionName.SET_PRODUCTS:\r\n            return {...state, products: [...action.products]}\r\n            break;\r\n        case ProductActionName.PUSH_PRODUCT:\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                products: state.products.map((e) => {\r\n                    if (e.productName === action.product.productName) {\r\n                        return { ...e, inBasket: e.inBasket = action.product.inBasket};\r\n                    };\r\n                    return e;\r\n                }),\r\n                // totalProductsPrice: Number(state.totalProductsPrice) + Number(action.product.totalPrice)\r\n            }\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nexport const ProductActionCreactors ={\r\n    setProducts:(products:IProduct[]):ProductAction =>({type:ProductActionName.SET_PRODUCTS, products}),\r\n    getProductsThunk:()=>(dispatch: AppDispatch)=>{\r\n        // axios.get<IProduct[]>().then((response)=>{\r\n        //    dispatch(ProductActionCreactors.setProducts(response.data))\r\n        // });\r\n        const response = [\r\n            {productName:\"Банан\",\r\n                img:\"https://ambassador-city-jomtien.ru/uploads/posts/2014-06/1402862895_banana2.jpg\",\r\n                price:10, inBasket:false, discount:''},\r\n            {productName:\"Яблоко\",\r\n                img:\"https://img3.zakaz.ua/upload.version_1.0.4f1f0c8dc6cf9362a789bf80d070ccf6.1350x1350.jpeg\",\r\n                price:8, inBasket:false, discount:''},\r\n            {productName:\"Папайя\",\r\n                img:\"https://img3.zakaz.ua/src.1607469352.ad72436478c_2020-12-09_Aliona/src.1607469352.SNCPSG10.obj.0.1.jpg.oe.jpg.pf.jpg.1350nowm.jpg.1350x.jpg\",\r\n                price:10, inBasket:false, discount: DiscountName.ON_3_KG}\r\n        ];\r\n        dispatch(ProductActionCreactors.setProducts(response));\r\n\r\n    },\r\n    pushProduct:(product:IProduct):ProductAction=>({type: ProductActionName.PUSH_PRODUCT, product}) //axios\r\n}","import { BasketActionCreators } from \"./BasketReducer/BasketReducer\";\r\nimport { ProductActionCreactors } from \"./ProductContentReducer/ProductContentReducer\";\r\n\r\n\r\nexport const allActionCreators = {\r\n    ...ProductActionCreactors,\r\n    ...BasketActionCreators\r\n}","import { allActionCreators } from '../redux/reducers/allActionCreators';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nexport const useActionCreators = () =>{\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators, dispatch);\r\n}","import { DiscountName } from \"../types/discounts\";\r\n\r\n\r\n\r\nexport interface IOrderIsDiscount{\r\n    countValueInHook: number,\r\n    discount: string | '',\r\n    price: number\r\n}\r\n\r\n\r\n\r\nexport function withDiscount (order:IOrderIsDiscount){\r\n        switch (order.discount) {\r\n            case DiscountName.ON_3_KG:\r\n                    return {priceWithDiscount: Number(order.price) /2,\r\n                    valueRule: 3}\r\n\r\n            default:\r\n               return {priceWithDiscount: Number(order.price),\r\n                valueRule: null}\r\n        }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActionCreators } from \"./useAC\";\r\nimport { withDiscount } from \"./withDiscount\";\r\n\r\n\r\n\r\nexport interface IOrderIsDiscount {\r\n    countValue?: number,\r\n    totalPrice?: number,\r\n    discount: string | '' | undefined,\r\n    price: number,\r\n    productName: string;\r\n    img?: string;\r\n    inBasket?: boolean\r\n}\r\n\r\n\r\n\r\nexport function useChangeValue(order:any) {\r\n    const {price, discount , productName , countValue} = order\r\n    const [countValueInHook, setCountValue] = useState<number>(countValue || 1)\r\n    const [totalPriceInHook, setTotalPrice] = useState<number>(order.totalPrice || order.price)\r\n    const {changeValueOrder} = useActionCreators()\r\n\r\n    useEffect(() => {\r\n        changeValueOrder(productName, totalPriceInHook, countValueInHook)\r\n    }, [countValueInHook])\r\n\r\n    const upValue = () => {\r\n        setCountValue((Value) => Value + 1)\r\n        const newPrice = withDiscount({ countValueInHook, discount, price })\r\n\r\n\r\n        if (!!discount) {\r\n\r\n\r\n            if (Number(countValueInHook + 1) % Number(newPrice.valueRule) === 0) {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) + Number(newPrice.priceWithDiscount))\r\n\r\n            } else {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) + Number(price))\r\n\r\n            }\r\n\r\n        } else {\r\n            setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) + Number(price))\r\n\r\n        }\r\n    }\r\n    const downValue = () => {\r\n        if (countValueInHook - 1 === 0) {\r\n            return\r\n        }\r\n        if (!!discount) {\r\n            const newPrice = withDiscount({ countValueInHook, discount, price })\r\n            if (Number(countValueInHook) % Number(newPrice.valueRule) === 0) {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) - Number(newPrice.priceWithDiscount))\r\n\r\n            } else {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) - Number(price))\r\n            }\r\n        } else {\r\n            setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) - Number(price))\r\n        }\r\n        setCountValue((Value) => Value - 1)\r\n    }\r\n\r\n    return {\r\n        countValueInHook, setCountValue, totalPriceInHook, setTotalPrice, upValue, downValue\r\n    }\r\n}\r\n","import Basket from \"../pages/Basket\";\r\nimport ProductContent from \"../pages/ProductContent\";\r\n\r\n\r\n\r\nexport interface IRoute{\r\n    path: string;\r\n    component: React.ComponentType;\r\n    exact: boolean;\r\n}\r\n\r\nexport enum RoutePath{\r\n    BASKET= '/basket',\r\n    PRODUCT_CONTENT='/productContent'\r\n\r\n}\r\n\r\nexport const Routes:IRoute[] = [\r\n\r\n    {path: RoutePath.BASKET, component: Basket, exact: true},\r\n    {path: RoutePath.PRODUCT_CONTENT, component: ProductContent, exact: true}\r\n]","\r\nimport React, { FC } from 'react'\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\ninterface IChangeValue{\r\n    upValue:()=> void,\r\n    downValue:()=> void,\r\n    countValue: number\r\n}\r\n\r\nconst ChahgeValue:FC<IChangeValue> = (props) => {\r\n\r\n\r\n    const {countValue,upValue, downValue} = props\r\n\r\n\r\n    return (\r\n        <div className= 'ModalContent__PriceInfo__ChangeValue___item'>\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <Button onClick={() => upValue()} type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n                        </div>\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <span>{countValue}</span>\r\n                        </div>\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <Button onClick={() => downValue()} type=\"primary\" shape=\"circle\" icon={<MinusOutlined />} />\r\n                        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChahgeValue\r\n","import { CloseOutlined } from '@ant-design/icons'\r\nimport { FC} from 'react'\r\nimport { useActionCreators } from '../../hooks/useAC'\r\nimport { useChangeValue } from '../../hooks/useChangeValue'\r\nimport { IOrder } from '../../types/order'\r\nimport ChahgeValue from '../ChangeValue/ChahgeValue'\r\n\r\n\r\n\r\nconst Order: FC<IOrder> = (props) => {\r\nconst {deleteOrderThunk} = useActionCreators()\r\nconst { img,productName,price,inBasket, countValue, totalPrice, discount} = props\r\n\r\nconst {upValue, downValue} = useChangeValue({productName, countValue, totalPrice,discount, price} )\r\n\r\n    return (\r\n\r\n        <div className='Orders_item' >\r\n            <div className='Orders_item__img'>\r\n                <img src={img} alt=\"\" />\r\n            </div>\r\n            <div style={{textAlign:'center', marginRight:'25%', }}>\r\n            <div className='Orders_item__title' style={{fontSize: '24px', fontWeight:'bold' }}>\r\n                {productName}\r\n            </div>\r\n\r\n            <div className='Orders_item__Price' style={{fontSize: '18px'}}>\r\n               Цена ${price}\r\n            </div>\r\n            </div>\r\n            <ChahgeValue countValue={countValue} upValue ={upValue} downValue={downValue} />\r\n            <div className='Orders_item__TotalPrice' style={{fontSize:'50px', fontWeight:'bolder'}}>\r\n\r\n                ${totalPrice}\r\n            </div>\r\n\r\n            <div className='Orders_item__deleteBtn'>\r\n            <CloseOutlined onClick={()=> deleteOrderThunk({img,\r\n    productName,\r\n    price,\r\n    countValue,\r\n    totalPrice,\r\n    inBasket})} className='Delete_Btn' style={{fontSize:'40px', cursor:'pointer'}} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Order\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\"\r\n\r\nexport const UseTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import { Button } from 'antd'\r\nimport { FC} from 'react'\r\nimport Order from '../components/Basket/Order'\r\nimport { useActionCreators } from '../hooks/useAC'\r\nimport { UseTypedSelector } from '../hooks/useTypedSelector'\r\n\r\n\r\n\r\n\r\nconst Basket: FC = () => {\r\n    const { orders, totalPrice } = UseTypedSelector(state => state.Basket)\r\n    const { acceptOrders  } = useActionCreators()\r\n    const accept = () => {\r\n        acceptOrders()\r\n    }\r\n    const storage = localStorage.getItem('orders') || '[]';\r\n    const jsonOrders = JSON.parse(storage)\r\n\r\n    return (\r\n        <div className='Basket_content container'>\r\n            <div className='Orders_flex'>\r\n                {orders.length > 0 ?\r\n                    orders.map((order) => <Order key={order.productName}  {...order} />)\r\n                    :\r\n                    <div style={{width:'100%', height:'100%', textAlign:'center', paddingTop:'30%'}}><h1> У вас нету товаров в корзине:(</h1></div>\r\n                }\r\n                <div className='Order_item'>\r\n                <div className='Order_item__title'>\r\n                {jsonOrders.length > 0 ?\r\n                    <h1 style={{color:'goldenrod'}}>{'Сума к оплате: $'+ totalPrice}</h1> : null\r\n                }\r\n                </div>\r\n                <div>\r\n                {jsonOrders.length > 0 ?\r\n                    <Button size='large' style={{marginRight:'25px'}} onClick={() => accept()} danger>Оформить заказ</Button> : null\r\n                }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Basket\r\n\r\n","import { Modal } from 'antd';\r\nimport React, { FC, useState } from 'react'\r\nimport { IProduct } from '../../../types/product';\r\nimport { useActionCreators } from '../../../hooks/useAC';\r\nimport ChahgeValue from '../../ChangeValue/ChahgeValue';\r\nimport { useChangeValue } from '../../../hooks/useChangeValue';\r\n\r\n\r\ninterface IModal {\r\n    isModalVisible: boolean;\r\n    setIsModalVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n    product: IProduct;\r\n}\r\n\r\nconst ProductCardModal: FC<IModal> = (props) => {\r\n    const { img, price, productName, discount } = props.product\r\n    const { localStorageOrders, pushProduct } = useActionCreators()\r\n\r\n    const {countValueInHook, setCountValue, totalPriceInHook, setTotalPrice, upValue, downValue\r\n    } = useChangeValue({productName, discount, price} )\r\n\r\n    const handleOk = () => {\r\n        if (countValueInHook === 0) return; //warn\r\n        props.setIsModalVisible(false);\r\n        localStorageOrders({ img, productName, countValue:countValueInHook, totalPrice: totalPriceInHook, price, inBasket: true, discount});\r\n        pushProduct({ productName, img, price, totalPrice: totalPriceInHook, inBasket: true, discount })\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.setIsModalVisible(false);\r\n        setCountValue(1)\r\n        setTotalPrice(price)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal title=\"Заказ\" visible={props.isModalVisible} onOk={() => handleOk()} okText='Добавить в корзину' cancelText='Отмена' onCancel={handleCancel}>\r\n                <div className='ModalContent'>\r\n                    <div className=\"ModalContent__info\">\r\n                        <div>\r\n                            <img src={img} alt=\"\" />\r\n                        </div>\r\n                        <div>\r\n                            <span>{productName}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"ModalContent__PriceInfo\">\r\n                        <ChahgeValue countValue={countValueInHook} upValue ={upValue} downValue={downValue} />\r\n\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <h1 style={{ fontWeight: 'normal' }}>Сумма</h1>\r\n                            <h2 style={{ fontWeight: 'bold', color: 'chocolate' }}>${totalPriceInHook}</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductCardModal\r\n","import { Button, Card, Col, Row } from 'antd'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport style from './ProductCard.module.css'\r\n\r\nimport { FC, useEffect, useState } from 'react'\r\nimport { IProduct } from '../../types/product'\r\nimport ProductCardModal from './ProductCardModal/ProductCardModal'\r\nimport { IOrder } from '../../types/order'\r\n\r\nconst ProductCard: FC<IProduct> = (props) => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [btn, setBtn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n        const json = JSON.parse(orders) as IProduct[];\r\n        if (json.length > 0) {\r\n            json.map((j) => {\r\n            if (j.productName === props.productName) {\r\n                setBtn(true)}\r\n        })\r\n        }\r\n\r\n    })\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n\r\n    };\r\n    return (\r\n        <div className={style.item}>\r\n            <Card\r\n                hoverable\r\n                style={{ width: '300px', display: \"flex\", flexDirection: 'column', alignItems: 'center', flex: \"0 1 33.333%\" }}\r\n                cover={<div className={style.CardImg}><img alt=\"imgProduct\" src={props.img} /></div>}\r\n            >\r\n                <Meta title={props.productName} description={'$' + props.price} style={{ textAlign: 'center', marginBottom: '15px' }} />\r\n                {btn === true ?\r\n                    <Button disabled={true} type=\"dashed\" onClick={() => showModal()}> В корзине </Button>\r\n                    :\r\n                    <Button disabled={false} type=\"dashed\" danger onClick={() => showModal()}> Купить </Button>\r\n\r\n                }\r\n\r\n            </Card>\r\n\r\n            <ProductCardModal product={props} isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import { FC, useEffect } from 'react'\r\nimport ProductCard from '../components/ProductCard/ProductCard'\r\nimport { useActionCreators } from '../hooks/useAC'\r\nimport { UseTypedSelector } from '../hooks/useTypedSelector'\r\n\r\n\r\nconst ProductContent: FC = () => {\r\n\r\n  const { getProductsThunk } = useActionCreators()\r\n  const { products } = UseTypedSelector((state) => state.ProductContent)\r\n\r\n  useEffect(() => {\r\n    getProductsThunk()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container' >\r\n      <div className='ProductContent_items' style={{paddingTop:'20px'}} >\r\n        {products.map((product) => <ProductCard key={product.productName} {...product} /> )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductContent\r\n","\r\n\r\n\r\nimport React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { RoutePath, Routes } from '../../routing/routes'\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Switch>\r\n            {Routes.map((route)=><Route path={route.path} component={route.component} exact={route.exact}/>)}\r\n            <Redirect to={RoutePath.PRODUCT_CONTENT}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","\r\nimport { HomeOutlined, ShoppingOutlined } from '@ant-design/icons'\r\nimport { Layout, Menu, Row } from 'antd'\r\nimport React, { FC } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { RoutePath } from '../../routing/routes'\r\n\r\nconst Navbar: FC = () => {\r\n\r\n    const router = useHistory()\r\n\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify='space-between' className='container' align='middle'>\r\n\r\n                <Menu theme='dark' mode='horizontal' selectable={false}>\r\n                    <Menu.Item\r\n                        onClick={() => router.push(RoutePath.PRODUCT_CONTENT)}\r\n                        icon={<HomeOutlined style={{ fontSize: '2em', color: 'antiquewhite' }} />}\r\n                        key={1} >\r\n                    </Menu.Item>\r\n                </Menu>\r\n                <Menu theme='dark' mode='horizontal' selectable={false}>\r\n\r\n                    <Menu.Item\r\n                        onClick={() => router.push(RoutePath.BASKET)}\r\n                        icon={<ShoppingOutlined  className=\"Basket_icon\" style={{ fontSize: '2em', color: 'gold' }}  title='1'/>}\r\n                        key={1} >\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n\r\n\r\n            </Row>\r\n        </Layout.Header>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { useEffect } from 'react';\r\nimport './App.css';\r\nimport AppRouter from \"./components/AppRouter/AppRouter\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { useActionCreators } from './hooks/useAC';\r\nimport { IOrder } from './types/order';\r\n\r\nfunction App() {\r\n  const { setOrders, setTotalPriceAction } = useActionCreators()\r\n  useEffect(() => {\r\n    const orders = localStorage.getItem('orders') || '[]';\r\n    const json = JSON.parse(orders) as IOrder[]\r\n    if (json.length>0) {\r\n      setOrders(json);\r\n      setTotalPriceAction()\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <AppRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { BasketReducer } from \"./reducers/BasketReducer/BasketReducer\";\r\nimport ProductContentReducer from \"./reducers/ProductContentReducer/ProductContentReducer\";\r\n\r\nconst Reducers = combineReducers({\r\n    ProductContent: ProductContentReducer,\r\n    Basket: BasketReducer\r\n})\r\n\r\nconst store = createStore(Reducers, applyMiddleware(thunk))\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </HashRouter>\r\n,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}