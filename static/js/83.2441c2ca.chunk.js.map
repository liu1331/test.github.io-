{"version":3,"sources":["pages/ModalPages/pages/BetData/components/Games/PlinkoComponent/components/Baskets/style.module.scss","pages/ModalPages/pages/BetData/components/Games/PlinkoComponent/style.module.scss","pages/ModalPages/pages/BetData/components/Games/PlinkoComponent/components/Baskets/index.tsx","pages/ModalPages/pages/BetData/components/Games/PlinkoComponent/index.tsx","games/Plinko/shared/constants/bodies.ts","games/Plinko/shared/constants/canvas.ts","games/Plinko/shared/constants/game.ts"],"names":["module","exports","setBoxShadow","index","itemLength","step","i","value","boxShadow","Math","ceil","Baskets","multipliers","rollNumber","className","css","root","map","number","style","length","clsx","basket","win","PlinkoComponent","pins","risk_multiplier","roll_number","gameBlockRef","useRef","basketsRef","Plinko","useState","PlinkoEngine","setPlinkoEngine","initialized","setInitialized","setMultipliers","useFetch","fetchConfiguration","configurationData","data","useLocalStorage","colorScheme","handleUpdateSize","container","element","width","offsetWidth","height","offsetHeight","ration","CANVAS","HEIGHT","WIDTH","proportionalWidth","setAttribute","useEffect","multipliers_table","getRiskLevel","String","useLayoutEffect","current","init","baskets","fps","clearEnvironment","listner","window","addEventListener","removeEventListener","visible","setEnginRef","game","ref","basketsWrapper","PEG","DENSITY","FRICTION","RESTITUTION","COLOR","BALL","BASKET","RADIUS","FONT_COLOR","FONT_FAMILY","FONT_WEIGHT","FPS","GRAVITATION"],"mappings":"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","file":"static/js/83.2441c2ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1uyb3\",\"basket\":\"style_basket__37x2U\",\"win\":\"style_win__3r2j9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3swjk\",\"field\":\"style_field__2MmaG\",\"game\":\"style_game__1gjkM\",\"fps\":\"style_fps__2ZJBR\",\"visible\":\"style_visible__2jCfp\"};","import clsx from \"clsx\";\r\nimport React, { CSSProperties, FC } from \"react\";\r\n\r\nimport css from \"./style.module.scss\";\r\ninterface IProps {\r\n  multipliers: number[];\r\n  rollNumber: number;\r\n}\r\n\r\nconst setBoxShadow = (index: number, itemLength: number) => {\r\n  const i = index + 1;\r\n  let value = 50;\r\n  let boxShadow, step;\r\n\r\n  if (itemLength % 2 === 0) {\r\n    step = value / (itemLength / 2);\r\n    if (i === itemLength / 2 || i === itemLength / 2 + 1)\r\n      return { boxShadow: `inset 0 -7px 21px -14px #1ba3fe` };\r\n  } else {\r\n    step = value / ((itemLength - 1) / 2);\r\n    if (i == Math.ceil(itemLength / 2)) {\r\n      return { boxShadow: `inset 0 -7px 21px -14px #1ba3fe` };\r\n    }\r\n  }\r\n\r\n  value -= step * index;\r\n  return { boxShadow: `inset ${value}px -7px 21px -14px #1ba3fe` };\r\n};\r\nexport const Baskets: FC<IProps> = ({ multipliers, rollNumber }) => {\r\n  return (\r\n    <div className={css.root}>\r\n      {multipliers.map((number, i) => {\r\n        return (\r\n          <div\r\n            key={`basket-${i}-${number}`}\r\n            style={setBoxShadow(i, multipliers.length)}\r\n            className={clsx(css.basket, { [css.win]: rollNumber === i })}>\r\n            {number + \"x\"}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  CSSProperties,\r\n  FC,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport type PlinkoEngineType from \"games/Plinko\";\r\nimport { Game } from \"pages/Plinko/components\";\r\nimport { getRiskLevel } from \"pages/Plinko/components/Controller\";\r\nimport { useFetch, useLocalStorage } from \"hooks\";\r\nimport { Baskets } from \"./components/Baskets\";\r\nimport { CANVAS } from \"games/Plinko/shared/constants\";\r\nimport { ConfigurationData } from \"pages/Plinko/page\";\r\nimport { IPlinkoResult } from \"../types\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport interface IPlinkoComponentProps extends IPlinkoResult {}\r\n\r\nexport const PlinkoComponent: FC<IPlinkoComponentProps> = ({\r\n  pins,\r\n  risk_multiplier,\r\n  roll_number,\r\n}) => {\r\n  const gameBlockRef = useRef<HTMLDivElement | null>(null);\r\n  const basketsRef = useRef<HTMLDivElement | null>(null);\r\n  const Plinko = useRef<PlinkoEngineType>();\r\n  const [PlinkoEngine, setPlinkoEngine] = useState<PlinkoEngineType>();\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [multipliers, setMultipliers] = useState<number[]>([]);\r\n  const [fetchConfiguration, { data: configurationData }] =\r\n    useFetch<ConfigurationData>(\"plinko/get-configuration\");\r\n\r\n  const [colorScheme] = useLocalStorage(\"color-scheme\");\r\n\r\n  useEffect(() => {\r\n    if (configurationData && configurationData.multipliers_table) {\r\n      setMultipliers(\r\n        configurationData.multipliers_table[pins][\r\n          getRiskLevel(String(risk_multiplier))\r\n        ],\r\n      );\r\n    }\r\n  }, [configurationData]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!multipliers?.length || !PlinkoEngine) {\r\n      return;\r\n    }\r\n\r\n    if (gameBlockRef.current && !Plinko.current) {\r\n      Plinko.current = new (PlinkoEngine as any)({\r\n        container: gameBlockRef.current,\r\n      });\r\n    }\r\n\r\n    if (Plinko.current) {\r\n      Plinko.current.init(\r\n        multipliers,\r\n        () => {\r\n          setInitialized(true);\r\n        },\r\n        { baskets: true, fps: true },\r\n      );\r\n    }\r\n    handleUpdateSize(gameBlockRef.current, basketsRef.current);\r\n    return () => {\r\n      if (Plinko.current) {\r\n        Plinko.current.clearEnvironment();\r\n      }\r\n    };\r\n  }, [initialized, multipliers, PlinkoEngine, colorScheme]);\r\n\r\n  function handleUpdateSize(\r\n    container: HTMLDivElement | null,\r\n    element: HTMLDivElement | null,\r\n  ) {\r\n    if (!element || !container) return;\r\n    const width = container.offsetWidth;\r\n    const height = container.offsetHeight;\r\n    const ration = CANVAS.HEIGHT / CANVAS.WIDTH;\r\n\r\n    let proportionalWidth = width;\r\n\r\n    if (height / ration < width) {\r\n      proportionalWidth = height / ration;\r\n    }\r\n\r\n    if (!element) {\r\n      return;\r\n    }\r\n\r\n    element.setAttribute(\"style\", `width:${proportionalWidth}px;`);\r\n  }\r\n  useEffect(() => {\r\n    fetchConfiguration();\r\n    const listner = () => {\r\n      handleUpdateSize(gameBlockRef.current, basketsRef.current);\r\n    };\r\n    if (gameBlockRef.current && basketsRef.current) {\r\n      window.addEventListener(\"resize\", listner);\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"resize\", listner);\r\n    };\r\n  }, []);\r\n  useLayoutEffect(() => {\r\n    if (initialized) {\r\n    }\r\n  }, [initialized]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(css.root, { [css.visible]: initialized })}\r\n      style={{ [\"--basketCount\"]: multipliers.length } as CSSProperties}>\r\n      <Game setEnginRef={setPlinkoEngine} />\r\n      <div className={css.game} ref={gameBlockRef} />\r\n      <div className={css.basketsWrapper} ref={basketsRef}>\r\n        <Baskets multipliers={multipliers} rollNumber={roll_number} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const PEG = {\r\n  DENSITY: 1,\r\n  FRICTION: 1,\r\n  RESTITUTION: 1,\r\n  COLOR: 0xffffff,\r\n};\r\n\r\nexport const BALL = {\r\n  DENSITY: 1 / 100000,\r\n  FRICTION: 1,\r\n  RESTITUTION: 0.7,\r\n  COLOR: 0xff6f02,\r\n};\r\n\r\nexport const BASKET = {\r\n  RADIUS: 6,\r\n  COLOR: 0x92d612,\r\n  FONT_COLOR: 0x000000,\r\n  FONT_FAMILY: \"Gilroy\",\r\n  FONT_WEIGHT: \"bold\",\r\n};\r\n","export const ROW_ADJUSTMENT = 0.66;\r\n\r\n// the ratio of the height to the face of an equilateral triangle\r\n// sqrt(3) / 2\r\nexport const EQUILATERAL_TRIANGLE_RATIO = 0.866;\r\n\r\nexport const CANVAS = {\r\n  WIDTH: 760,\r\n  HEIGHT: 620,\r\n};\r\n","export const FPS = 60;\r\nexport const MS_IN_SECOND = 1000;\r\nexport const TIMESTEP = MS_IN_SECOND / FPS;\r\n\r\nexport const GRAVITATION = 0.9; // default: 1\r\n\r\nexport const GENERATION_TIMEOUT = 2100000; // time in ms\r\nexport const TABLE_SIZES = [8, 9, 10, 11, 12, 13, 14, 15, 16];\r\n"],"sourceRoot":""}