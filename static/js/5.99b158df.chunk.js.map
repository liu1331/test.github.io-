{"version":3,"sources":["pages/Blackjack/GameScene/components/Game/style.module.scss","pages/Blackjack/GameScene/components/Card/style.module.scss","pages/Blackjack/GameScene/components/Card/Back/style.module.scss","pages/Blackjack/GameScene/components/Card/Front/style.module.scss","pages/Blackjack/GameScene/components/Game/components/UserHand/style.module.scss","pages/Blackjack/GameScene/components/Game/components/DealerHand/style.module.scss","pages/Blackjack/GameScene/components/SplashScreen/style.module.scss","pages/Blackjack/GameScene/components/InsuranceLayout/style.module.scss","pages/Blackjack/Controller/components/Reducer/context.ts","pages/Blackjack/Controller/components/Reducer/provider.tsx","pages/Blackjack/Controller/components/Reducer/index.ts","pages/Blackjack/GameScene/components/Card/Back/card-back.svg","pages/Blackjack/GameScene/components/Card/Back/pasino-logo.svg","pages/Blackjack/GameScene/components/Card/Back/index.tsx","pages/Blackjack/GameScene/components/Card/Front/index.tsx","pages/Blackjack/GameScene/components/Card/keyframes.ts","pages/Blackjack/GameScene/components/Card/index.tsx","pages/Blackjack/Controller/components/Reducer/reducer.ts","pages/Blackjack/Controller/components/Reducer/types.ts","pages/Blackjack/Controller/components/Reducer/actionTypes.ts","assets/blackjack/deck.png","pages/Blackjack/GameScene/components/Game/index.tsx","assets/blackjack/splash-hidden.png","pages/Blackjack/GameScene/components/SplashScreen/index.tsx","pages/Blackjack/GameScene/components/InsuranceLayout/index.tsx","pages/Blackjack/GameScene/components/Game/components/UserHand/index.tsx","pages/Blackjack/GameScene/components/Game/components/DealerHand/index.tsx"],"names":["module","exports","defaultValue","controlState","initialBlackjackControlState","controlDispatch","Context","createContext","BlackjackControlProvider","children","useReducer","blackjackControlReducer","Provider","value","useBlackjackControl","useContext","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","SvgCardBack","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","ForwardRef","fillRule","clipRule","SvgPasinoLogo","CardBack","className","css","root","CardFront","cardIndex","variant","card","deck","getCard","SuitIcon","suitIcons","suit","clsx","active","win","loss","draw","cardValueSuitContainer","cardValue","suitSmall","suitBig","suitContainerRight","cardValueRight","getOpenAnimationKeyframe","openAnimationName","xPosition","yPosition","isMobile","scaleTransform","getCloseAnimationKeyframe","closeAnimationName","initAminPos","Y","X","Card","deckPos","animation","index","isDealerHand","isMobileScreen","paddingTopMultiplier","classes","useRef","useState","animPos","setAnimPos","useEffect","current","offsetTop","offsetLeft","moveInlineStyle","animationName","animationDuration","style","paddingTop","cardWrapper","rotate","open","cardFront","status","player_hand","player2_hand","dealer_hand","player_score","player2_score","dealer_score","hand1_status","hand2_status","insurance","split","bet_amt","actualBet","current_hand","actions","gamePhase","GamePhases","NOT_START","liveData","coinsConfig","seed","state","action","type","bet_amount","actual_bet","phase","data","omit","prepareDealerCards","prepareUserCards","active_user_bet","HOLD","config","END_GAME","prevCards","newCards","isRestoreSession","newCardsIndexes","map","item","parseInt","nextCards","push","anim","GAME_START","GAME_HIT","GAME_SPLIT","GAME_STAND","GAME_DOUBLE","SET_GAME_PHASE","SET_COINS_CONFIG","SET_BET_AMOUNT","SET_ACTUAL_BET","SET_LIVE_STATS","SET_GAME_SESSION","INSURANCE_ACCEPT","INSURANCE_REJECT","defaultRootSize","mobileScreen","initDeckPos","Game","deckRef","windowSize","useWindowSize","setDeckPos","setIsMobileScreen","scaleSize","setScaleSize","setRoot","cardsInHand","playEffect","useSoundSystemControl","controlFunctions","getSoundEffectNames","gamePathNames","BLACKJACK","cardFlip","cardsFlip","setScreenType","window","innerWidth","useEventListener","effectNameNeeded","t","setTimeout","clearTimeout","useResizeObserver","scale","offsetHeight","wrapper","transform","undefined","cards","hand","score","userBox","SplashScreen","cardsTop","number","src","splashCards","draggable","cardsBottom","green","InsuranceLayout","labelsWrapper","ribbonWrapper","UserHand","cardClasses","handInlineCss","Number","lose","DealerHand"],"mappings":"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","file":"static/js/5.99b158df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultRootSize\":\"600px\",\"mobileScreen\":\"600px\",\"root\":\"style_root__SNqfW\",\"userBox\":\"style_userBox__19rxL\",\"wrapper\":\"style_wrapper__1o1kY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"style_cardWrapper__1FpWv\",\"open\":\"style_open__Q4hbu\",\"openCardDesktop\":\"style_openCardDesktop__sUmMa\",\"openCardMobile\":\"style_openCardMobile__TXpdE\",\"hide\":\"style_hide__2z2r7\",\"move\":\"style_move__kNlzP\",\"translate\":\"style_translate__3mA6U\",\"translateHidden\":\"style_translateHidden__2feyn\",\"rotate\":\"style_rotate__QVLFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__isTma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__3FHfU\",\"cardValueSuitContainer\":\"style_cardValueSuitContainer__2_0KE\",\"active\":\"style_active__1FyfS\",\"win\":\"style_win__3-NU0\",\"loss\":\"style_loss__1zfd-\",\"draw\":\"style_draw__2K6Vz\",\"suitContainerRight\":\"style_suitContainerRight__1Sjlk\",\"cardValue\":\"style_cardValue__121vb\",\"cardValueRight\":\"style_cardValueRight__YIuIj\",\"suitSmall\":\"style_suitSmall__25WJF\",\"suitBig\":\"style_suitBig__16cFB\",\"diamond\":\"style_diamond__3QyAb\",\"trefle\":\"style_trefle__1XHuk\",\"heart\":\"style_heart__3ZOXJ\",\"pique\":\"style_pique__37J9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__3owlr\",\"hand\":\"style_hand__2uysv\",\"score\":\"style_score__KOoFR\",\"active\":\"style_active__24Ei2\",\"win\":\"style_win__3EtOG\",\"lose\":\"style_lose__3T37w\",\"draw\":\"style_draw__1dG2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__3ux4q\",\"hand\":\"style_hand__Xw5MG\",\"score\":\"style_score__1z_jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultRootSize\":\"600px\",\"mobileScreen\":\"600px\",\"wrapper\":\"style_wrapper__LjjgE\",\"root\":\"style_root__1smml\",\"cardsTop\":\"style_cardsTop__2D4EF\",\"cardsBottom\":\"style_cardsBottom__3Tg87\",\"number\":\"style_number__1BNX8\",\"green\":\"style_green__1WIGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelsWrapper\":\"style_labelsWrapper__188md\",\"ribbonWrapper\":\"style_ribbonWrapper__1UaO4\"};","import { Dispatch, createContext } from \"react\";\r\nimport { initialBlackjackControlState } from \"./reducer\";\r\nimport { BlackjackControlActions, BlackjackControlState } from \"./types\";\r\n\r\ntype BlackjackControlContext = {\r\n  controlState: BlackjackControlState;\r\n  controlDispatch: Dispatch<BlackjackControlActions>;\r\n};\r\n\r\nexport const defaultValue: BlackjackControlContext = {\r\n  controlState: initialBlackjackControlState,\r\n  controlDispatch: () => {},\r\n};\r\n\r\nconst Context = createContext<BlackjackControlContext>(defaultValue);\r\n\r\nexport default Context;\r\n","import React, { FC, useReducer } from \"react\";\r\n\r\nimport Context from \"./context\";\r\nimport {\r\n  initialBlackjackControlState,\r\n  blackjackControlReducer,\r\n} from \"./reducer\";\r\n\r\nconst BlackjackControlProvider: FC = ({ children }) => {\r\n  const [controlState, controlDispatch] = useReducer(\r\n    blackjackControlReducer,\r\n    initialBlackjackControlState,\r\n  );\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        controlState,\r\n        controlDispatch,\r\n      }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default BlackjackControlProvider;\r\n","import { useContext } from \"react\";\r\n\r\nimport Context from \"./context\";\r\n\r\nexport { default as BlackjackControlProvider } from \"./provider\";\r\nexport * from \"./types\";\r\nexport * as actions from \"./actionTypes\";\r\n\r\nexport const useBlackjackControl = () => useContext(Context);\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M104.143 13.11V72.6089H102.953V14.1185H93.0351V5.63061H16.9629V14.1185H7.04473L7.04473 72.6089H5.85455L5.85455 13.11H15.7727V4.62215H94.2253V13.11H104.143Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M104.143 85.6348V145.89H94.2252V154.378H15.7726V145.89H5.85449L5.85449 85.6348H7.04467L7.04467 144.882H16.9628V153.369H93.035V144.882H102.953V85.6348H104.143Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.4133 140.175V150.512H10.3132V140.175H22.4133ZM20.2314 148.663V142.024H12.4952V148.663H20.2314Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M99.6756 140.175V150.512H87.5754V140.175H99.6756ZM97.4936 148.663V142.024H89.7574V148.663H97.4936Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.4948 148.663V159H0.394653L0.394653 148.663H12.4948ZM10.3128 157.151V150.512H2.57665L2.57665 157.151H10.3128Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.6952 79.2479L6.34762 84.7103L0 79.2479L6.34762 73.7854L12.6952 79.2479ZM6.34762 82.0211L9.62061 79.2479L6.34762 76.4746L3.07463 79.2479L6.34762 82.0211Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.4947 -3.05176e-05V10.3367H0.394531L0.394531 -3.05176e-05H12.4947ZM10.3127 8.48782V1.84881H2.57652L2.57652 8.48782H10.3127Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M109.497 148.663V159H97.4965V148.663H109.497ZM107.315 157.151V150.512H99.5793V157.151H107.315Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M109.99 79.2479L103.642 84.7103L97.2943 79.2479L103.642 73.7854L109.99 79.2479ZM103.642 82.0211L106.915 79.2479L103.642 76.4746L100.369 79.2479L103.642 82.0211Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M109.498 -2.95639e-05V10.3367H97.4965V-2.95639e-05H109.498ZM107.316 8.48782V1.84881H99.5793V8.48782H107.316Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M109.494 16.9757V70.0037L103.444 75.2141L97.3941 70.0037V18.8245H87.4759V10.3367H22.4128V18.8245H12.4947L12.4947 70.0037L6.4446 75.2141L0.394531 70.0037L0.394531 16.9757H10.3127V8.48782H20.2308V-1.52588e-05H89.8563V8.48782H99.7744V16.9757H109.494ZM107.312 69.1633V18.7405H99.5761V69.1633L103.444 72.4408L107.312 69.1633ZM97.4932 16.9757V10.3367H89.7571V16.9757H97.4932ZM87.5751 8.48782V1.84882H22.4128V8.48782H87.5751ZM20.2308 16.9757V10.3367H12.4947V16.9757H20.2308ZM10.3127 69.1633L10.3127 18.7405H2.57652L2.57652 69.1633L6.4446 72.4408L10.3127 69.1633Z\",\n  fill: \"#66518D\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M109.494 88.9963V142.024H99.5762V150.512H89.658V159H20.231V150.512H10.3128L10.3128 142.024H0.394653L0.394653 88.9963L6.44473 83.7859L12.4948 88.9963L12.4948 140.175H22.413V148.663H87.6744V140.175H97.5925V88.9963L103.643 83.7859L109.494 88.9963ZM107.312 140.175V89.7526L103.444 86.4752L99.5762 89.7526V140.175H107.312ZM97.4934 148.663V142.024H89.7572V148.663H97.4934ZM87.5752 157.151V150.512H22.413V157.151H87.5752ZM20.231 148.663V142.024H12.4948L12.4948 148.663H20.231ZM10.3128 140.175L10.3128 89.7526L6.44473 86.4752L2.57665 89.7526L2.57665 140.175H10.3128Z\",\n  fill: \"#66518D\"\n});\n\nfunction SvgCardBack(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 110,\n    height: 159,\n    viewBox: \"0 0 110 159\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCardBack);\nexport default __webpack_public_path__ + \"static/media/card-back.80b9f447.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M39.4727 3.03715C39.1838 3.03169 38.9687 2.9555 38.8273 2.80856C38.6852 2.6467 38.6107 2.45975 38.6036 2.24791C38.5885 1.7938 38.7551 1.31915 39.1033 0.822831C39.4521 0.341831 39.9586 0.0674101 40.6249 6.27919e-05C40.944 0.00484721 41.1978 0.102608 41.3863 0.292967C41.5753 0.499023 41.6734 0.715444 41.681 0.942218C41.6815 1.41199 41.4912 1.86531 41.1111 2.30158C40.7156 2.73895 40.169 2.9841 39.4727 3.03715ZM38.581 12.1692C38.3611 12.3961 38.1379 12.619 37.9114 12.8378C36.823 13.904 35.8021 14.483 34.8485 14.5748C34.4236 14.5886 34.0925 14.4483 33.855 14.153C33.6181 13.8732 33.4911 13.4832 33.4746 12.9838C33.4909 12.6805 33.5266 12.3706 33.5816 12.0542C33.1996 12.469 32.8117 12.8542 32.4179 13.2099C31.2796 14.2381 30.2125 14.805 29.2165 14.9108L29.1484 14.916C27.9463 14.916 27.0196 14.4397 26.3683 13.4867C26.1624 13.1926 25.985 12.9007 25.8361 12.6111C25.5904 12.9346 25.338 13.2521 25.0788 13.5637C24.0977 14.7434 23.1608 15.4273 22.2679 15.6152C21.8922 15.6687 21.5799 15.5756 21.3313 15.3357C21.0822 15.096 20.9237 14.7365 20.8551 14.2566C20.8122 13.957 20.8038 13.6295 20.8297 13.274C20.8555 12.9186 20.9017 12.5451 20.9684 12.1533C20.4552 13.1746 19.8658 14.0917 19.2003 14.9051C18.5517 15.7314 17.8541 16.2131 17.1072 16.3499C16.5193 16.4185 16.0749 16.3134 15.7748 16.0352C15.4574 15.744 15.2599 15.3285 15.1829 14.7889C15.0266 13.1597 15.5293 11.3143 16.691 9.25261C17.8526 7.19128 19.3607 5.94437 21.2154 5.51187C21.7584 5.45011 22.1617 5.5377 22.4255 5.7754C22.6895 6.0131 22.8544 6.31087 22.921 6.66831C23.1549 6.26799 23.362 5.94814 23.5424 5.70818C23.7229 5.46859 23.8729 5.3399 23.9934 5.32281C24.3281 5.30601 24.6738 5.41721 25.0299 5.65698C25.386 5.89695 25.5856 6.11341 25.6284 6.30581C25.6414 6.39568 25.6208 6.4676 25.5672 6.52097C24.9404 7.60456 24.3937 8.76771 23.9277 10.0116C23.4637 11.2703 23.2561 12.1794 23.3053 12.738C23.3203 12.8429 23.3536 12.9145 23.4052 12.953C23.4436 13.009 23.5004 13.0313 23.5759 13.0207C23.8587 12.9652 24.3097 12.58 24.928 11.8646C25.0698 11.7013 25.2146 11.5265 25.3624 11.3405C25.3133 11.1257 25.2807 10.9121 25.2644 10.6999C25.2594 10.442 25.3468 10.1924 25.5264 9.95095C25.6917 9.72571 25.8493 9.59999 25.9994 9.5734C26.0891 9.55154 26.1389 9.60816 26.1494 9.74399C26.1827 9.87588 26.2177 10.0055 26.2542 10.1329C26.467 9.82589 26.6852 9.49869 26.9088 9.15135C26.9353 9.11621 26.9702 9.09053 27.0137 9.07437C27.3795 8.57804 27.8528 7.91583 28.4332 7.08753C29.1047 6.12521 29.6349 5.30301 30.0239 4.62037C30.089 4.47871 30.149 4.36791 30.2037 4.28761C30.2581 4.20768 30.3223 4.14978 30.3958 4.11371C30.4843 4.07656 30.5738 4.05453 30.6646 4.0476C31.0755 4.04705 31.4972 4.1895 31.9301 4.47572C32.3628 4.76175 32.6053 5.04734 32.6575 5.33175C32.6656 5.43754 32.6273 5.53168 32.5424 5.61379C32.0778 6.69719 31.8758 7.8365 31.9374 9.03166C31.9836 10.2281 31.9518 11.2026 31.8421 11.955C32.3311 11.5841 32.8432 11.1197 33.3788 10.5625C33.7611 10.1416 34.1378 9.69667 34.5086 9.22714C34.7367 8.73737 35.0022 8.23504 35.3051 7.72013C36.4401 5.774 37.2632 4.70928 37.7735 4.52561C38.1079 4.54539 38.432 4.69355 38.7449 4.97087C39.0729 5.24804 39.2479 5.48472 39.2696 5.68072C39.2725 5.77152 39.2442 5.84068 39.1853 5.88799C38.4442 6.8974 37.7816 7.9946 37.1985 9.18011C36.6003 10.3815 36.2955 11.2628 36.2838 11.8234C36.2908 12.0356 36.37 12.1387 36.5219 12.1336C36.8092 12.1092 37.2918 11.7754 37.9692 11.1316C38.4865 10.6523 39.0489 10.0562 39.656 9.34398C39.9148 8.84062 40.2163 8.30753 40.5604 7.7447C41.7569 5.80316 42.6307 4.73232 43.1815 4.53259C43.5144 4.57072 43.8222 4.72166 44.1047 4.9856C44.3717 5.2641 44.5099 5.52526 44.52 5.76737C44.5179 5.85817 44.4859 5.92576 44.4245 5.96974C43.9412 6.53461 43.4244 7.25727 42.8737 8.13833C42.3232 9.00441 41.8246 9.90942 41.3791 10.8535C42.517 9.48602 43.7842 8.12884 45.1801 6.78218C46.5603 5.45045 47.5624 4.73867 48.187 4.64682C48.7928 4.69124 49.2662 4.89878 49.6074 5.27018C49.948 5.62644 50.1152 5.97108 50.1076 6.30396C50.106 6.37997 50.0892 6.4476 50.0577 6.50722C50.041 6.56746 50.002 6.61219 49.9408 6.64101C49.1759 7.59311 48.5472 8.57099 48.0545 9.57449C47.5463 10.5778 47.2788 11.3443 47.252 11.8737C47.2473 12.086 47.3207 12.1933 47.4727 12.1968C47.685 12.1866 48.1245 11.8788 48.7906 11.2725C49.1433 10.9595 49.5273 10.5918 49.9423 10.1694C50.3821 9.22146 51.0342 8.33871 51.8986 7.52123C53.3217 6.17809 54.6036 5.5202 55.745 5.54813L55.768 5.55054C55.9777 5.43548 56.2151 5.35372 56.4799 5.30508C56.7445 5.25665 57.0272 5.2481 57.3296 5.27957C58.0507 5.3856 58.5577 5.71251 58.8515 6.26045C59.1295 6.80704 59.2364 7.38916 59.1715 8.00623C59.1194 8.50301 58.9735 9.02105 58.7336 9.55885C58.4923 10.1124 58.1758 10.6576 57.7838 11.195C58.1338 11.2012 58.5248 11.1125 58.9561 10.9292C59.3874 10.746 59.8453 10.4512 60.3305 10.0452C60.5212 9.97376 60.6906 10.0296 60.8395 10.2126C60.9877 10.3956 61.0343 10.6059 60.979 10.8435C60.1589 11.5341 59.406 12.019 58.7207 12.2975C58.0521 12.5626 57.4535 12.6674 56.9253 12.6124C56.835 12.6029 56.7374 12.5852 56.6334 12.559C55.8991 13.3043 55.0958 13.9053 54.224 14.3624C53.3386 14.8031 52.4572 14.985 51.5803 14.9086C50.8107 14.8281 50.2304 14.5392 49.8407 14.0419C49.4974 13.6047 49.3333 13.0334 49.3489 12.3276C49.1218 12.5474 48.8927 12.7628 48.6618 12.9738C47.5618 13.9787 46.5637 14.5013 45.6675 14.5414C45.2579 14.5321 44.9352 14.3735 44.6992 14.0649C44.4631 13.7719 44.3504 13.3752 44.3616 12.8757C44.4442 11.8777 44.8418 10.728 45.5537 9.42639C46.2655 8.12495 46.9568 7.06516 47.6279 6.24737C46.4074 7.20441 45.0122 8.52814 43.442 10.2189C41.8715 11.8951 40.8502 13.1362 40.377 13.9434C40.313 14.0935 40.2265 14.2126 40.1184 14.3012C39.9952 14.3743 39.8579 14.4087 39.7065 14.4053C39.4029 14.3983 39.1335 14.2409 38.8974 13.9326C38.6463 13.624 38.52 13.1592 38.5189 12.5379C38.5348 12.4184 38.5555 12.2955 38.581 12.1692ZM7.56359 2.57525C9.64158 2.06799 11.3265 2.14408 12.6185 2.80255C13.8915 3.4507 14.7026 4.42582 15.0522 5.72772C15.4245 7.52566 15.0783 9.27987 14.0143 10.9901C12.9459 12.6861 11.6449 13.7779 10.1114 14.2654C9.55047 14.3996 9.05928 14.413 8.63802 14.3057C8.21283 14.1839 7.84702 13.9916 7.54093 13.728C7.19474 15.2474 6.7427 16.6065 6.185 17.8055C5.61284 19.0087 4.84134 19.7631 3.87145 20.0688C3.09754 20.2281 2.44401 20.1044 1.91106 19.6982C1.37791 19.2917 1.04663 18.8469 0.917066 18.3642C0.866148 18.1743 0.861326 18.0108 0.903365 17.8739C0.945038 17.7374 1.03928 17.6495 1.1861 17.6103C1.33629 17.586 1.46181 17.6154 1.56284 17.6981C1.67834 17.777 1.86232 17.7908 2.11552 17.7386C3.46045 16.9567 4.58237 14.9641 5.48187 11.7611C6.39978 8.56896 7.47987 6.59545 8.72234 5.8407C9.078 5.76155 9.39717 5.80981 9.67984 5.9851C9.95839 6.14595 10.1306 6.31957 10.1963 6.50577C10.216 6.57915 10.2151 6.63411 10.1936 6.67122C10.1614 6.72669 10.0994 6.75895 10.0077 6.76781C9.49178 6.95231 9.07703 7.57258 8.76361 8.62803C8.43929 9.70243 8.13085 10.9528 7.83848 12.379C8.02299 12.4237 8.26959 12.405 8.57714 12.323C9.93507 11.8824 11.0417 10.9447 11.8973 9.5089C12.7525 8.07371 13.054 6.73909 12.8017 5.50486C12.6173 4.81759 12.1934 4.35018 11.5306 4.10392C10.8676 3.85747 9.95512 3.88142 8.79373 4.17536C6.73236 4.80402 5.14815 5.80639 4.04168 7.18341C2.93484 8.56024 2.49337 9.7834 2.71763 10.8523C2.77842 10.9618 2.77465 11.0645 2.70633 11.161C2.63409 11.2433 2.51731 11.3057 2.35602 11.3487C1.98962 11.4462 1.56192 11.4038 1.07327 11.2205C0.595164 11.0188 0.25691 10.6073 0.058877 9.98588C-0.207708 8.58357 0.431014 7.1587 1.97451 5.71222C3.51427 4.25148 5.37703 3.20558 7.56359 2.57525ZM18.1387 14.0464C18.4971 13.9803 19.0038 13.4494 19.6588 12.4536C20.3155 11.4734 21.0996 10.1458 22.0101 8.47146L22.3644 7.73266C22.3747 7.70087 22.3774 7.66215 22.3708 7.6173L22.3626 7.55974L22.3548 7.5048C22.3052 7.26734 22.2097 7.08205 22.0684 6.9491C21.9118 6.81858 21.758 6.76372 21.6078 6.78504C20.7018 7.09763 19.8343 8.10807 19.0059 9.81651C18.1616 11.5276 17.7569 12.824 17.7908 13.7059C17.8274 13.961 17.9432 14.0742 18.1387 14.0464ZM26.7031 11.4036C27.0131 10.9465 27.3108 10.4785 27.5962 9.99964L27.607 9.99802C27.9511 9.53154 28.3031 9.0644 28.6633 8.59661C29.0391 8.14285 29.3726 7.73034 29.6635 7.3587C29.6596 8.69572 29.6038 9.95291 29.497 11.1304C29.373 12.2943 28.9889 12.9387 28.3443 13.0632C27.8264 13.0571 27.382 12.7186 27.0111 12.048C26.9019 11.8423 26.7992 11.6275 26.7031 11.4036ZM56.3306 10.6548C56.6845 10.1895 56.9697 9.72481 57.1867 9.2599C57.4183 8.79713 57.5546 8.36987 57.5958 7.97812C57.6354 7.60195 57.5693 7.28287 57.3986 7.02122C57.2107 6.77324 56.8916 6.61826 56.4403 6.55577C56.2659 6.61392 56.0897 6.69429 55.9113 6.79747C55.7324 6.90066 55.5513 7.02628 55.368 7.17451C55.3282 7.26169 55.2951 7.35734 55.2693 7.46107C55.2429 7.56502 55.2239 7.67722 55.211 7.79755C55.1603 8.27978 55.2371 8.78218 55.4417 9.3059C55.6295 9.84326 55.9258 10.2929 56.3306 10.6548ZM52.7895 13.0016C53.1666 13.041 53.5737 12.9465 54.0096 12.7181C54.4441 12.5047 54.8645 12.2061 55.271 11.8221C54.8442 11.3817 54.5332 10.8545 54.3384 10.2403C54.1447 9.61135 54.0814 8.98046 54.1479 8.34789L54.1573 8.25761C53.6228 8.84114 53.1611 9.46285 52.7713 10.1224C52.3981 10.7685 52.1739 11.377 52.099 11.9474C52.0643 12.2788 52.1068 12.527 52.227 12.6915C52.3303 12.8701 52.5178 12.9732 52.7895 13.0016ZM13.1616 20.8405C12.8854 20.9098 13.3324 21.1787 13.616 21.1527C15.8431 20.9486 25.9737 20.0403 32.2381 19.8219C38.0793 19.6183 46.9662 20.1533 49.8788 20.3454C50.1398 20.3626 50.2494 20.02 50.0312 19.8755C49.8503 19.7558 49.8927 19.4791 50.1011 19.4193L50.2202 19.3851C50.5455 19.2917 50.5108 18.8422 50.1738 18.8111C47.3988 18.5551 40.9404 18.1043 32.1887 18.4094C24.6959 18.6705 18.07 19.6078 13.1616 20.8405Z\",\n  fill: \"white\"\n});\n\nfunction SvgPasinoLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 62,\n    height: 22,\n    viewBox: \"0 0 62 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPasinoLogo);\nexport default __webpack_public_path__ + \"static/media/pasino-logo.0f9e2296.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport { ReactComponent as CardBackSvg } from \"./card-back.svg\";\r\nimport { ReactComponent as PasinoLogoSvg } from \"./pasino-logo.svg\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const CardBack = ({ className }: { className?: string }) => {\r\n  return (\r\n    <div className={`${css.root} ${className ? className : null}`}>\r\n      <CardBackSvg />\r\n      <PasinoLogoSvg />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport css from \"./style.module.scss\";\r\nimport { CardIndex, deck, suitIcons } from \"games/VideoPoker\";\r\n\r\nexport interface Props {\r\n  cardIndex: CardIndex;\r\n  variant?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const CardFront: FC<Props> = ({ cardIndex, variant, className }) => {\r\n  const card = deck.getCard(cardIndex);\r\n  const SuitIcon = suitIcons[card.suit];\r\n\r\n  return (\r\n    <div\r\n      className={clsx(css.card, className, {\r\n        [css.active]: variant === \"in_progress\",\r\n        [css.win]: variant === \"win\",\r\n        [css.loss]: variant === \"loss\",\r\n        [css.draw]: variant === \"draw\",\r\n      })}>\r\n      <div className={css.cardValueSuitContainer}>\r\n        <span className={clsx(css.cardValue, css[card.suit])}>\r\n          {card.cardValue}\r\n        </span>\r\n        <SuitIcon className={clsx(css.suitSmall, css[card.suit])} />\r\n      </div>\r\n      <div className={css.suitBig}>\r\n        <SuitIcon className={css[card.suit]} />\r\n      </div>\r\n      <div className={clsx(css.cardValueSuitContainer, css.suitContainerRight)}>\r\n        <span\r\n          className={clsx(css.cardValue, css[card.suit], css.cardValueRight)}>\r\n          {card.cardValue}\r\n        </span>\r\n        <SuitIcon className={clsx(css.suitSmall, css[card.suit])} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const getOpenAnimationKeyframe = (\r\n  openAnimationName: string,\r\n  xPosition: number,\r\n  yPosition: number,\r\n  isMobile = false,\r\n) => {\r\n  const scaleTransform = isMobile ? \" scale(0.8);\" : \";\";\r\n  return `\r\n@keyframes ${openAnimationName} {\r\n    from {\r\n      transform: rotateY(180deg) translate(${xPosition}px, ${yPosition}px)${scaleTransform}\r\n    }\r\n    50% {\r\n      transform: rotateY(180deg) translate(0px, 0px)${scaleTransform}\r\n    }\r\n    to {\r\n      transform: rotateY(0deg) translate(0px, 0px)${scaleTransform}\r\n    }\r\n  }\r\n`;\r\n};\r\n\r\nexport const getCloseAnimationKeyframe = (\r\n  closeAnimationName: string,\r\n  xPosition: number,\r\n  yPosition: number,\r\n  isMobile = false,\r\n) => {\r\n  const scaleTransform = isMobile ? \" scale(0.8);\" : \";\";\r\n  return `\r\n  @keyframes ${closeAnimationName} {\r\n      from {\r\n        transform: rotateY(180deg) translate(${xPosition}px, ${yPosition}px)${scaleTransform}\r\n      }\r\n      to {\r\n        transform: rotateY(180deg) translate(${\r\n          isMobile ? \"-80px\" : \"-40px\"\r\n        }, 0px)${scaleTransform}\r\n      }\r\n    }\r\n  `;\r\n};\r\n","import React, { FC, useState, useRef, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport css from \"./style.module.scss\";\r\nimport { CardBack } from \"./Back\";\r\nimport { CardFront, Props as CardFrontProps } from \"./Front\";\r\nimport { DeckPos } from \"../..\";\r\nimport { CardVariant } from \"pages/Blackjack/Controller/components/Reducer\";\r\nimport {\r\n  getCloseAnimationKeyframe,\r\n  getOpenAnimationKeyframe,\r\n} from \"./keyframes\";\r\nimport { useWindowSize } from \"providers\";\r\n\r\ninterface Props extends CardFrontProps {\r\n  deckPos: DeckPos;\r\n  animation: CardVariant;\r\n  index: number;\r\n  variant?: string;\r\n  isDealerHand?: boolean;\r\n  isMobileScreen: boolean;\r\n  paddingTopMultiplier?: number;\r\n  classes?: {\r\n    root?: string;\r\n    cardFront?: string;\r\n  };\r\n}\r\n\r\nexport interface AnimPos {\r\n  Y: number;\r\n  X: number;\r\n  i: number;\r\n}\r\n\r\nconst initAminPos: AnimPos = {\r\n  Y: 0,\r\n  X: 0,\r\n  i: 0,\r\n};\r\n\r\nexport const Card: FC<Props> = ({\r\n  cardIndex,\r\n  deckPos,\r\n  animation,\r\n  index,\r\n  variant,\r\n  isDealerHand,\r\n  isMobileScreen,\r\n  paddingTopMultiplier = 1,\r\n  classes,\r\n}) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [animPos, setAnimPos] = useState<AnimPos>(initAminPos);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      const yPosition = 0;\r\n      setAnimPos({\r\n        Y: ref.current.offsetTop > deckPos.Y ? -yPosition : yPosition,\r\n        X: deckPos.X - ref.current.offsetLeft,\r\n        i: index,\r\n      });\r\n    }\r\n  }, [ref.current, animation]);\r\n\r\n  const openAnimationName = `openAnimation_${isDealerHand ? \"dealer\" : \"\"}_${\r\n    animPos.i\r\n  }`;\r\n  const closeAnimationName = `closeAnimation_${isDealerHand ? \"dealer\" : \"\"}_${\r\n    animPos.i\r\n  }`;\r\n  const moveInlineStyle =\r\n    animation === \"move-open\"\r\n      ? {\r\n          animationName: openAnimationName,\r\n          animationDuration: \"1s\",\r\n        }\r\n      : animation === \"move-hide\"\r\n      ? {\r\n          animationName: closeAnimationName,\r\n          animationDuration: \"1s\",\r\n        }\r\n      : {};\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{\r\n        paddingTop: `${animPos.i * 10 * paddingTopMultiplier}px`,\r\n        ...moveInlineStyle,\r\n      }}\r\n      className={clsx(\r\n        css.cardWrapper,\r\n        classes?.root,\r\n        { [css.rotate]: animation === \"move-hide\" || animation === \"hide\" },\r\n        { [css.open]: animation === \"open\" },\r\n      )}>\r\n      <CardFront\r\n        cardIndex={cardIndex}\r\n        variant={variant}\r\n        className={classes?.cardFront}\r\n      />\r\n      {/* <CardBack className={className} /> */}\r\n      <CardBack />\r\n      <style>\r\n        {`\r\n${getOpenAnimationKeyframe(\r\n  openAnimationName,\r\n  -animPos.X,\r\n  animPos.Y,\r\n  isMobileScreen,\r\n)}\r\n${getCloseAnimationKeyframe(\r\n  closeAnimationName,\r\n  -animPos.X,\r\n  animPos.Y,\r\n  isMobileScreen,\r\n)}\r\n`}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { omit } from \"utils/lodash\";\r\n\r\nimport {\r\n  BlackjackControlState,\r\n  BlackjackControlActions,\r\n  GamePhases,\r\n  CardData,\r\n  CardVariant,\r\n} from \"./types\";\r\nimport * as actions from \"./actionTypes\";\r\n\r\nexport const initialBlackjackControlState: BlackjackControlState = {\r\n  status: \"\",\r\n  player_hand: [],\r\n  player2_hand: [],\r\n  dealer_hand: [],\r\n  player_score: 0,\r\n  player2_score: 0,\r\n  dealer_score: 0,\r\n  hand1_status: \"not_started\",\r\n  hand2_status: \"not_started\",\r\n  insurance: \"0\",\r\n  split: \"0\",\r\n  bet_amt: \"0.00000000\",\r\n  actualBet: \"\",\r\n  current_hand: \"0\",\r\n  actions: [],\r\n  gamePhase: GamePhases.NOT_START,\r\n  liveData: null,\r\n  coinsConfig: [],\r\n  seed: \"\",\r\n};\r\n\r\nexport const blackjackControlReducer = (\r\n  state: BlackjackControlState,\r\n  action: BlackjackControlActions,\r\n): BlackjackControlState => {\r\n  switch (action.type) {\r\n    case actions.SET_BET_AMOUNT:\r\n      return {\r\n        ...state,\r\n        bet_amt: action.bet_amount,\r\n      };\r\n    case actions.SET_ACTUAL_BET:\r\n      return {\r\n        ...state,\r\n        actualBet: action.actual_bet,\r\n      };\r\n    case actions.SET_GAME_PHASE:\r\n      return {\r\n        ...state,\r\n        gamePhase: action.phase,\r\n      };\r\n    case actions.SET_GAME_SESSION: {\r\n      const data: any = omit(action.data, [\r\n        \"player_hand\",\r\n        \"player2_hand\",\r\n        \"dealer_hand\",\r\n      ]);\r\n      data.dealer_hand = prepareDealerCards([], action.data.dealer_hand, true);\r\n      data.player_hand = prepareUserCards([], action.data.player_hand, true);\r\n      data.player2_hand = prepareUserCards([], action.data.player2_hand, true);\r\n\r\n      return {\r\n        ...state,\r\n        ...data,\r\n        active_user_bet: action.data.bet_amt,\r\n        gamePhase: GamePhases.HOLD,\r\n        seed: action.seed,\r\n      };\r\n    }\r\n    case actions.SET_COINS_CONFIG:\r\n      return {\r\n        ...state,\r\n        coinsConfig: action.config,\r\n      };\r\n    case actions.GAME_START: {\r\n      const data: any = omit(action.data, [\"player_hand\", \"dealer_hand\"]);\r\n      data.player_hand = prepareUserCards([], action.data.player_hand);\r\n      data.dealer_hand = prepareDealerCards([], action.data.dealer_hand);\r\n      if (action.data.status === \"win\" || action.data.status === \"loss\") {\r\n        data.gamePhase = GamePhases.END_GAME;\r\n      } else {\r\n        data.gamePhase = GamePhases.HOLD;\r\n      }\r\n      return {\r\n        ...state,\r\n        ...data,\r\n        player2_hand: [],\r\n        player2_score: \"0\",\r\n        split: \"0\",\r\n        insurance: \"0\",\r\n        current_hand: \"0\",\r\n        seed: action.seed,\r\n      };\r\n    }\r\n    case actions.GAME_SPLIT: {\r\n      const data: any = omit(action.data, [\r\n        \"player_hand\",\r\n        \"player2_hand\",\r\n        \"dealer_hand\",\r\n      ]);\r\n      data.dealer_hand = prepareDealerCards(\r\n        state.dealer_hand,\r\n        action.data.dealer_hand,\r\n      );\r\n      data.player_hand = prepareUserCards(\r\n        [state.player_hand[0]],\r\n        action.data.player_hand,\r\n      );\r\n      data.player2_hand = prepareUserCards(\r\n        [state.player_hand[1]],\r\n        action.data.player2_hand!,\r\n      );\r\n      data.player_hand[0].animation = \"split\";\r\n      data.player2_hand[0].animation = \"split\";\r\n\r\n      if (action.data.status === \"win\" || action.data.status === \"loss\") {\r\n        data.gamePhase = GamePhases.END_GAME;\r\n      }\r\n      return { ...state, ...data, split: \"1\", current_hand: \"1\" };\r\n    }\r\n    case actions.INSURANCE_ACCEPT:\r\n    case actions.INSURANCE_REJECT:\r\n      const data: any = omit(action.data, [\"player_hand\", \"dealer_hand\"]);\r\n      data.dealer_hand = prepareDealerCards([], action.data.dealer_hand);\r\n      data.player_hand = prepareUserCards([], action.data.player_hand);\r\n      if (action.data.status === \"win\" || action.data.status === \"loss\") {\r\n        data.gamePhase = GamePhases.END_GAME;\r\n      }\r\n\r\n      return { ...state, ...data };\r\n    case actions.GAME_HIT:\r\n    case actions.GAME_STAND:\r\n    case actions.GAME_DOUBLE: {\r\n      const data: any = omit(action.data, [\r\n        \"player_hand\",\r\n        \"player2_hand\",\r\n        \"dealer_hand\",\r\n      ]);\r\n      data.dealer_hand = prepareDealerCards(\r\n        state.dealer_hand,\r\n        action.data.dealer_hand,\r\n      );\r\n      data.player_hand = prepareUserCards(\r\n        state.player_hand,\r\n        action.data.player_hand,\r\n      );\r\n      if (action.data.player2_hand) {\r\n        data.player2_hand = prepareUserCards(\r\n          state.player2_hand,\r\n          action.data.player2_hand,\r\n        );\r\n      }\r\n      if (action.data.status === \"switch_hand\") {\r\n        data.current_hand = \"2\";\r\n      }\r\n      if (action.data.status === \"win\" || action.data.status === \"loss\") {\r\n        data.gamePhase = GamePhases.END_GAME;\r\n      }\r\n      return { ...state, ...data };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const prepareDealerCards = (\r\n  prevCards: Array<CardData>,\r\n  newCards: string,\r\n  isRestoreSession: boolean = false,\r\n): Array<CardData> => {\r\n  if (!newCards) {\r\n    return [];\r\n  }\r\n  const newCardsIndexes = newCards.split(\",\").map((item) => parseInt(item));\r\n  if (newCardsIndexes.length === 1) {\r\n    if (prevCards.length || isRestoreSession) {\r\n      return [\r\n        { index: newCardsIndexes[0], animation: \"none\" },\r\n        { index: 0, animation: \"hide\" },\r\n      ];\r\n    } else {\r\n      return [\r\n        { index: newCardsIndexes[0], animation: \"move-open\" },\r\n        { index: 0, animation: \"move-hide\" },\r\n      ];\r\n    }\r\n  }\r\n  const nextCards: Array<CardData> = [];\r\n  if (isRestoreSession) {\r\n    for (let i = 0; i < newCardsIndexes.length; i++) {\r\n      nextCards.push({\r\n        index: newCardsIndexes[i],\r\n        animation: \"none\",\r\n      });\r\n    }\r\n  } else {\r\n    for (let i = 0; i < newCardsIndexes.length; i++) {\r\n      if (i < prevCards.length) {\r\n        let anim: CardVariant;\r\n        if (\r\n          prevCards[i].animation === \"move-hide\" ||\r\n          prevCards[i].animation === \"hide\"\r\n        ) {\r\n          anim = \"open\";\r\n        } else {\r\n          anim = \"none\";\r\n        }\r\n        nextCards.push({\r\n          index: newCardsIndexes[i],\r\n          animation: anim,\r\n        });\r\n      } else {\r\n        nextCards.push({\r\n          index: newCardsIndexes[i],\r\n          animation: \"move-open\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return nextCards;\r\n};\r\n\r\nexport const prepareUserCards = (\r\n  prevCards: Array<CardData>,\r\n  newCards: string,\r\n  isRestoreSession: boolean = false,\r\n): Array<CardData> => {\r\n  if (!newCards) {\r\n    return [];\r\n  }\r\n  const newCardsIndexes = newCards.split(\",\").map((item) => parseInt(item));\r\n  const nextCards: Array<CardData> = [];\r\n  if (isRestoreSession) {\r\n    for (let i = 0; i < newCardsIndexes.length; i++) {\r\n      nextCards.push({\r\n        index: newCardsIndexes[i],\r\n        animation: \"none\",\r\n      });\r\n    }\r\n  } else {\r\n    for (let i = 0; i < newCardsIndexes.length; i++) {\r\n      let anim: CardVariant;\r\n      if (i < prevCards.length) {\r\n        anim = \"none\";\r\n      } else {\r\n        anim = \"move-open\";\r\n      }\r\n      nextCards.push({\r\n        index: newCardsIndexes[i],\r\n        animation: anim,\r\n      });\r\n    }\r\n  }\r\n  return nextCards;\r\n};\r\n","import { LiveData } from \"components/LiveStats/eventEmitter/types\";\r\nimport * as actions from \"./actionTypes\";\r\n\r\nexport type CardIndex = number;\r\n\r\nexport enum GamePhases {\r\n  NOT_START,\r\n  HOLD,\r\n  END_GAME,\r\n}\r\n\r\nexport interface CoinConfig {\r\n  coin: string;\r\n  minimum_bet: string;\r\n  maximum_bet: string;\r\n  maximum_profit: string;\r\n}\r\n\r\nexport type CardVariant =\r\n  | \"move-open\"\r\n  | \"move-hide\"\r\n  | \"open\"\r\n  | \"none\"\r\n  | \"hide\"\r\n  | \"split\";\r\n\r\nexport type HandStatuses =\r\n  | \"in_progress\"\r\n  | \"not_started\"\r\n  | \"played\"\r\n  | \"win\"\r\n  | \"loss\"\r\n  | \"draw\";\r\n\r\nexport interface CardData {\r\n  index: CardIndex;\r\n  animation: CardVariant;\r\n}\r\n\r\nexport interface BlackjackControlState {\r\n  status: string;\r\n  player_hand: Array<CardData>;\r\n  player2_hand: Array<CardData>;\r\n  dealer_hand: Array<CardData>;\r\n  player_score: number;\r\n  player2_score: number;\r\n  hand1_status: HandStatuses;\r\n  hand2_status: HandStatuses;\r\n  dealer_score: number;\r\n  insurance: string;\r\n  split: string;\r\n  bet_amt: string;\r\n  current_hand: string;\r\n  actions: Array<string>;\r\n  actualBet: string;\r\n  gamePhase: GamePhases;\r\n  coinsConfig: Array<CoinConfig>;\r\n  liveData: LiveData | null;\r\n  seed: string;\r\n}\r\n\r\nexport interface GameSessionsData {\r\n  bet_amt: string;\r\n  player_hand: string;\r\n  player2_hand: string;\r\n  dealer_hand: string;\r\n  player_score: number;\r\n  player2_score: number;\r\n  hand1_status: HandStatuses;\r\n  hand2_status: HandStatuses;\r\n  dealer_score: number;\r\n  insurance: string;\r\n  split: string;\r\n  current_hand: string;\r\n  actions: Array<String>;\r\n}\r\n\r\nexport interface GameActionData {\r\n  status: string;\r\n  player_hand: string;\r\n  player2_hand?: string;\r\n  dealer_hand: string;\r\n  player_score: number;\r\n  player2_score?: number;\r\n  dealer_score: number;\r\n  actions: Array<ActionType>;\r\n}\r\n\r\nexport type ActionType = \"Hit\" | \"Split\" | \"Stand\" | \"Double\" | \"Insurance\";\r\n\r\nexport type BlackjackControlActions =\r\n  | {\r\n      type: typeof actions.SET_BET_AMOUNT;\r\n      bet_amount: string;\r\n    }\r\n  | {\r\n      type: typeof actions.SET_ACTUAL_BET;\r\n      actual_bet: string;\r\n    }\r\n  | {\r\n      type: typeof actions.GAME_START;\r\n      data: GameActionData;\r\n      seed: string;\r\n    }\r\n  | {\r\n      type: typeof actions.GAME_HIT;\r\n      data: GameActionData;\r\n    }\r\n  | {\r\n      type: typeof actions.GAME_DOUBLE;\r\n      data: GameActionData;\r\n    }\r\n  | {\r\n      type: typeof actions.GAME_STAND;\r\n      data: GameActionData;\r\n    }\r\n  | {\r\n      type: typeof actions.GAME_SPLIT;\r\n      data: GameActionData;\r\n    }\r\n  | {\r\n      type: typeof actions.SET_GAME_PHASE;\r\n      phase: GamePhases;\r\n    }\r\n  | {\r\n      type: typeof actions.SET_COINS_CONFIG;\r\n      config: Array<CoinConfig>;\r\n    }\r\n  | {\r\n      type: typeof actions.SET_GAME_SESSION;\r\n      data: GameSessionsData;\r\n      seed: string;\r\n    }\r\n  | {\r\n      type: typeof actions.INSURANCE_ACCEPT;\r\n      data: GameActionData;\r\n    }\r\n  | {\r\n      type: typeof actions.INSURANCE_REJECT;\r\n      data: GameActionData;\r\n    };\r\n","export const GAME_START = \"GAME_START\";\r\nexport const GAME_HIT = \"GAME_HIT\";\r\nexport const GAME_SPLIT = \"GAME_SPLIT\";\r\nexport const GAME_STAND = \"GAME_STAND\";\r\nexport const GAME_DOUBLE = \"GAME_DOUBLE\";\r\nexport const SET_GAME_PHASE = \"SET_GAME_PHASE\";\r\nexport const SET_COINS_CONFIG = \"SET_COINS_CONFIG\";\r\nexport const SET_BET_AMOUNT = \"SET_BET_AMOUNT\";\r\nexport const SET_ACTUAL_BET = \"SET_ACTUAL_BET\";\r\nexport const SET_LIVE_STATS = \"SET_LIVE_STATS\";\r\nexport const SET_GAME_SESSION = \"SET_GAME_SESSION\";\r\nexport const INSURANCE_ACCEPT = \"INSURANCE_ACCEPT\";\r\nexport const INSURANCE_REJECT = \"INSURANCE_REJECT\";\r\n","export default __webpack_public_path__ + \"static/media/deck.5bf53e90.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useEventListener, useResizeObserver } from \"hooks\";\r\nimport css from \"./style.module.scss\";\r\nimport { useBlackjackControl } from \"../../../Controller/components/Reducer\";\r\nimport { UserHand, DealerHand } from \"./components\";\r\nimport { InsuranceLayout } from \"../\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\nimport { useWindowSize } from \"providers\";\r\n\r\nconst defaultRootSize = parseInt(css.defaultRootSize);\r\nconst mobileScreen = parseInt(css.mobileScreen);\r\n\r\nexport interface DeckPos {\r\n  Y: number;\r\n  X: number;\r\n}\r\n\r\nconst initDeckPos: DeckPos = {\r\n  Y: 0,\r\n  X: 0,\r\n};\r\n\r\ninterface Props {\r\n  deckRef: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst MOBILE_SCREEN_SIZE_PX = 500;\r\n\r\nconst Game = ({ deckRef }: Props) => {\r\n  const windowSize = useWindowSize();\r\n  const [deckPos, setDeckPos] = useState<DeckPos>(initDeckPos);\r\n  const [isMobileScreen, setIsMobileScreen] = useState(false);\r\n  const [scaleSize, setScaleSize] = useState<number | null>(null);\r\n  const [root, setRoot] = useState<HTMLDivElement | null>(null);\r\n\r\n  const { controlState } = useBlackjackControl();\r\n  const cardsInHand = useRef<{ dealer_hand: number; player_hand: number }>({\r\n    dealer_hand: 0,\r\n    player_hand: 0,\r\n  });\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { cardFlip, cardsFlip } = getSoundEffectNames(gamePathNames.BLACKJACK);\r\n  const setScreenType = () => {\r\n    if (window.innerWidth <= MOBILE_SCREEN_SIZE_PX) {\r\n      return setIsMobileScreen(true);\r\n    }\r\n    setIsMobileScreen(false);\r\n  };\r\n\r\n  useEventListener(\"resize\", setScreenType);\r\n\r\n  useEffect(() => setScreenType(), []);\r\n\r\n  useEffect(() => {\r\n    if (deckRef.current) {\r\n      setDeckPos({\r\n        Y: deckRef.current.offsetTop,\r\n        X: deckRef.current.offsetLeft,\r\n      });\r\n    }\r\n  }, [deckRef.current]);\r\n\r\n  useEffect(() => {\r\n    if (!controlState.player_hand || controlState.player_hand.length === 0)\r\n      return;\r\n    if (\r\n      cardsInHand.current.player_hand === 0 ||\r\n      cardsInHand.current.dealer_hand === 0\r\n    ) {\r\n      cardsInHand.current.player_hand = controlState.player_hand.length;\r\n      cardsInHand.current.dealer_hand = controlState.dealer_hand.length;\r\n    }\r\n    const countNewCard =\r\n      controlState.player_hand.length -\r\n      cardsInHand.current.player_hand +\r\n      controlState.dealer_hand.length -\r\n      cardsInHand.current.dealer_hand;\r\n    const effectNameNeeded = countNewCard > 1 ? cardsFlip : cardFlip;\r\n    const t = setTimeout(() => {\r\n      playEffect(effectNameNeeded);\r\n      cardsInHand.current.player_hand = controlState.player_hand.length;\r\n      cardsInHand.current.dealer_hand = controlState.dealer_hand.length;\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(t);\r\n    };\r\n  }, [controlState.player_hand.length, controlState.dealer_hand.length]);\r\n\r\n  useResizeObserver(\r\n    () => {\r\n      if (windowSize.width <= mobileScreen) {\r\n        setScaleSize(null);\r\n        return;\r\n      }\r\n\r\n      if (root) {\r\n        const scale = root.offsetHeight / defaultRootSize;\r\n        setScaleSize(scale);\r\n      }\r\n    },\r\n    root,\r\n    [windowSize],\r\n  );\r\n\r\n  return (\r\n    <div ref={setRoot} className={css.wrapper}>\r\n      <div\r\n        className={css.root}\r\n        style={\r\n          scaleSize\r\n            ? {\r\n                transform: `scale(${scaleSize})`,\r\n              }\r\n            : undefined\r\n        }>\r\n        <DealerHand\r\n          cards={controlState.dealer_hand}\r\n          hand=\"dealer_hand\"\r\n          score={controlState.dealer_score}\r\n          deckPos={deckPos}\r\n          seed={controlState.seed}\r\n          isMobileScreen={isMobileScreen}\r\n        />\r\n        <InsuranceLayout />\r\n        <div className={css.userBox}>\r\n          <UserHand\r\n            cards={controlState.player_hand}\r\n            hand=\"player_hand\"\r\n            score={controlState.player_score}\r\n            status={controlState.hand1_status}\r\n            deckPos={deckPos}\r\n            seed={controlState.seed}\r\n            isMobileScreen={isMobileScreen}\r\n          />\r\n          {controlState.split === \"1\" ? (\r\n            <UserHand\r\n              cards={controlState.player2_hand}\r\n              hand={\"player2_hand\"}\r\n              score={controlState.player2_score}\r\n              status={controlState.hand2_status}\r\n              deckPos={deckPos}\r\n              seed={controlState.seed}\r\n              isMobileScreen={isMobileScreen}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/splash-hidden.50f8eb84.png\";","import React, { useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nimport splashCards from \"assets/blackjack/splash-hidden.png\";\r\nimport { InsuranceLayout } from \"../\";\r\nimport css from \"./style.module.scss\";\r\nimport { useResizeObserver } from \"hooks\";\r\nimport { useWindowSize } from \"providers\";\r\n\r\nconst defaultRootSize = parseInt(css.defaultRootSize);\r\nconst mobileScreen = parseInt(css.mobileScreen);\r\n\r\nconst SplashScreen = () => {\r\n  const windowSize = useWindowSize();\r\n  const [scaleSize, setScaleSize] = useState<number | null>(null);\r\n  const [root, setRoot] = useState<HTMLDivElement | null>(null);\r\n\r\n  useResizeObserver(\r\n    () => {\r\n      if (windowSize.width <= mobileScreen) {\r\n        setScaleSize(null);\r\n        return;\r\n      }\r\n\r\n      if (root) {\r\n        const scale = root.offsetHeight / defaultRootSize;\r\n        setScaleSize(scale);\r\n      }\r\n    },\r\n    root,\r\n    [windowSize],\r\n  );\r\n\r\n  return (\r\n    <div ref={setRoot} className={css.wrapper}>\r\n      <div\r\n        className={css.root}\r\n        style={\r\n          scaleSize\r\n            ? {\r\n                transform: `scale(${scaleSize})`,\r\n              }\r\n            : undefined\r\n        }>\r\n        <div className={css.cardsTop}>\r\n          <div className={css.number}>10</div>\r\n          <img src={splashCards} draggable={false} />\r\n        </div>\r\n        <InsuranceLayout />\r\n        <div className={css.cardsBottom}>\r\n          <img src={splashCards} draggable={false} />\r\n          <div className={`${css.number} ${css.green}`}>10</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\n\r\nconst InsuranceLayout = ({ className }: { className?: string }) => {\r\n  return (\r\n    <div className={`${css.labelsWrapper} ${className ? className : \"\"}`}>\r\n      <span className={css.ribbonWrapper}>BLACKJACK PAYS 3 TO 2</span>\r\n      <span>INSURANCE PAYS 2 TO 1</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsuranceLayout;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"../../../Card\";\r\n\r\nimport { IHandProps } from \"../type\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nconst UserHand = ({\r\n  cards,\r\n  hand,\r\n  score,\r\n  status,\r\n  deckPos,\r\n  seed,\r\n  isMobileScreen,\r\n  paddingTopMultiplier,\r\n  classes,\r\n  cardClasses,\r\n}: IHandProps) => {\r\n  const mapCards = () => {\r\n    return cards.map((item, i) => (\r\n      <Card\r\n        classes={cardClasses}\r\n        key={hand + item.index + i + seed}\r\n        cardIndex={item.index}\r\n        deckPos={deckPos}\r\n        index={i}\r\n        animation={item.animation}\r\n        variant={status}\r\n        isMobileScreen={isMobileScreen}\r\n        paddingTopMultiplier={paddingTopMultiplier}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const handInlineCss = isMobileScreen\r\n    ? {\r\n        width: `${Number(cards.length) * 20 + 76}px`,\r\n        height: `${Number(cards.length) * 10 + 136}px`,\r\n      }\r\n    : {\r\n        width: `${Number(cards.length) * 80 + 40}px`,\r\n        height: `${Number(cards.length) * 10 + 160}px`,\r\n      };\r\n\r\n  return (\r\n    <div className={clsx(css.root, classes?.root)}>\r\n      <div style={handInlineCss} className={clsx(css.hand, classes?.hand)}>\r\n        {mapCards()}\r\n      </div>\r\n      <div\r\n        className={clsx(css.score, classes?.score, {\r\n          [css.active]: status === \"in_progress\",\r\n          [css.win]: status === \"win\",\r\n          [css.lose]: status === \"loss\",\r\n          [css.draw]: status === \"draw\",\r\n        })}>\r\n        {score}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHand;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport Card from \"../../../Card\";\r\n\r\nimport { IHandProps } from \"../type\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nconst DealerHand = ({\r\n  cards,\r\n  hand,\r\n  score,\r\n  deckPos,\r\n  seed,\r\n  isMobileScreen,\r\n  className,\r\n  cardClasses,\r\n  classes,\r\n  paddingTopMultiplier,\r\n}: Omit<IHandProps, \"status\">) => {\r\n  const mapCards = () => {\r\n    return cards.map((item, i) => (\r\n      <Card\r\n        classes={cardClasses}\r\n        key={hand + item.index + i + seed}\r\n        cardIndex={item.index}\r\n        deckPos={deckPos}\r\n        index={i}\r\n        animation={item.animation}\r\n        variant=\"none\"\r\n        isDealerHand\r\n        isMobileScreen={isMobileScreen}\r\n        paddingTopMultiplier={paddingTopMultiplier}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const handInlineCss = isMobileScreen\r\n    ? {\r\n        width: `${Number(cards.length) * 20 + 76}px`,\r\n        height: `${Number(cards.length) * 10 + 136}px`,\r\n      }\r\n    : {\r\n        width: `${Number(cards.length) * 80 + 40}px`,\r\n        height: `${Number(cards.length) * 10 + 160}px`,\r\n      };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={clsx(css.score, classes?.score)}>{score}</div>\r\n      <div style={handInlineCss} className={clsx(css.hand, classes?.hand)}>\r\n        {mapCards()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DealerHand;\r\n"],"sourceRoot":""}