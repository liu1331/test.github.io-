{"version":3,"sources":["games/Crash/components/Lines/style.module.scss","games/Crash/crash.module.css","pages/Crash/crashSocketWatcher.ts","games/Crash/game/engine/entities/Graph/calculates/coordinates.ts","games/Crash/game/engine/entities/Graph/index.ts","games/Crash/game/engine/entities/Graph/create/graph.ts","games/Crash/game/engine/entities/Graph/create/mask.ts","games/Crash/game/engine/entities/Graph/calculates/setHeadAngle.ts","games/Crash/game/engine/entities/Video/index.ts","games/Crash/game/engine/entities/Graph/graphTypes.ts","games/Crash/game/engine/entities/Axes/calculates.ts","games/Crash/game/engine/entities/Axes/index.ts","games/Crash/game/engine/entities/PayoutText.ts","games/Crash/game/engine/entities/SocketListener/index.ts","games/Crash/game/engine/entities/SocketListener/calculateCashoutButton.ts","games/Crash/game/engine/entities/Users/index.ts","games/Crash/game/engine/datas/preloadData.ts","games/Crash/game/engine/modules/loader/objectsAdd.ts","games/Crash/game/engine/modules/loader/preloadData.ts","games/Crash/game/engine/index.ts","games/Crash/game/engine/scenes/Main.ts","games/Crash/game/data/config.ts","games/Crash/components/Lines/index.tsx","games/Crash/index.tsx"],"names":["module","exports","crashSocketsList","gameCircleListener","gameUsersListener","statisticsHistoryListener","crashMainHistoryListener","profitTableListener","managerListener","historyListener","ping","intervals","createTimeouts","clearTimeouts","pushTimeout","gameCircleValue","setGameCircleValue","value","callBack","pingText","document","getElementById","lostConnectionTime","showPing","nowPing","Date","now","pingValue","Math","max","innerText","style","display","color","crashSocketWatcher","data","getOfflinePing","delay","method","action","forEach","i","clearInterval","length","Number","interval","setInterval","push","round","crash_point","seed","server_seed","id","time","balance","error","bet","profit","user_id","user_name","cashed_out_at","coin","amount","bet_amt","actualGameTime","startedTime","betsList","bets","at","rounds","params","coinPrice","calculateXY","scene","payout","parameters","calculatedGamePayout","yStart","xStart","game","config","height","width","plotStartX","crashGraphFixMultiplier","x","plotStartY","y","plotWidth","plotHeight","xValue","calcYValue","yValue","dots","calculatePosition","plane","multiplier","curveValue","curve","positionValue","getPosition","restoreRate","restoreValue","startedPosition","multiplierPosition","decelerationRate","edge","position","p0","state","graph","curveBezier","yDot1","p1","xDot1","yDot2","p2","xDot2","dot1","dot2","dot3","calculateDots","isDev","isDevelop","graphColors","white","down","up","dark","Graph","mask","currentGraphPosition","deactivated","createGraph","this","Phaser","Vector2","p3","line","clear","lineStyle","draw","console","track","errors","custom","place","calculatedDots","JSON","stringify","gameDots","setHeadAngle","head","setAlpha","background","showDots","pointers","add","graphics","Curves","CubicBezier","canvasWidth","canvasHeight","square","Geom","Rectangle","geom","createGeometryMask","fillRectShape","setMask","fillGradientStyle","engine","theme","fillRect","createMask","bezierDots","sprite","setAngle","setDepth","setOrigin","setTintFill","circle","outsideValues","isFirstLoad","setIsFirstLoad","positions","angleDot","headDot","newAngle","d1","d2","vector","atan2","getAngle","rotateSpeed","angleDifference","floor","angle","setPosition","isEffectsActive","parse","localStorage","getItem","setIsCrashEffectsActive","calcScale","widthCoefficient","video","heightCoefficient","Video","videos","name","fileName","loop","isLocal","centerCoordinates","videoPath","blendMode","BlendModes","SCREEN","MULTIPLY","loader","Loader","LoaderPlugin","on","Events","COMPLETE","setBlendMode","setMute","play","setPaused","scale","setScale","setCurrentTime","start","playEffectVideo","alpha","isPlaying","lazyLoading","loop500","stars","toFixed","destroy","p0_20","p25_500","p1000_","GamePages","getAxesText","isDisable","axesConfig","defaultTime","defaultPayout","getStartedAxesData","iterator","configValue","configValues","getConfigArray","payoutValues","textValues","createAxes","map","src","axes","gameWidth","gameHeight","coordinate","text","getAxesValues","dotStyle","axesTextReset","values","textValue","window","innerWidth","setText","axesTextSwitch","hide","alphaValue","axesColors","xMultiplier","yMultiplier","Axes","payoutSeparation","fontFamily","fontWeight","fontSize","millisecondsSeparation","timestamp","key","setColor","calcTime","payoutValue","currentTime","counter","PayoutText","textElement","timeToStart","defaultTimeValue","list","classList","newClass","contains","calculatedValue","twoNumbers","calculatedPayout","lastAmount","realPayout","webGamePayout","firstPayoutNumbers","slice","lastPayoutNumber","gameCircle","left","animationDelay","textUpdate","createPayoutText","innerHTML","remove","socket","newRoundTime","startTextValue","abs","startText","elementLength","match","elementFontSize","parseFloat","getComputedStyle","getPropertyValue","transform","isDevelopment","Listener","socketStarted","isTimeSet","currentValue","process","path","location","pathname","between","payoutText","savedTime","isGameHidden","crashed","restart","GamePayout","calculateButtonTextElement","querySelector","localAmt","count","amt","content","message","stack","log","calculateCashoutButton","users","createPlayerListener","newWinner","newListenerUserList","Users","listenerUserList","winnersUsers","winnerList","userTextStyles","playersListListener","newWinnerListener","winnersListener","body","user","Object","coordinates","replaceNumbers","tween","tweens","targets","duration","ease","err","msg","errorMessage","addNewPlayers","objectsAdd","preloadData","unit","load","Engine","objects","fpsDomObject","calculateValues","YAxisSizeMultiplier","XAxisPlotMinValue","onlineStatus","preload","bind","addObjects","colorScheme","disable","dom","fps","actualFps","t","exp","webPayout","Main","heightIncrement","widthIncrement","promo","SocketListener","create","getMessages","canvas","opacity","delta","listener","timeCalculate","calcGamePayout","watch","currentGameTime","show","Scene","type","AUTO","parent","createContainer","audio","disableWebAudio","disableContextMenu","backgroundColor","transparent","Lines","className","css","lines","linesBox","repeat","Game","React","lazy","withoutCrashGame","disableCrashRender","Crash","isShowEffects","boxRef","useRef","useState","render","setRender","scaleParams","setScaleParams","isOnline","useOnline","isWhiteThemeActive","useWhiteTheme","isLoaded","useDocumentLoaded","isHidden","useVisibility","useWindowSize","isHide","useChat","calculateScaleParams","node","current","offsetWidth","min","crashPadding","wrapperStyles","rangeBetween","startResize","useLayoutEffect","useEffect","crashSocket","errorDispatch","event","reason","code","status","useEventListener","isKeyboardEvent","shiftKey","ref","box","fallback"],"mappings":"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","file":"static/js/10.50911b51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"lines\":\"style_lines__OzPRG\",\"linesBox\":\"style_linesBox__10H2A\",\"line\":\"style_line__22RSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"crash_box__1582c\",\"loaderWrapper\":\"crash_loaderWrapper__1XtDA\",\"disabled\":\"crash_disabled__g5vql\"};","import { CrashStoryListener } from \"games/Crash/game/engine/entities/SocketListener/listenerTypes\";\r\nimport { createTimeouts } from \"utils\";\r\nimport { CrashGameCircleValue } from \"./controller/types\";\r\nimport {\r\n  CrashCoinParams,\r\n  GameCircleListenerTypes,\r\n  GameUsersListenerTypes,\r\n  HistoryListener,\r\n  ManagerListenerProps,\r\n  ProfitTableListenerType,\r\n} from \"./crashTypes\";\r\n\r\ninterface CrashSocketsListTypes {\r\n  gameCircleListener: (data: GameCircleListenerTypes) => void;\r\n  gameUsersListener: (data: GameUsersListenerTypes) => void;\r\n  profitTableListener: (data: ProfitTableListenerType) => void;\r\n\r\n  managerListener: (data: ManagerListenerProps) => void;\r\n  historyListener: (data: HistoryListener) => void;\r\n  statisticsHistoryListener: (data: CrashStoryListener) => void;\r\n  crashMainHistoryListener: (data: CrashStoryListener) => void;\r\n\r\n  ping: number;\r\n}\r\n\r\nexport const crashSocketsList: CrashSocketsListTypes = {\r\n  gameCircleListener: () => null,\r\n  gameUsersListener: () => null,\r\n  statisticsHistoryListener: () => null,\r\n  crashMainHistoryListener: () => null,\r\n\r\n  profitTableListener: () => null,\r\n  managerListener: () => null,\r\n  historyListener: () => null,\r\n\r\n  ping: 0,\r\n};\r\n\r\nconst intervals: NodeJS.Timeout[] = [];\r\nconst clearIntervals = () => {\r\n  intervals.forEach((i) => clearInterval(i));\r\n  intervals.length = 0;\r\n};\r\n\r\nconst { clearTimeouts, pushTimeout } = createTimeouts();\r\n\r\nlet gameCircleValue: CrashGameCircleValue | null = null;\r\nexport const setGameCircleValue = (\r\n  value: CrashGameCircleValue | null,\r\n  callBack?: () => void,\r\n) => {\r\n  if (gameCircleValue !== value) {\r\n    gameCircleValue = value;\r\n\r\n    callBack && callBack();\r\n  }\r\n};\r\n\r\nlet pingText = document.getElementById(\r\n  \"crashPing\",\r\n) as HTMLParagraphElement | null;\r\n\r\nconst lostConnectionTime = 2000;\r\n\r\nconst showPing = () => {\r\n  const nowPing = Date.now();\r\n  const pingValue = Math.max(nowPing - crashSocketsList.ping - 100, 0);\r\n\r\n  if (pingText) {\r\n    pingText.innerText = `Ping: ${pingValue}`;\r\n\r\n    if (pingValue <= 200) {\r\n      pingText.style.display = \"none\";\r\n    } else {\r\n      pingText.style.display = \"inline\";\r\n    }\r\n\r\n    if (pingValue > 500) {\r\n      pingText.style.color = \"darkred\";\r\n    } else {\r\n      pingText.style.color = \"\";\r\n    }\r\n\r\n    if (pingValue >= lostConnectionTime) {\r\n      pingText.innerText = `Connection lost`;\r\n    }\r\n  } else {\r\n    pingText = document.getElementById(\r\n      \"crashPing\",\r\n    ) as HTMLParagraphElement | null;\r\n  }\r\n\r\n  return pingValue;\r\n};\r\n\r\nexport const crashSocketWatcher = (data: any) => {\r\n  clearTimeouts();\r\n\r\n  const getOfflinePing = (delay = 600) => {\r\n    pushTimeout(() => {\r\n      const ping = showPing();\r\n\r\n      if (ping < lostConnectionTime) {\r\n        getOfflinePing();\r\n      } else {\r\n        crashSocketsList.managerListener({\r\n          method: \"offline\",\r\n        });\r\n      }\r\n    }, delay);\r\n  };\r\n\r\n  if (data.method === \"crashed\") {\r\n    clearTimeouts();\r\n    getOfflinePing(5000);\r\n  } else if (data.action === \"crash_update\") {\r\n    clearIntervals();\r\n    getOfflinePing();\r\n\r\n    if (\r\n      data.method !== \"new_round\" ||\r\n      (data.method === \"new_round\" && Number(data.value) < 5.8)\r\n    ) {\r\n      showPing();\r\n    }\r\n  }\r\n\r\n  crashSocketsList.ping = Date.now();\r\n  crashSocketsList.managerListener({\r\n    method: \"online\",\r\n  });\r\n\r\n  switch (data.action) {\r\n    case \"crash_update\":\r\n      switch (data.method) {\r\n        case \"crashed\":\r\n          setGameCircleValue(data.method, () => {\r\n            crashSocketsList.managerListener({\r\n              method: data.method,\r\n            });\r\n          });\r\n          crashSocketsList.gameCircleListener({\r\n            method: \"crashed\",\r\n            value: data.value,\r\n          });\r\n\r\n          const interval = setInterval(() => {\r\n            crashSocketsList.gameCircleListener({\r\n              method: \"crashed\",\r\n              value: data.value,\r\n            });\r\n          }, 200);\r\n          intervals.push(interval);\r\n\r\n          crashSocketsList.profitTableListener({\r\n            method: \"crashed\",\r\n          });\r\n          crashSocketsList.historyListener({\r\n            method: \"crashed\",\r\n            round: {\r\n              crash_point: data.value,\r\n              seed: data.server_seed,\r\n              id: data.id,\r\n            },\r\n          });\r\n          const round: CrashStoryListener = {\r\n            method: \"crashed\",\r\n            round: {\r\n              id: data.id,\r\n              crash_point: data.value,\r\n              seed: data.server_seed,\r\n            },\r\n          };\r\n          crashSocketsList.statisticsHistoryListener(round);\r\n          crashSocketsList.crashMainHistoryListener(round);\r\n\r\n          break;\r\n        case \"new_round\":\r\n          setGameCircleValue(data.method, () => {\r\n            crashSocketsList.managerListener({\r\n              method: data.method,\r\n            });\r\n          });\r\n          crashSocketsList.gameCircleListener({\r\n            method: \"new_round\",\r\n            time: Date.now() - Number(data.value) * 1000,\r\n            value: data.value,\r\n          });\r\n\r\n          break;\r\n\r\n        case \"bet_cashedout\":\r\n        case \"bet_played\":\r\n          crashSocketsList.managerListener({\r\n            method: data.method,\r\n            balance: data.balance,\r\n            error: data.error,\r\n          });\r\n          break;\r\n\r\n        case \"new_bet\":\r\n          crashSocketsList.gameUsersListener({\r\n            method: \"new_bet\",\r\n            bet: {\r\n              profit: \"\",\r\n              user_id: data.user_id,\r\n              user_name: data.user_name,\r\n              cashed_out_at: data.cashed_out_at,\r\n            },\r\n          });\r\n\r\n          crashSocketsList.profitTableListener({\r\n            method: \"new_bet\",\r\n            ...data,\r\n          });\r\n          break;\r\n\r\n        case \"new_bet_finalized\":\r\n          crashSocketsList.managerListener({\r\n            method: \"new_bet_finalized\",\r\n            coin: data.coin,\r\n            profit: data.profit,\r\n            amount: data.bet_amt,\r\n          });\r\n          break;\r\n\r\n        case \"start_game\":\r\n          crashSocketsList.gameCircleListener({ method: \"start_game\" });\r\n\r\n          break;\r\n\r\n        case \"update_value\":\r\n          setGameCircleValue(data.method, () => {\r\n            crashSocketsList.managerListener({\r\n              method: data.method,\r\n            });\r\n          });\r\n          crashSocketsList.gameCircleListener({\r\n            method: \"update_value\",\r\n            value: data.value,\r\n            actualGameTime: data.time,\r\n            startedTime: Date.now() - Number(data.time),\r\n          });\r\n\r\n          break;\r\n\r\n        case \"current_bets\":\r\n          const betsList: any = {\r\n            method: \"current_bets\",\r\n            bets: data.bets,\r\n          };\r\n\r\n          crashSocketsList.gameUsersListener(betsList);\r\n          crashSocketsList.profitTableListener(betsList);\r\n          crashSocketsList.managerListener(betsList);\r\n          break;\r\n\r\n        case \"bet_cashedout_update\":\r\n          crashSocketsList.gameUsersListener({\r\n            method: \"bet_cashedout_update\",\r\n            user_id: data.user_id,\r\n            profit: data.profit,\r\n            at: data.at,\r\n          });\r\n\r\n          crashSocketsList.profitTableListener({\r\n            method: \"bet_cashedout_update\",\r\n            ...data,\r\n          });\r\n\r\n          crashSocketsList.managerListener({\r\n            method: \"bet_cashedout_update\",\r\n            user_id: data.user_id,\r\n          });\r\n\r\n          break;\r\n\r\n        case \"previous_rounds\":\r\n          crashSocketsList.historyListener({\r\n            method: \"previous_rounds\",\r\n            rounds: data.rounds,\r\n          });\r\n          const rounds: CrashStoryListener = {\r\n            method: \"previous_rounds\",\r\n            rounds: data.rounds,\r\n          };\r\n          crashSocketsList.statisticsHistoryListener(rounds);\r\n          crashSocketsList.crashMainHistoryListener(rounds);\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      break;\r\n\r\n    case \"update_balance\":\r\n      break;\r\n\r\n    case \"update_coin_parameters\":\r\n      const params: CrashCoinParams = {\r\n        ...data,\r\n      };\r\n      crashSocketsList.managerListener({\r\n        method: \"update_coin_parameters\",\r\n        coinPrice: params,\r\n      });\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (data.error) {\r\n  }\r\n};\r\n","import Main from \"../../../scenes/Main\";\r\nimport { crashGraphFixMultiplier } from \"../create/graph\";\r\nimport { Plane } from \"../graphTypes\";\r\n\r\nconst calculateDots = (scene: Main, xValue: number, yValue: number) => {\r\n  const { height, width } = scene.game.config;\r\n\r\n  const payout = scene.parameters.calculatedGamePayout - 1;\r\n  const dot1XMultiplier = 0.4;\r\n  const dot2XMultiplier = 0.75;\r\n  const dot1YMultiplier = 0.15;\r\n  const dot2YMultiplier = 0.35;\r\n\r\n  const calculatePosition = (\r\n    plane: Plane,\r\n    multiplier: number,\r\n    curveValue?: number,\r\n    curve?: Phaser.Curves.CubicBezier,\r\n  ) => {\r\n    const value = plane === \"x\" ? xValue : yValue;\r\n\r\n    const positionValue = plane === \"x\" ? xValue : yValue;\r\n    const getPosition = (restoreRate?: number) => {\r\n      let restoreValue = 0;\r\n\r\n      if (restoreRate) {\r\n        restoreValue = payout * (multiplier / restoreRate);\r\n      }\r\n\r\n      if (plane === \"x\") {\r\n        const startedPosition = positionValue * (1 - payout);\r\n        const multiplierPosition = positionValue * multiplier;\r\n\r\n        return startedPosition > multiplierPosition\r\n          ? startedPosition\r\n          : multiplierPosition + restoreValue;\r\n      }\r\n\r\n      const startedPosition =\r\n        Number(height) - (Number(height) - positionValue) * (1 - payout * 2);\r\n      const multiplierPosition =\r\n        Number(height) - (Number(height) - positionValue) * multiplier;\r\n\r\n      return startedPosition < multiplierPosition\r\n        ? startedPosition\r\n        : multiplierPosition + restoreValue;\r\n    };\r\n\r\n    if (payout < 1 || !curveValue) {\r\n      const position = getPosition();\r\n\r\n      return position;\r\n    }\r\n    const { yStart } = scene.parameters;\r\n    const plotStartY = yStart * crashGraphFixMultiplier.y;\r\n    const decelerationRate = plane === \"x\" ? 100 : 50;\r\n    const edge = plane === \"x\" ? value : Number(height) - plotStartY;\r\n    let position = curveValue + payout * (multiplier / decelerationRate);\r\n    if (curve && curveValue === curve.p0[plane]) {\r\n      //restore value\r\n      position = getPosition(decelerationRate);\r\n    }\r\n    if (position >= edge) {\r\n      position = edge;\r\n    }\r\n    return position;\r\n  };\r\n\r\n  const curve = scene.state.graph?.graph.curveBezier;\r\n\r\n  const yDot1 = calculatePosition(\"y\", dot1YMultiplier, curve?.p1.y, curve);\r\n  const xDot1 = calculatePosition(\"x\", dot1XMultiplier, curve?.p1.x, curve);\r\n\r\n  const yDot2 = calculatePosition(\"y\", dot2YMultiplier, curve?.p2.y, curve);\r\n  const xDot2 = calculatePosition(\"x\", dot2XMultiplier, curve?.p2.x, curve);\r\n\r\n  const xDot3 = xDot2;\r\n  const yDot3 = yDot2;\r\n\r\n  return {\r\n    dot1: {\r\n      x: xDot1,\r\n      y: yDot1,\r\n    },\r\n    dot2: {\r\n      x: xDot2,\r\n      y: yDot2,\r\n    },\r\n    dot3: {\r\n      x: xDot3,\r\n      y: yDot3,\r\n    },\r\n  };\r\n};\r\n\r\nexport const calculateXY = (scene: Main) => {\r\n  const payout = scene.parameters.calculatedGamePayout - 1;\r\n\r\n  const { yStart, xStart } = scene.parameters;\r\n  const { height, width } = scene.game.config;\r\n\r\n  const plotStartX = xStart * crashGraphFixMultiplier.x,\r\n    plotStartY = yStart * crashGraphFixMultiplier.y,\r\n    plotWidth = Number(width) - plotStartX,\r\n    plotHeight = Number(height) - plotStartY;\r\n\r\n  const xValue =\r\n    payout < 1\r\n      ? plotWidth * payout + plotStartX - xStart * 0.5\r\n      : Number(width) - xStart * 0.5;\r\n  const calcYValue =\r\n    payout < 1 ? plotHeight * payout + plotStartY : Number(height);\r\n  const yValue = Number(height) - calcYValue + yStart;\r\n\r\n  const dots = calculateDots(scene, xValue, yValue);\r\n\r\n  return {\r\n    x: xValue,\r\n    y: yValue,\r\n\r\n    dots,\r\n  };\r\n};\r\n","import { track } from \"utils\";\r\nimport { isDevelop } from \"utils/isDevelopment\";\r\nimport Main from \"../../scenes/Main\";\r\nimport { calculateXY } from \"./calculates/coordinates\";\r\nimport { setHeadAngle } from \"./calculates/setHeadAngle\";\r\nimport { createGraph } from \"./create/graph\";\r\nimport { GraphElement, Mask } from \"./graphTypes\";\r\n\r\nconst isDev = isDevelop();\r\n\r\nexport const graphColors = {\r\n  white: {\r\n    down: 0x0083ff,\r\n    up: 0xff7e77,\r\n  },\r\n  dark: {\r\n    down: 0xf707bf,\r\n    up: 0x01f1ff,\r\n  },\r\n  width: 3,\r\n};\r\n\r\nexport default class Graph {\r\n  scene: Main;\r\n  graph: GraphElement;\r\n  mask: Mask;\r\n  dots: Phaser.GameObjects.Arc[];\r\n\r\n  currentGraphPosition: [number, number] = [0, 0]; /*x, y */\r\n  deactivated = false;\r\n\r\n  constructor(scene: Main) {\r\n    const { graph, mask, dots } = createGraph(\r\n      scene,\r\n      // isDev, // for show graph dots\r\n    );\r\n    this.graph = graph;\r\n    this.mask = mask;\r\n    this.dots = dots;\r\n\r\n    this.scene = scene;\r\n  }\r\n\r\n  draw() {\r\n    if (this.scene.parameters.calculatedGamePayout > 100 && this.deactivated) {\r\n      return;\r\n    }\r\n    const { x, y, dots } = calculateXY(this.scene);\r\n    this.currentGraphPosition = [x, y];\r\n\r\n    this.graph.curveBezier.p1 = new Phaser.Math.Vector2(\r\n      dots.dot1.x,\r\n      dots.dot1.y,\r\n    );\r\n    this.graph.curveBezier.p2 = new Phaser.Math.Vector2(\r\n      dots.dot2.x,\r\n      dots.dot2.y,\r\n    );\r\n    this.graph.curveBezier.p3 = new Phaser.Math.Vector2(x, y);\r\n    this.graph.line.clear();\r\n    this.graph.line.lineStyle(graphColors.width, graphColors.dark.up);\r\n    this.graph.curveBezier.draw(this.graph.line);\r\n    if (isDev && this.dots.length) {\r\n      try {\r\n        if (this.dots[0]) {\r\n          this.dots[0].x = this.graph.curveBezier.p1.x;\r\n          this.dots[0].y = this.graph.curveBezier.p1.y;\r\n        }\r\n        if (this.dots[1]) {\r\n          this.dots[1].x = this.graph.curveBezier.p2.x;\r\n          this.dots[1].y = this.graph.curveBezier.p2.y;\r\n        }\r\n        if (this.dots[2]) {\r\n          this.dots[2].x = dots.dot3.x;\r\n          this.dots[2].y = dots.dot3.y;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"curveBezier dots: \", dots, this.dots);\r\n        track()?.errors(error, {\r\n          custom: {\r\n            place: \"crash graph error\",\r\n            calculatedDots: JSON.stringify(dots),\r\n            gameDots: JSON.stringify(this.dots),\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    setHeadAngle(\r\n      this.scene,\r\n      this.graph.head,\r\n      this.currentGraphPosition,\r\n      dots.dot3,\r\n    );\r\n  }\r\n\r\n  hide() {\r\n    this.deactivated = true;\r\n\r\n    this.graph.head.setAlpha(0);\r\n    this.mask.background.setAlpha(0);\r\n    this.graph.line.setAlpha(0);\r\n  }\r\n\r\n  show() {\r\n    this.deactivated = false;\r\n\r\n    this.graph.head.setAlpha(1);\r\n    this.mask.background.setAlpha(1);\r\n    this.graph.line.setAlpha(1);\r\n  }\r\n}\r\n","import { graphColors } from \"..\";\r\nimport Main from \"../../../scenes/Main\";\r\nimport { createMask } from \"./mask\";\r\n\r\nexport const crashGraphFixMultiplier = {\r\n  x: 1.5,\r\n  y: 3,\r\n};\r\n\r\nexport const createGraph = (scene: Main, showDots?: boolean) => {\r\n  const { yStart, xStart } = scene.parameters;\r\n  const pointers = [\r\n    new Phaser.Math.Vector2(\r\n      xStart * crashGraphFixMultiplier.x - xStart * 0.5,\r\n      Number(scene.game.config.height) -\r\n        yStart * crashGraphFixMultiplier.y +\r\n        yStart,\r\n    ),\r\n    new Phaser.Math.Vector2(Number(scene.game.config.width), 0),\r\n  ];\r\n  const dots = [\r\n    new Phaser.Math.Vector2(200, 200),\r\n    new Phaser.Math.Vector2(100, 200),\r\n  ];\r\n\r\n  const line = scene.add.graphics();\r\n  const curveBezier = new Phaser.Curves.CubicBezier(\r\n    pointers[0],\r\n    dots[0],\r\n    dots[1],\r\n    pointers[1],\r\n  );\r\n\r\n  const mask = createMask(scene, line);\r\n\r\n  const bezierDots: Phaser.GameObjects.Arc[] = [];\r\n\r\n  const head = scene.add\r\n    .sprite(0, 0, \"head\")\r\n    .setAngle(45)\r\n    .setAlpha(1)\r\n    .setDepth(3)\r\n    .setOrigin(0.75, 0.3)\r\n    .setTintFill(graphColors[scene.state.engine.theme].up);\r\n\r\n  if (showDots) {\r\n    bezierDots.push(\r\n      scene.add.circle(curveBezier.p1.x, curveBezier.p1.y, 5, 0x00ff00),\r\n    );\r\n    bezierDots.push(\r\n      scene.add.circle(curveBezier.p2.x, curveBezier.p2.y, 5, 0xffff00),\r\n    );\r\n    bezierDots.push(\r\n      scene.add.circle(curveBezier.p2.x, curveBezier.p2.y, 5, 0xff00ff),\r\n    );\r\n  }\r\n\r\n  return {\r\n    graph: {\r\n      line,\r\n      curveBezier,\r\n      head,\r\n    },\r\n    mask,\r\n    dots: bezierDots,\r\n  };\r\n};\r\n","import { graphColors } from \"..\";\r\nimport Main from \"../../../scenes/Main\";\r\n\r\nexport const createMask = (scene: Main, line: Phaser.GameObjects.Graphics) => {\r\n  const canvasWidth = Number(scene.game.config.width),\r\n    canvasHeight = Number(scene.game.config.height);\r\n\r\n  const square = new Phaser.Geom.Rectangle(0, 0, canvasWidth, canvasHeight);\r\n  const geom = line.createGeometryMask();\r\n  const background = scene.add.graphics().fillRectShape(square).setMask(geom);\r\n\r\n  background.clear();\r\n  background.fillGradientStyle(\r\n    graphColors[scene.state.engine.theme].down,\r\n    graphColors[scene.state.engine.theme].up,\r\n    graphColors[scene.state.engine.theme].down,\r\n    graphColors[scene.state.engine.theme].up,\r\n  );\r\n  background.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  return {\r\n    geom,\r\n    background,\r\n  };\r\n};\r\n","import { crashGraphFixMultiplier } from \"../create/graph\";\r\nimport Main from \"../../../scenes/Main\";\r\n\r\ninterface Coordinate {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst outsideValues = {\r\n  isFirstLoad: true,\r\n};\r\n\r\nexport const setIsFirstLoad = (value: boolean) => {\r\n  outsideValues.isFirstLoad = value;\r\n};\r\n\r\nexport const getAngle = (d1: Coordinate, d2: Coordinate) => {\r\n  const vector = {\r\n    x: d1.x - d2.x,\r\n    y: d1.y - d2.y,\r\n  };\r\n\r\n  return Math.atan2(vector.x, vector.y) * (180 / 3.14) - 130;\r\n};\r\n\r\nexport const setHeadAngle = (\r\n  scene: Main,\r\n  head: Phaser.GameObjects.Sprite,\r\n  positions: [number, number],\r\n  angleDot: Coordinate,\r\n  /*x, y*/\r\n) => {\r\n  const payout = scene.parameters.calculatedGamePayout;\r\n  const headDot = {\r\n    x: head.x,\r\n    y: head.y,\r\n  };\r\n\r\n  if (payout < 1.05) {\r\n    const { width, height } = scene.game.config;\r\n    const { yStart, xStart } = scene.parameters;\r\n    const plotStartY =\r\n      Number(scene.game.config.height) -\r\n      yStart * crashGraphFixMultiplier.y +\r\n      yStart;\r\n    const plotStartX = xStart * crashGraphFixMultiplier.x - xStart * 0.5;\r\n\r\n    angleDot.x -= 0;\r\n    angleDot.y += Number(height);\r\n\r\n    headDot.x = Number(width) - plotStartX;\r\n    headDot.y = plotStartY;\r\n  }\r\n  let newAngle = getAngle(headDot, angleDot);\r\n\r\n  let rotateSpeed = 2;\r\n\r\n  if (payout < 1.3 && !outsideValues.isFirstLoad) {\r\n    rotateSpeed = 0.25;\r\n  } else if (payout > 1.3 && outsideValues.isFirstLoad) {\r\n    outsideValues.isFirstLoad = false;\r\n  }\r\n\r\n  const angleDifference = Math.floor(-newAngle - head.angle);\r\n  if (angleDifference < -1 || angleDifference > 1) {\r\n    if (-newAngle > head.angle) {\r\n      head.setAngle(head.angle + rotateSpeed);\r\n    } else if (-newAngle < head.angle) {\r\n      head.setAngle(head.angle - rotateSpeed);\r\n    }\r\n  }\r\n\r\n  head.setPosition(...positions);\r\n  head.setDepth(100);\r\n};\r\n","import Main from \"../../scenes/Main\";\r\nimport { CalcScaleAnimation, GameCircle, VideosList } from \"../../types\";\r\n\r\nlet isEffectsActive = JSON.parse(\r\n  localStorage.getItem(\"isShowCrashEffect\") || \"true\",\r\n);\r\nexport const setIsCrashEffectsActive = (value: boolean) =>\r\n  (isEffectsActive = value);\r\n\r\nconst calcScale = (params: CalcScaleAnimation) => {\r\n  const widthCoefficient = params.config.width / params.video.width;\r\n  const heightCoefficient = params.config.height / params.video.height;\r\n\r\n  return Math.max(widthCoefficient, heightCoefficient);\r\n};\r\n\r\nexport default class Video {\r\n  scene: Main;\r\n  videos: VideosList = {};\r\n  constructor(scene: Main) {\r\n    this.scene = scene;\r\n  }\r\n\r\n  lazyLoading(\r\n    name: string,\r\n    fileName: string,\r\n    params: {\r\n      loop?: boolean;\r\n    } = {\r\n      loop: true,\r\n    },\r\n  ) {\r\n    this.videos[name] = null;\r\n\r\n    const theme = this.scene.isLocal ? \"dark\" : this.scene.state.engine.theme;\r\n\r\n    const centerCoordinates = {\r\n      x: Number(this.scene.game.config.width) / 2,\r\n      y: Number(this.scene.game.config.height) / 2,\r\n    };\r\n\r\n    const videoPath = `assets/crash/video/${theme}/${fileName}`;\r\n    const blendMode =\r\n      theme === \"dark\" ? Phaser.BlendModes.SCREEN : Phaser.BlendModes.MULTIPLY;\r\n\r\n    const loader = new Phaser.Loader.LoaderPlugin(this.scene);\r\n    loader.video(name, videoPath);\r\n    loader.on(Phaser.Loader.Events.COMPLETE, () => {\r\n      if (!this.videos[name]) {\r\n        this.videos[name] = this.scene.add\r\n          .video(centerCoordinates.x, centerCoordinates.y, name)\r\n          .setBlendMode(blendMode)\r\n          .setMute(true)\r\n          .setAlpha(0)\r\n          .play(params.loop)\r\n          .setPaused(false)\r\n          .setOrigin(0.5)\r\n          .setAlpha(0)\r\n          .on(\"play\", () => {\r\n            this.videos[name]?.setAlpha(1);\r\n          });\r\n\r\n        const scale = calcScale({\r\n          video: {\r\n            height: this.videos[name]?.height || 0,\r\n            width: this.videos[name]?.width || 0,\r\n          },\r\n          config: {\r\n            height: Number(this.scene.game.config.height),\r\n            width: Number(this.scene.game.config.width),\r\n          },\r\n        });\r\n\r\n        this.videos[name]?.setScale(scale);\r\n\r\n        if (!params.loop) {\r\n          this.videos[name]?.on(\"complete\", () => {\r\n            this.videos[name]?.setPaused(true).setAlpha(0).setCurrentTime(0);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    loader.start();\r\n  }\r\n\r\n  listener(circle: GameCircle, payout: number) {\r\n    if (!isEffectsActive && !this.scene.isLocal) {\r\n      return;\r\n    }\r\n\r\n    const playEffectVideo = (name: string) => {\r\n      if (\r\n        this.videos[name] &&\r\n        (this.videos[name]?.alpha !== 1 || !this.videos[name]?.isPlaying())\r\n      ) {\r\n        this.videos[name]\r\n          ?.setCurrentTime(0)\r\n          .setPaused(false)\r\n          .play()\r\n          .setAlpha(1)\r\n          .setDepth(2);\r\n      } else if (typeof this.videos[name] !== \"object\") {\r\n        this.scene.state.videos.lazyLoading(`${name}`, `${name}.mp4`, {\r\n          loop: false,\r\n        });\r\n      }\r\n    };\r\n\r\n    switch (circle) {\r\n      case \"update_value\":\r\n        if (\r\n          !this.videos.loop500 &&\r\n          this.videos.stars &&\r\n          this.videos.stars.alpha !== 1\r\n        ) {\r\n          this.videos.stars\r\n            ?.setCurrentTime(0)\r\n            .setPaused(false)\r\n            .setAlpha(1)\r\n            .play(true);\r\n        } else if (typeof this.videos.stars !== \"object\") {\r\n          this.scene.state.videos.lazyLoading(\"stars\", \"stars.mp4\");\r\n        }\r\n\r\n        const roundPayout = Number(Math.floor(payout).toFixed());\r\n\r\n        switch (roundPayout) {\r\n          //@ts-ignore\r\n          case 2:\r\n            if (payout > 2.5) {\r\n              break;\r\n            }\r\n          case 5:\r\n          case 10:\r\n          case 20:\r\n            playEffectVideo(\"p0_20\");\r\n            break;\r\n\r\n          case 30:\r\n          case 100:\r\n          case 250:\r\n          case 500:\r\n            playEffectVideo(\"p25_500\");\r\n\r\n            break;\r\n\r\n          default:\r\n            if (payout > 500) {\r\n              if (this.videos.loop500 && this.videos.loop500.alpha !== 1) {\r\n                this.videos.loop500?.setPaused(false).setAlpha(1);\r\n\r\n                if (this.videos.stars?.alpha !== 0) {\r\n                  this.videos.stars?.setPaused(true).setAlpha(0);\r\n                }\r\n              } else if (typeof this.videos.loop500 !== \"object\") {\r\n                this.scene.state.videos.lazyLoading(\"loop500\", \"loop500.mp4\");\r\n              }\r\n\r\n              if (payout > 1000) {\r\n                if (\r\n                  (payout > 1000 && payout < 1010) ||\r\n                  (payout > 5000 && payout < 5100) ||\r\n                  payout > 8000\r\n                ) {\r\n                  playEffectVideo(\"p1000_\");\r\n                }\r\n              }\r\n            }\r\n            break;\r\n        }\r\n        break;\r\n\r\n      default:\r\n      case \"crashed\":\r\n      case \"new_round\":\r\n        if (this.videos.stars?.alpha !== 0) {\r\n          this.videos.stars?.setAlpha(0).setCurrentTime(0).setPaused(true);\r\n        }\r\n\r\n        if (this.videos.loop500?.alpha !== 0) {\r\n          this.videos.loop500\r\n            ?.setAlpha(0)\r\n            .setCurrentTime(0)\r\n            .setPaused(true)\r\n            .destroy();\r\n          delete this.videos.loop500;\r\n        }\r\n\r\n        if (this.videos.p0_20?.alpha !== 0) {\r\n          this.videos.p0_20?.setAlpha(0).setCurrentTime(0).setPaused(true);\r\n        }\r\n\r\n        if (this.videos.p25_500?.alpha !== 0) {\r\n          this.videos.p25_500\r\n            ?.setAlpha(0)\r\n            .setCurrentTime(0)\r\n            .setPaused(true)\r\n            .destroy();\r\n          delete this.videos.p25_500;\r\n        }\r\n\r\n        if (this.videos.p1000_?.alpha !== 0) {\r\n          this.videos.p1000_\r\n            ?.setAlpha(0)\r\n            .setCurrentTime(0)\r\n            .setPaused(true)\r\n            .destroy();\r\n          delete this.videos.p1000_;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n","export enum GamePages {\r\n  promo = \"/crash-promo\",\r\n}\r\n\r\nexport interface GraphElement {\r\n  line: Phaser.GameObjects.Graphics;\r\n  curveBezier: Phaser.Curves.CubicBezier;\r\n  head: Phaser.GameObjects.Sprite;\r\n}\r\n\r\nexport interface Style {\r\n  start: number;\r\n  mid: number;\r\n  end: number;\r\n  width: number;\r\n}\r\n\r\nexport interface Mask {\r\n  geom: Phaser.Display.Masks.GeometryMask;\r\n  background: Phaser.GameObjects.Graphics;\r\n}\r\n\r\nexport type Plane = \"x\" | \"y\";\r\n","import { axesConfig } from \".\";\r\nimport Main from \"../../scenes/Main\";\r\nimport { Plane } from \"../Graph/graphTypes\";\r\n\r\nexport const getAxesText = (\r\n  value: number | string,\r\n  plane: Plane,\r\n  isDisable?: boolean,\r\n) => {\r\n  if (isDisable) {\r\n    if (plane === \"y\") {\r\n      return \"1.00x\";\r\n    } else if (typeof value === \"string\") {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  if (typeof value === \"string\") {\r\n    return value;\r\n  }\r\n\r\n  return plane === \"x\"\r\n    ? `${axesConfig.defaultTime * value}`\r\n    : `${(axesConfig.defaultPayout * value + 1).toFixed(2)}x`;\r\n};\r\n\r\nconst getAxesValues = (\r\n  plane: Plane,\r\n  scene: Main,\r\n  iterator: number,\r\n  value: number | string,\r\n) => {\r\n  const yStart = scene.parameters.yStart * 5;\r\n  const xStart = scene.parameters.xStart;\r\n  const gameWidth = Number(scene.game.config.width);\r\n  const gameHeight = Number(scene.game.config.height);\r\n\r\n  //@ts-ignore\r\n  const coordinate = axesConfig[`${plane}Multiplier`][iterator];\r\n  const x = plane === \"x\" ? gameWidth * coordinate - xStart : 0;\r\n  const y =\r\n    plane === \"y\" ? gameHeight * coordinate - yStart : gameHeight - yStart / 2;\r\n\r\n  const text = getAxesText(\r\n    value,\r\n    plane,\r\n    plane === \"y\" ? iterator === 0 : gameWidth < 530,\r\n  );\r\n\r\n  return {\r\n    x,\r\n    y,\r\n    text,\r\n  };\r\n};\r\n\r\nconst getStartedAxesData = (\r\n  plane: Plane,\r\n  iterator: number,\r\n  configValue: string | number,\r\n  configValues: (string | number)[],\r\n) => (plane === \"y\" ? configValues[iterator - 1] : configValue);\r\n\r\nconst getConfigArray = (plane: Plane) =>\r\n  plane === \"y\" ? axesConfig.payoutValues : axesConfig.textValues;\r\n\r\nexport const createAxes = (plane: Plane, scene: Main) => {\r\n  const values = getConfigArray(plane);\r\n\r\n  return values.map((value, i, src) => {\r\n    const axes = getStartedAxesData(plane, i, value, src);\r\n    const { x, y, text } = getAxesValues(plane, scene, i, axes);\r\n\r\n    const ax = scene.add.text(x, y, text, scene.state.axes.state.dotStyle);\r\n    return ax;\r\n  });\r\n};\r\n\r\nexport const axesTextReset = (\r\n  plane: Plane,\r\n  axes: Phaser.GameObjects.Text[],\r\n) => {\r\n  const values = getConfigArray(plane);\r\n\r\n  axes.forEach((axes, i) => {\r\n    const textValue = getStartedAxesData(plane, i, values[i], values);\r\n\r\n    const text = getAxesText(\r\n      textValue,\r\n      plane,\r\n      plane === \"y\" ? i === 0 : window.innerWidth < 600,\r\n    );\r\n    axes.setText(text);\r\n  });\r\n};\r\n\r\nexport const axesTextSwitch = (\r\n  axes: Phaser.GameObjects.Text[],\r\n  hide: boolean,\r\n) => {\r\n  const alphaValue = hide ? 0 : 1;\r\n  axes.forEach((value) => value.setAlpha(alphaValue));\r\n};\r\n","import Main from \"../../scenes/Main\";\r\nimport { AxesConfig, AxesTypes } from \"../../types\";\r\nimport { axesTextReset, axesTextSwitch, createAxes } from \"./calculates\";\r\n\r\nconst axesColors = {\r\n  white: \"#555476\",\r\n  dark: \"#bd9cff\",\r\n};\r\n\r\nconst calcTime = (time: number) => {\r\n  return time % 2 === 0;\r\n};\r\n\r\nexport const axesConfig: AxesConfig = {\r\n  payoutValues: [0.2, 0.4, 0.6, 0.9, 1],\r\n  textValues: [1, 0.8, 0.6, 0.4, 0.2, \"0\"],\r\n  xMultiplier: [0.966, 0.83, 0.664, 0.498, 0.332, 0.166],\r\n  yMultiplier: [1, 0.8, 0.6, 0.4, 0.2],\r\n  defaultPayout: 1,\r\n  defaultTime: 10,\r\n};\r\n\r\nexport default class Axes {\r\n  scene: Main;\r\n  axes: AxesTypes = {\r\n    x: [],\r\n    y: [],\r\n  };\r\n\r\n  state = {\r\n    payoutSeparation: 0,\r\n    dotStyle: {\r\n      fontFamily: \"Gilroy, sans-serif\",\r\n      fontWeight: \"800\",\r\n      fontSize: \"20px\",\r\n      color: axesColors.dark,\r\n    },\r\n    millisecondsSeparation: 0,\r\n  };\r\n\r\n  deactivated = false;\r\n\r\n  constructor(scene: Main) {\r\n    this.scene = scene;\r\n  }\r\n\r\n  create() {\r\n    this.axes.y = createAxes(\"y\", this.scene);\r\n    this.axes.x = createAxes(\"x\", this.scene);\r\n  }\r\n\r\n  draw(timestamp: number) {\r\n    let payout = this.scene.parameters.calculatedGamePayout - 1;\r\n\r\n    if (\r\n      this.state.dotStyle.color !== axesColors[this.scene.state.engine.theme]\r\n    ) {\r\n      this.state.dotStyle.color = axesColors[this.scene.state.engine.theme];\r\n\r\n      for (const key in this.axes) {\r\n        //@ts-ignore\r\n        const axes: Phaser.GameObjects.Text[] = this.axes[key];\r\n        axes?.forEach((text) => {\r\n          text.setColor(this.state.dotStyle.color);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.deactivated || payout < 1 || calcTime(Math.round(timestamp))) {\r\n      return;\r\n    }\r\n\r\n    this.axes.y.forEach((text, i) => {\r\n      let payoutValue = axesConfig.payoutValues[i];\r\n\r\n      if (typeof payoutValue === \"number\") {\r\n        switch (i) {\r\n          case 0:\r\n            payoutValue *= 0.3;\r\n            break;\r\n\r\n          case 1:\r\n            payoutValue *= 0.7;\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (typeof payoutValue === \"number\") {\r\n        text.setText(`${(payout * payoutValue + 1).toFixed(2)}x`);\r\n      }\r\n    });\r\n\r\n    let time = this.scene.parameters.currentTime / 1000;\r\n    if (time > 10) {\r\n      this.axes.x.forEach((text, i) => {\r\n        const payoutValue = axesConfig.textValues[i];\r\n        if (typeof payoutValue === \"number\") {\r\n          text.setText((time * payoutValue).toFixed(0));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.deactivated = true;\r\n    axesTextReset(\"y\", this.axes.y);\r\n    axesTextReset(\"x\", this.axes.x);\r\n    axesTextSwitch(this.axes.y, true);\r\n    axesTextSwitch(this.axes.x, true);\r\n  }\r\n  show() {\r\n    this.deactivated = false;\r\n    axesTextSwitch(this.axes.y, false);\r\n    axesTextSwitch(this.axes.x, false);\r\n  }\r\n}\r\n","import Main from \"../scenes/Main\";\r\n\r\nconst defaultTimeValue = 6;\r\n\r\nlet counter = 1;\r\n\r\nexport default class PayoutText {\r\n  scene: Main;\r\n  isLocal: boolean;\r\n  startedTime: number;\r\n\r\n  textElement: HTMLTitleElement | null = document.getElementById(\r\n    \"crash-payout-text\",\r\n  ) as HTMLTitleElement;\r\n  timeToStart = -1;\r\n  defaultTimeValue = 6;\r\n\r\n  constructor(scene: Main, isLocal: boolean) {\r\n    this.scene = scene;\r\n    this.isLocal = isLocal;\r\n    this.startedTime = Date.now();\r\n\r\n    if (this.textElement) {\r\n      const list = this.textElement.classList;\r\n      const newClass = isLocal ? \"canvasTextGilroy\" : \"canvasTextVarela\";\r\n\r\n      if (!list.contains(newClass)) {\r\n        list.add(newClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  createPayoutText(calculatedValue: string | number, twoNumbers?: boolean) {\r\n    const calculatedPayout = Number(calculatedValue).toFixed(2);\r\n    if (!this.isLocal) {\r\n      const lastAmount = twoNumbers ? 2 : 1;\r\n      const realPayout = Number(this.scene.parameters.webGamePayout).toFixed(2);\r\n      const firstPayoutNumbers = realPayout.slice(\r\n        0,\r\n        realPayout.length - lastAmount,\r\n      );\r\n      const lastPayoutNumber = calculatedPayout.slice(\r\n        calculatedPayout.length - lastAmount,\r\n        calculatedPayout.length,\r\n      );\r\n\r\n      return `${firstPayoutNumbers}${lastPayoutNumber}`;\r\n    }\r\n\r\n    return calculatedPayout;\r\n  }\r\n\r\n  draw() {\r\n    if (this.textElement) {\r\n      switch (this.scene.parameters.gameCircle) {\r\n        case \"loading\":\r\n          this.textElement.style.left = \"auto\";\r\n          break;\r\n\r\n        case \"update_value\":\r\n          if (\r\n            !this.isLocal &&\r\n            this.scene.parameters.currentTime !== 0 &&\r\n            !this.textElement.classList.contains(\"crashGameAnimation\")\r\n          ) {\r\n            //text animation settings\r\n            this.textElement.style.animationDelay = `-${this.scene.parameters.currentTime}ms`;\r\n            this.textElement.classList.add(\"crashGameAnimation\");\r\n          }\r\n          if (this.timeToStart !== defaultTimeValue) {\r\n            this.timeToStart = defaultTimeValue;\r\n          }\r\n\r\n          let textUpdate = \"\";\r\n          if (\r\n            !this.isLocal &&\r\n            Number(this.scene.parameters.webGamePayout) < 3\r\n          ) {\r\n            textUpdate = `${this.scene.parameters.webGamePayout}x`;\r\n          } else {\r\n            textUpdate = `${this.createPayoutText(\r\n              this.scene.parameters.calculatedGamePayout,\r\n              !this.isLocal && Number(this.scene.parameters.webGamePayout) > 30,\r\n            )}x`;\r\n          }\r\n\r\n          if (this.textElement.innerHTML !== textUpdate) {\r\n            this.textElement.innerHTML = textUpdate;\r\n          }\r\n\r\n          break;\r\n\r\n        case \"crashed\":\r\n          counter = 0;\r\n          const text = `Crashed @ ${\r\n            !this.isLocal\r\n              ? this.scene.parameters.webGamePayout\r\n              : this.scene.parameters.calculatedGamePayout.toFixed(2)\r\n          }x`;\r\n          if (this.textElement.innerHTML !== text) {\r\n            this.textElement.innerHTML = text;\r\n          }\r\n          this.timeToStart = -1;\r\n          this.textElement.classList.remove(\"crashGameAnimation\");\r\n          this.textElement.style.left = \"auto\";\r\n          break;\r\n\r\n        case \"new_round\":\r\n          this.scene.parameters.calculatedGamePayout = 1;\r\n\r\n          this.timeToStart = this.isLocal\r\n            ? Date.now() - this.startedTime\r\n            : Date.now() - this.scene.state.socket.state.newRoundTime;\r\n\r\n          const startTextValue = !this.isLocal\r\n            ? ++counter * 0.11\r\n            : Math.abs(\r\n                Number(this.defaultTimeValue / 2 - this.timeToStart / 1000),\r\n              );\r\n\r\n          const startText = `Starts in ${this.createPayoutText(\r\n            startTextValue,\r\n          )}`;\r\n\r\n          if (this.timeToStart < 0) {\r\n            this.timeToStart = 0;\r\n          }\r\n\r\n          if (this.textElement.innerHTML !== startText)\r\n            this.textElement.innerHTML = startText;\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (this.isLocal) {\r\n        // text alignment for /crash-promo\r\n\r\n        const elementLength =\r\n          this.textElement.innerHTML.match(/[^\\s]/g)?.length || 0;\r\n\r\n        const elementFontSize = parseFloat(\r\n          window\r\n            .getComputedStyle(this.textElement)\r\n            .getPropertyValue(\"font-size\"),\r\n        );\r\n\r\n        const letterSize = elementFontSize / 2;\r\n\r\n        let width = elementLength ? (elementLength / 2) * letterSize : 0;\r\n\r\n        if (this.timeToStart <= 0.1 && this.timeToStart !== -1) {\r\n          width = 0;\r\n          this.textElement.style.transform = `translateX(-50%)`;\r\n          this.textElement.style.left = \"\";\r\n        } else {\r\n          this.textElement.style.transform = ``;\r\n        }\r\n\r\n        this.textElement.style.left = `calc(50% - ${width}px)`;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { crashSocketsList } from \"pages/Crash/crashSocketWatcher\";\r\nimport { between } from \"utils\";\r\nimport { isDevelop } from \"utils/isDevelopment\";\r\n\r\nimport Main from \"../../scenes/Main\";\r\nimport calculateCashoutButton from \"./calculateCashoutButton\";\r\nimport { GameCircleListenerTypes } from \"./listenerTypes\";\r\n\r\nconst isDevelopment = isDevelop();\r\n\r\nexport default class Listener {\r\n  scene: Main;\r\n  isLocal: boolean;\r\n  socketStarted = false;\r\n  isTimeSet = false;\r\n\r\n  state = {\r\n    currentTime: -1,\r\n    currentValue: 1,\r\n    newRoundTime: -1,\r\n    startedTime: 0,\r\n    process: \"update_value\",\r\n    path: window.location.pathname,\r\n  };\r\n\r\n  between = isDevelopment ? 9500 : between(7000, 10000) / 100; // between 80 and 100\r\n\r\n  constructor(scene: Main, isLocal: boolean) {\r\n    this.scene = scene;\r\n    this.isLocal = isLocal;\r\n  }\r\n\r\n  listener() {\r\n    if (this.isLocal) {\r\n      // Local logic\r\n      if (Number(3 - this.scene.state.payoutText.timeToStart / 1000) <= 0) {\r\n        this.scene.parameters.gameCircle = \"update_value\";\r\n        this.scene.state.payoutText.timeToStart = -1;\r\n        this.state.startedTime = this.scene.savedTime = Date.now();\r\n      }\r\n\r\n      if (this.scene.parameters.gameCircle === \"update_value\") {\r\n        if (this.scene.parameters.calculatedGamePayout >= this.between) {\r\n          this.scene.state.payoutText.timeToStart = -1;\r\n          this.state.currentValue = this.between;\r\n          this.scene.parameters.gameCircle = \"crashed\";\r\n        }\r\n      }\r\n    }\r\n\r\n    switch (this.scene.parameters.gameCircle) {\r\n      case \"crashed\":\r\n        this.scene.parameters.calculatedGamePayout = this.state.currentValue;\r\n        this.state.newRoundTime = -1;\r\n        if (!this.scene.parameters.isGameHidden) {\r\n          this.scene.crashed();\r\n        }\r\n        break;\r\n\r\n      case \"update_value\":\r\n        this.scene.savedTime = this.state.startedTime;\r\n        if (\r\n          this.scene.parameters.isGameHidden &&\r\n          this.state.currentValue >= 1.01\r\n        ) {\r\n          this.scene.restart();\r\n        }\r\n\r\n        calculateCashoutButton(Number(this.scene.parameters.webGamePayout));\r\n        break;\r\n\r\n      case \"new_round\":\r\n        if (!this.scene.parameters.isGameHidden) {\r\n          this.scene.crashed();\r\n        }\r\n        break;\r\n\r\n      case \"start_game\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getMessages() {\r\n    if (!this.isLocal) {\r\n      const gameCircleListener = (data: GameCircleListenerTypes) => {\r\n        switch (data.method) {\r\n          case \"update_value\":\r\n            if (this.scene.parameters.gameCircle !== data.method) {\r\n              this.scene.parameters.gameCircle = data.method;\r\n              this.state.currentTime = Number(data.actualGameTime);\r\n              this.state.currentValue = Number(data.value);\r\n              this.state.startedTime = data.startedTime;\r\n            }\r\n            this.scene.parameters.webGamePayout = data.value;\r\n            break;\r\n          case \"crashed\":\r\n            if (this.scene.parameters.gameCircle !== data.method) {\r\n              this.scene.parameters.gameCircle = data.method;\r\n              this.state.currentValue = Number(data.value);\r\n            }\r\n            this.scene.parameters.webGamePayout = data.value;\r\n\r\n            break;\r\n          case \"new_round\":\r\n            if (this.scene.parameters.gameCircle !== data.method) {\r\n              this.scene.parameters.gameCircle = data.method;\r\n\r\n              if (this.state.newRoundTime === -1) {\r\n                this.state.newRoundTime = data.time;\r\n                this.scene.state.payoutText.defaultTimeValue = Number(\r\n                  data.value,\r\n                );\r\n              }\r\n            }\r\n            this.scene.parameters.webGamePayout = data.value;\r\n            break;\r\n\r\n          case \"start_game\":\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      };\r\n\r\n      crashSocketsList.gameCircleListener = gameCircleListener;\r\n      crashSocketsList.gameUsersListener =\r\n        this.scene.state.users.createPlayerListener();\r\n    } else {\r\n      this.scene.parameters.gameCircle = \"new_round\";\r\n      this.state.currentValue = 6;\r\n    }\r\n  }\r\n}\r\n","import { track } from \"utils\";\r\n\r\nexport default function calculateButton(GamePayout: number) {\r\n  const calculateButtonTextElement =\r\n    document.querySelector(\".crash-pay-button\");\r\n\r\n  try {\r\n    if (calculateButtonTextElement) {\r\n      const localAmt = localStorage.getItem(\"crashBet\");\r\n\r\n      if (localAmt) {\r\n        const amount = JSON.parse(localAmt);\r\n        const count =\r\n          Number(amount.amt) * Number(GamePayout) - Number(amount.amt);\r\n\r\n        const content = `${Number(count).toFixed(8)} ${amount.coin}`;\r\n\r\n        calculateButtonTextElement.innerHTML = content;\r\n      } else {\r\n        // console.log(\"cashout button error localAmt: \", localAmt);\r\n      }\r\n    } else {\r\n      // console.log(\"cashout button error button: \", calculateButtonTextElement);\r\n    }\r\n  } catch (error) {\r\n    const message = `\r\n      ${error?.stack}\r\n      calculateButton\r\n      localStorage: ${JSON.stringify(localStorage)}`;\r\n\r\n    // console.log(\"cashout button error catch: \", message);\r\n\r\n    try {\r\n      track()?.errors(message);\r\n    } catch {\r\n      console.log(\"🚀 trackError\", error);\r\n    }\r\n  }\r\n}\r\n","import { CurrentBetsState } from \"pages/Crash/crashTypes\";\r\nimport { replaceNumbers, track } from \"utils\";\r\nimport Main from \"../../scenes/Main\";\r\nimport { PlayedUser, PlayerList, WinnersList } from \"../../types\";\r\nimport { GameUsersListenerTypes } from \"../SocketListener/listenerTypes\";\r\n\r\ninterface Winner {\r\n  at: string | number;\r\n  id: string | number;\r\n}\r\n\r\nlet newWinner: Winner | null = null,\r\n  newListenerUserList: PlayerList = {};\r\n\r\nconst addNewPlayers = (users: CurrentBetsState) => {\r\n    newListenerUserList = {};\r\n    for (const key in users) {\r\n      const bet = users[key];\r\n      if (bet) {\r\n        newListenerUserList[bet.user_id] = {\r\n          //@ts-ignore\r\n          profit: bet.profit || null,\r\n          user_id: bet.user_id,\r\n          user_name: bet.user_name,\r\n          cashed_out_at: bet.cashed_out_at || \"\",\r\n        };\r\n      }\r\n    }\r\n  },\r\n  addNewWinner = (id: string | number, at: string | number) => {\r\n    newWinner = {\r\n      at,\r\n      id,\r\n    };\r\n  },\r\n  addNewPlayer = (value: PlayedUser) => {\r\n    newListenerUserList[value.user_id] = value;\r\n  };\r\n\r\nexport default class Users {\r\n  scene: Main;\r\n  listenerUserList: PlayerList = {};\r\n\r\n  winnersUsers: WinnersList = {};\r\n\r\n  winnerList: {\r\n    [id: string]: Winner;\r\n  } = {};\r\n\r\n  userTextStyles = {\r\n    fontSize: \"0.625rem\",\r\n    color: \"white\",\r\n  };\r\n\r\n  constructor(scene: Main) {\r\n    this.scene = scene;\r\n  }\r\n\r\n  watch() {\r\n    this.playersListListener();\r\n    this.newWinnerListener();\r\n    this.winnersListener();\r\n\r\n    if (this.scene.parameters.gameCircle === \"crashed\") {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    for (const id in this.winnersUsers) {\r\n      if (this.winnersUsers[id]) {\r\n        this.winnersUsers[id].body?.destroy();\r\n        delete this.winnersUsers[id];\r\n        delete this.winnerList[id];\r\n      }\r\n    }\r\n\r\n    newWinner = null;\r\n    newListenerUserList = {};\r\n    this.winnerList = {};\r\n  }\r\n\r\n  playersListListener() {\r\n    if (newListenerUserList !== this.listenerUserList) {\r\n      for (const id in this.listenerUserList) {\r\n        const user = this.winnersUsers[id];\r\n        if (user) {\r\n          user.body?.destroy();\r\n          delete this.winnersUsers[id];\r\n          delete this.winnerList[id];\r\n        }\r\n      }\r\n\r\n      this.listenerUserList = newListenerUserList;\r\n    }\r\n  }\r\n\r\n  newWinnerListener() {\r\n    if (newWinner) {\r\n      this.winnerList[newWinner.id] = newWinner;\r\n      newWinner = null;\r\n    }\r\n  }\r\n\r\n  winnersListener() {\r\n    Object.values(this.winnerList).forEach(({ at, id }) => {\r\n      const user = this.listenerUserList[id];\r\n      const coordinates = this.scene.state.graph?.currentGraphPosition;\r\n      if (user && coordinates && !this.winnersUsers[id]?.body) {\r\n        const [x, y] = coordinates;\r\n        const { height, width } = this.scene.game.config;\r\n        const body = this.scene.add\r\n          .text(\r\n            x > Number(width) / 2 ? x - 50 : x + 100,\r\n            y,\r\n            `${user.user_name} @${replaceNumbers(`${at}`)}x`,\r\n            this.userTextStyles,\r\n          )\r\n          .setOrigin(1, 0.5);\r\n        const tween = this.scene.tweens.add({\r\n          targets: body,\r\n          y: height,\r\n          x: 100,\r\n          alpha: 0,\r\n          duration: 2500,\r\n          ease: \"Cubic.easeIn\",\r\n        });\r\n\r\n        tween.on(\"complete\", () => {\r\n          try {\r\n            body?.destroy();\r\n            delete this.winnersUsers[id];\r\n            delete this.winnerList[id];\r\n          } catch (err) {\r\n            const msg = `\r\n              error on tween destroy:\r\n              user: ${this.winnersUsers[id].user_name} /\r\n              ${JSON.stringify(this.winnersUsers)}\r\n            `;\r\n            console.error(msg);\r\n\r\n            track()?.errors(err, {\r\n              custom: {\r\n                errorMessage: msg,\r\n              },\r\n            });\r\n          }\r\n        });\r\n\r\n        this.winnersUsers[id] = {\r\n          ...user,\r\n          y,\r\n          body,\r\n          tween,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  createPlayerListener() {\r\n    return (data: GameUsersListenerTypes) => {\r\n      switch (data.method) {\r\n        case \"current_bets\":\r\n          addNewPlayers(data.bets);\r\n          break;\r\n\r\n        case \"bet_cashedout_update\":\r\n          addNewWinner(data.user_id, data.at);\r\n          break;\r\n\r\n        case \"new_bet\":\r\n          addNewPlayer(data.bet);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n}\r\n","const data = [\r\n  {\r\n    method: \"image\",\r\n    data: [[\"head\", \"/assets/crash/imgs/head.png\"]],\r\n  },\r\n  {\r\n    method: \"css\",\r\n    data: [[\"Gilroy\", \"/assets/crash/css/crash.css\"]],\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import { Scene } from \"phaser\";\r\nimport Engine from \"../..\";\r\nimport { AddObject, SimpleObject } from \"../../types\";\r\n\r\nexport default function objectsAdd(this: SimpleObject, data: AddObject[]) {\r\n  data.forEach(({ name, data }) => {\r\n    this[name] = data;\r\n  });\r\n}\r\n","import { Scene } from \"phaser\";\r\nimport { PreloadTypes } from \"../../types\";\r\n\r\nexport function preloadData(this: Scene, data: PreloadTypes[]) {\r\n  data.forEach((unit) => {\r\n    const { method, data } = unit;\r\n\r\n    data.forEach((content) => {\r\n      // @ts-ignore: Unreachable code error\r\n      const result = this.load[method](...content);\r\n    });\r\n  });\r\n}\r\n","import objectsAdd from \"./modules/loader/objectsAdd\";\r\nimport { preloadData } from \"./modules/loader/preloadData\";\r\nimport Main from \"./scenes/Main\";\r\nimport { Loader, SimpleObject } from \"./types\";\r\n\r\nexport default class Engine {\r\n  scene: Main;\r\n  loader: Loader;\r\n  objects: SimpleObject;\r\n  fpsDomObject?: Element | null;\r\n\r\n  calculateValues: SimpleObject = {\r\n    YAxisSizeMultiplier: 2,\r\n    XAxisPlotMinValue: 10000,\r\n  };\r\n  theme: \"white\" | \"dark\" = \"dark\";\r\n  onlineStatus: \"online\" | \"offline\" = \"online\";\r\n\r\n  constructor(scene: Main) {\r\n    this.scene = scene;\r\n    this.objects = {};\r\n    this.loader = {\r\n      preload: preloadData.bind(this.scene),\r\n      addObjects: objectsAdd.bind(this.objects),\r\n    };\r\n\r\n    const colorScheme = localStorage.getItem(\"color-scheme\");\r\n\r\n    if (colorScheme === \"light\") {\r\n      this.theme = \"white\";\r\n    } else {\r\n      this.theme = \"dark\";\r\n    }\r\n  }\r\n\r\n  showFps(disable = false) {\r\n    if (disable) {\r\n      return;\r\n    }\r\n\r\n    const dom = this.fpsDomObject;\r\n\r\n    if (!dom) {\r\n      this.fpsDomObject = document.querySelector(\"#crashFPS\");\r\n    } else {\r\n      let fps = this.scene.game.loop.actualFps;\r\n      dom.innerHTML = fps.toFixed(1);\r\n    }\r\n  }\r\n\r\n  calcGamePayout(t: number, isLocal?: boolean) {\r\n    let payout = (100 * Math.exp(0.00006 * t)) / 100;\r\n    if (payout >= 1.01) {\r\n      this.scene.restart();\r\n    }\r\n\r\n    const webPayout = Number(this.scene.parameters.webGamePayout);\r\n\r\n    if (payout >= 1.01 && payout - webPayout > 0.5) {\r\n      payout = !isLocal ? webPayout : payout;\r\n    }\r\n\r\n    return payout;\r\n  }\r\n}\r\n","import { Scene } from \"phaser\";\r\n\r\nimport Axes from \"../entities/Axes\";\r\nimport Graph from \"../entities/Graph\";\r\nimport { GamePages } from \"../entities/Graph/graphTypes\";\r\nimport PayoutText from \"../entities/PayoutText\";\r\nimport SocketListener from \"../entities/SocketListener\";\r\nimport Users from \"../entities/Users\";\r\n\r\nimport addObjectsConfig from \"../datas/addObjects\";\r\nimport preloadData from \"../datas/preloadData\";\r\nimport { MainParameters, SceneState } from \"../types\";\r\nimport Engine from \"..\";\r\nimport Video from \"../entities/Video\";\r\n\r\nconst startY = 10,\r\n  startX = 40;\r\nconst isDevelopment = process.env.NODE_ENV === \"development\";\r\n\r\nexport default class Main extends Scene {\r\n  state: SceneState;\r\n  savedTime = -1;\r\n\r\n  parameters: MainParameters = {\r\n    plotHeight: startY,\r\n    plotWidth: startX,\r\n    xStart: startX,\r\n    yStart: startY,\r\n    gameCircle: \"loading\",\r\n\r\n    calculatedGamePayout: 1,\r\n    webGamePayout: 0,\r\n\r\n    heightIncrement: 0,\r\n    currentTime: 0,\r\n    widthIncrement: 0,\r\n\r\n    isGameHidden: false,\r\n  };\r\n\r\n  isLocal = window.location.pathname === GamePages.promo;\r\n\r\n  constructor(config: string) {\r\n    super(config);\r\n\r\n    this.state = {\r\n      engine: new Engine(this),\r\n      payoutText: new PayoutText(this, this.isLocal),\r\n      axes: new Axes(this),\r\n      socket: new SocketListener(this, this.isLocal),\r\n      users: new Users(this),\r\n      videos: new Video(this),\r\n    };\r\n  }\r\n\r\n  preload() {\r\n    this.parameters.plotHeight = Number(this.game.config.height) - startY;\r\n    this.parameters.plotWidth = Number(this.game.config.width) - startX;\r\n\r\n    this.state.engine.loader.preload(preloadData);\r\n\r\n    this.state.axes.create();\r\n    this.state.axes.hide();\r\n  }\r\n  create() {\r\n    this.state.graph = new Graph(this);\r\n    this.state.socket.getMessages();\r\n\r\n    this.crashed();\r\n\r\n    const canvas = this.game.canvas;\r\n    canvas.style.opacity = \"1\";\r\n  }\r\n  update(time: number, delta: number) {\r\n    this.state.videos.listener(\r\n      this.parameters.gameCircle,\r\n      this.parameters.calculatedGamePayout,\r\n    );\r\n    this.state.graph?.draw();\r\n    if (isDevelopment) {\r\n      this.state.engine.showFps();\r\n    }\r\n\r\n    this.state.axes?.draw(time);\r\n    this.state.payoutText.draw();\r\n\r\n    this.timeCalculate();\r\n    this.parameters.calculatedGamePayout = this.state.engine.calcGamePayout(\r\n      this.parameters.currentTime,\r\n      this.isLocal,\r\n    );\r\n\r\n    this.state.socket.listener();\r\n    this.state.users.watch();\r\n  }\r\n\r\n  timeCalculate() {\r\n    if (this.parameters.gameCircle !== \"update_value\") {\r\n      this.savedTime = -1;\r\n      return;\r\n    }\r\n    if (this.savedTime > 0) {\r\n      const actualTime = Date.now();\r\n      let currentGameTime = actualTime - this.savedTime;\r\n      this.parameters.currentTime = currentGameTime;\r\n    } else {\r\n      if (this.savedTime === 0) this.savedTime = Date.now();\r\n    }\r\n  }\r\n\r\n  crashed() {\r\n    this.state.graph?.hide();\r\n    this.savedTime = -1;\r\n    this.parameters.currentTime = 0;\r\n    this.state.axes?.hide();\r\n\r\n    this.parameters.isGameHidden = true;\r\n  }\r\n\r\n  restart() {\r\n    this.state.graph?.show();\r\n    this.state.axes?.show();\r\n\r\n    this.parameters.isGameHidden = false;\r\n  }\r\n}\r\n","import Main from \"../engine/scenes/Main\";\r\n\r\nexport const config: Phaser.Types.Core.GameConfig = {\r\n  type: Phaser.AUTO,\r\n  scene: [Main],\r\n  // scale: {\r\n  //   mode: Phaser.Scale.FIT,\r\n  //   autoCenter: Phaser.Scale.NO_CENTER,\r\n  // },\r\n  width: 1080,\r\n  height: 500,\r\n  parent: \"crash-app-box\",\r\n\r\n  dom: {\r\n    createContainer: false,\r\n  },\r\n  audio: {\r\n    disableWebAudio: true,\r\n  },\r\n  disableContextMenu: false,\r\n  backgroundColor: \"#150a30\",\r\n  // backgroundColor: \"#0090c9\",\r\n  transparent: false,\r\n};\r\n","import React from \"react\";\r\n\r\nimport { repeat } from \"utils\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const Lines = () => {\r\n  return (\r\n    <section className={css.lines}>\r\n      <div className={css.linesBox}>\r\n        {repeat(11, (i) => (\r\n          <div className={css.line} key={`lineNumber_${i}`} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  FC,\r\n  Suspense,\r\n  CSSProperties,\r\n  useLayoutEffect,\r\n} from \"react\";\r\n\r\nimport {\r\n  crashSocket,\r\n  createTimeouts,\r\n  isKeyboardEvent,\r\n  rangeBetween,\r\n} from \"utils\";\r\nimport { useDocumentLoaded, useEventListener, useVisibility } from \"hooks\";\r\nimport { useChat, useOnline, useWhiteTheme, useWindowSize } from \"providers\";\r\n\r\nimport Loader from \"config/LazyComponentLoader\";\r\nimport { Lines } from \"./components\";\r\nimport { config } from \"./game/data/config\";\r\nimport css from \"./crash.module.css\";\r\nconst Game = React.lazy(() => Loader(import(\"./game/Game\")));\r\n\r\nconst crashPadding = 10;\r\n\r\ninterface Props {\r\n  isShowEffects: boolean;\r\n}\r\n\r\nlet withoutCrashGame = false;\r\n//@ts-ignore\r\nwindow.disableCrashRender = () => {\r\n  withoutCrashGame = !withoutCrashGame;\r\n};\r\n\r\nconst { clearTimeouts, pushTimeout } = createTimeouts();\r\n\r\nconst Crash: FC<Props> = ({ isShowEffects }) => {\r\n  const boxRef = useRef<HTMLDivElement | null>(null);\r\n  const [render, setRender] = useState(false);\r\n  const [scaleParams, setScaleParams] = useState<{\r\n    wrapperStyles: CSSProperties;\r\n    scale: number;\r\n  }>();\r\n\r\n  const isOnline = useOnline();\r\n  const { isWhiteThemeActive } = useWhiteTheme();\r\n  const isLoaded = useDocumentLoaded();\r\n  const { isHidden } = useVisibility();\r\n  const { width } = useWindowSize();\r\n  const { isHide } = useChat();\r\n\r\n  const calculateScaleParams = (node = boxRef.current) => {\r\n    const { width, height } = config;\r\n    const { offsetWidth } = node || {};\r\n\r\n    const scale = Math.min(\r\n      ((offsetWidth || 0) - crashPadding * 2) / Number(width),\r\n      1,\r\n    );\r\n\r\n    setScaleParams({\r\n      wrapperStyles: {\r\n        height: rangeBetween((Number(height) || 150) * scale, 150, 500),\r\n      },\r\n      scale,\r\n    });\r\n  };\r\n\r\n  const startResize = (time = 300) => {\r\n    clearTimeouts();\r\n    setRender(false);\r\n\r\n    pushTimeout(() => {\r\n      setRender(true);\r\n    }, time);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    calculateScaleParams();\r\n    startResize(500);\r\n  }, [\r\n    isOnline,\r\n    isWhiteThemeActive,\r\n    isLoaded,\r\n    isHidden,\r\n    width,\r\n    isHide,\r\n    isShowEffects,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    calculateScaleParams();\r\n  }, [render]);\r\n\r\n  crashSocket.errorDispatch(\"app_reRender\", (event: any) => {\r\n    setRender(false);\r\n\r\n    console.log(\r\n      `Socket is stopped.\r\n        Reason: ${event.reason}\r\n        Code: ${event.code}`,\r\n    );\r\n\r\n    const interval = setInterval(() => {\r\n      const status = crashSocket.status();\r\n      if (status === 1) {\r\n        startResize();\r\n\r\n        clearInterval(interval);\r\n      }\r\n    }, 50);\r\n  });\r\n\r\n  useEventListener(\"keypress\", (event) => {\r\n    if (isKeyboardEvent(event) && event.key === \"*\" && event.shiftKey) {\r\n      console.log(\r\n        \"isOnline | scaleParams | render\",\r\n        isOnline,\r\n        scaleParams,\r\n        render,\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={boxRef}\r\n      className={css.box}\r\n      id=\"crash-wrapper\"\r\n      style={scaleParams?.wrapperStyles}>\r\n      {!withoutCrashGame && isLoaded && (\r\n        <Suspense fallback={<div style={{ height: 100 }} />}>\r\n          <Game\r\n            render={isOnline && scaleParams && render}\r\n            scale={scaleParams?.scale}\r\n          />\r\n        </Suspense>\r\n      )}\r\n      <Lines />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crash;\r\n"],"sourceRoot":""}