{"version":3,"sources":["pages/SlotPage/components/GameBlock/components/Header/style.module.scss","pages/SlotPage/components/GameBlock/style.module.scss","pages/SlotPage/components/Info/style.module.scss","pages/SlotPage/style.module.scss","pages/SlotPage/components/GameBlock/components/Header/index.tsx","pages/SlotPage/components/GameBlock/index.tsx","pages/SlotPage/components/Info/index.tsx","pages/SlotPage/index.tsx","pages/SlotPage/utils/getGameId.ts","pages/SlotPage/utils/getGamesList.ts"],"names":["module","exports","Header","provider","history","useHistory","className","css","header","button","onClick","goBack","to","Game","React","lazy","LazyComponentLoader","GameBlock","gameName","useParams","selectedCoin","useCoins","useLocalStorage","token","useState","getGameInfoFromSearch","gameInfo","setGameInfo","incomeProvider","setIncomeProvider","gameData","setGameData","isRealPlay","setIsRealPlay","favorites","setFavorites","isLiked","setIsLiked","getSession","a","sessionCoin","coin","fetchBase","variables","game_id","id","data","error","notifyBarManager","message","timeOut","track","errors","console","useEffect","root","fallback","changeFreePlay","value","url","session_url","maxProfit","slots_max_profit","gameId","defaultTitle","title","Info","locale","useLocale","description","likes","type","name","info","setInfo","language","do_i_like_it","provider_name","getData","Helmet","defaultGameTitle","titleWrapper","decoration","position","clsx","text","SlotPage","gamesList","setGamesList","getGamesList","classes","statisticsWrapper","allLink","cardSize","rows","mobile","cardsAmount","rowsAmount","triggerSize","map","image_url","img","about","search","oldId","newId","split","find","findId","replace","setGames","games"],"mappings":"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","file":"static/js/66.0912d13b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"header\":\"style_header__1tRYT\",\"button\":\"style_button__2pYAU\",\"provider\":\"style_provider__2B8qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"css\":\"style_css__uA33R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3FkBW\",\"titleWrapper\":\"style_titleWrapper__vQLNE\",\"text\":\"style_text__1r3iW\",\"type\":\"style_type__e-zpu\",\"description\":\"style_description__2pQHB\",\"decoration\":\"style_decoration__1Ox0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__1CdSi\",\"statisticsWrapper\":\"style_statisticsWrapper__3cOEF\"};","import React, { FC } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { ReactComponent as Left } from \"assets/icons/chevron-left.svg\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  provider?: string;\r\n}\r\n\r\nexport const Header: FC<Props> = ({ provider }) => {\r\n  const history = useHistory();\r\n  const goBack = () => {};\r\n\r\n  return (\r\n    <div className={css.header}>\r\n      <span className={css.button} onClick={() => history.goBack()}>\r\n        {/* <span className={css.button} onClick={() => history.push(\"/slot-games\")}> */}\r\n        <Left /> Back\r\n      </span>\r\n\r\n      <Link to={`slot-games?provider=${provider}`} className={css.provider}>\r\n        By\r\n        <strong>{` ${provider} `}</strong>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, Suspense, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { useCoins, useLocalStorage } from \"hooks\";\r\nimport { notifyBarManager } from \"components\";\r\nimport { fetchBase, track } from \"utils\";\r\n\r\nimport LazyComponentLoader from \"config/LazyComponentLoader\";\r\nimport { OpenedSlotGame } from \"pages/SlotGames/types\";\r\n\r\nimport { getGameInfoFromSearch } from \"../../utils\";\r\nimport { Header } from \"./components\";\r\nimport { Info } from \"../\";\r\nimport css from \"./style.module.scss\";\r\n\r\nconst Game = React.lazy(() => LazyComponentLoader(import(\"./components/Game\")));\r\n\r\nexport const GameBlock: FC = () => {\r\n  const history = useHistory();\r\n  const { gameName } = useParams<{ gameName: string }>();\r\n  const { selectedCoin } = useCoins();\r\n  const [token] = useLocalStorage(\"token\");\r\n\r\n  const [gameInfo, setGameInfo] = useState(getGameInfoFromSearch(gameName, \"\"));\r\n  const [incomeProvider, setIncomeProvider] = useState<string | null>(null);\r\n\r\n  const [gameData, setGameData] = useState<OpenedSlotGame | null>(null);\r\n  const [isRealPlay, setIsRealPlay] = useState<boolean | null>(null);\r\n  const [favorites, setFavorites] = useState(0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n\r\n  const getSession = async () => {\r\n    const sessionCoin = !isRealPlay ? \"GEM\" : selectedCoin?.coin || \"GEM\";\r\n\r\n    const { data, error } = await fetchBase<OpenedSlotGame>(\r\n      \"slots/create-session\",\r\n      {\r\n        variables: {\r\n          token: token,\r\n          game_id: gameInfo?.id,\r\n          coin: sessionCoin,\r\n        },\r\n      },\r\n    );\r\n\r\n    if (data) {\r\n      setGameData(data);\r\n    }\r\n\r\n    if (error) {\r\n      try {\r\n        notifyBarManager.error({\r\n          message: error,\r\n          timeOut: 5000,\r\n        });\r\n        history.goBack();\r\n      } catch (error) {\r\n        track()?.errors(error);\r\n\r\n        console.error(error);\r\n        history.goBack();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameInfo && typeof isRealPlay === \"boolean\") {\r\n      getSession();\r\n    }\r\n  }, [token, selectedCoin?.coin, gameInfo, isRealPlay]);\r\n\r\n  useEffect(() => {\r\n    const data = getGameInfoFromSearch(gameName, gameInfo?.id || \"\");\r\n\r\n    if (data) {\r\n      setGameInfo(data);\r\n    }\r\n  }, [gameName]);\r\n\r\n  const changeFreePlay = (value: boolean) => setIsRealPlay(value);\r\n  return (\r\n    <div className={css.root}>\r\n      <Header provider={incomeProvider || gameInfo?.provider} />\r\n      <Suspense fallback={null}>\r\n        <Game\r\n          changeFreePlay={changeFreePlay}\r\n          isRealPlay={isRealPlay}\r\n          url={gameData?.session_url}\r\n          maxProfit={gameData?.slots_max_profit}\r\n          favorites={favorites}\r\n          gameId={gameInfo?.id}\r\n          isLiked={isLiked}\r\n          setIsLiked={setIsLiked}\r\n          setFavorites={setFavorites}\r\n        />\r\n      </Suspense>\r\n\r\n      <Info\r\n        id={gameInfo?.id}\r\n        defaultTitle={gameInfo?.title}\r\n        setIncomeProvider={setIncomeProvider}\r\n        setFavorites={setFavorites}\r\n        setIsLiked={setIsLiked}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useState } from \"react\";\r\n\r\nimport { fetchBase } from \"utils\";\r\nimport { useLocale } from \"providers\";\r\nimport { useLocalStorage } from \"hooks\";\r\nimport { TitleDecorator } from \"pages/Home/components\";\r\n\r\nimport { GetInfoValue, InfoData } from \"./types\";\r\nimport css from \"./style.module.scss\";\r\nimport clsx from \"clsx\";\r\nimport { defaultGameTitle } from \"pages/SlotPage/utils\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface Props {\r\n  id?: string;\r\n  defaultTitle?: string;\r\n  setFavorites: (value: number) => void;\r\n  setIsLiked: (value: boolean) => void;\r\n  setIncomeProvider: (value: string | null) => void;\r\n}\r\n\r\nexport const Info: FC<Props> = ({\r\n  id,\r\n  defaultTitle,\r\n  setFavorites,\r\n  setIsLiked,\r\n  setIncomeProvider,\r\n}) => {\r\n  const { locale } = useLocale();\r\n  const [token] = useLocalStorage(\"token\");\r\n  const [info, setInfo] = useState<InfoData>({\r\n    description: \"\",\r\n    likes: 0,\r\n    type: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      if (id) {\r\n        const { data } = await fetchBase<GetInfoValue>(\"slots/get-game-info\", {\r\n          variables: {\r\n            language: locale,\r\n            token,\r\n            game_id: id,\r\n          },\r\n        });\r\n\r\n        if (data?.info) {\r\n          setInfo(data.info);\r\n          setFavorites(data.info.likes);\r\n          setIsLiked(!!data.info.do_i_like_it);\r\n          setIncomeProvider(data.info.provider_name || null);\r\n        }\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {info?.name || defaultTitle || defaultGameTitle} | Crypto Gambling\r\n          Casino\r\n        </title>\r\n      </Helmet>\r\n\r\n      <div className={css.root}>\r\n        <div className={css.titleWrapper}>\r\n          <TitleDecorator className={css.decoration} position=\"right\">\r\n            {info.name}\r\n          </TitleDecorator>\r\n          <div className={clsx(css.type, css.text)}>{info.type}</div>\r\n        </div>\r\n\r\n        <div className={clsx(css.description, css.text)}>\r\n          {info.description}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Statistics } from \"components\";\r\nimport { GameList } from \"pages/Home/components\";\r\n\r\nimport { GamesListElement, getGamesList } from \"./utils\";\r\nimport { GameBlock } from \"./components\";\r\nimport classes from \"./style.module.scss\";\r\nimport \"config/themes/_slots.scss\";\r\n\r\nconst SlotPage = () => {\r\n  const [gamesList, setGamesList] = useState<GamesListElement[]>([]);\r\n  useEffect(() => {\r\n    getGamesList(setGamesList);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GameBlock />\r\n\r\n      <div className={classes.statisticsWrapper}>\r\n        <Statistics />\r\n      </div>\r\n\r\n      <GameList\r\n        title=\"Recommended\"\r\n        allLink={null}\r\n        cardSize={164}\r\n        rows={1}\r\n        mobile={[\r\n          {\r\n            cardsAmount: 2,\r\n            rowsAmount: 2,\r\n            triggerSize: 500,\r\n          },\r\n        ]}\r\n        data={\r\n          gamesList?.map(({ id, image_url, name, provider }) => ({\r\n            img: image_url,\r\n            url: `slot/${id}`,\r\n            name,\r\n            about: `Provider: ${provider}`,\r\n          })) || []\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotPage;\r\n","import { GameInfo } from \"pages/SlotGames/types\";\r\nimport { track } from \"utils\";\r\n\r\nexport const defaultGameTitle = \"Pasino Slot Game\";\r\n\r\nconst findId = (search: string): string => {\r\n  const searchSplitLine = search.split(/\\?|=/);\r\n  return searchSplitLine.find((value) => !!value) || \"\";\r\n};\r\n\r\nexport const getGameInfoFromSearch = (\r\n  search: string,\r\n  oldId: string,\r\n): GameInfo | undefined => {\r\n  try {\r\n    const newId = findId(search).replace(\"%3A\", \":\");\r\n    if (newId !== oldId) {\r\n      const [provider, title] = newId.split(\":\");\r\n\r\n      return {\r\n        id: newId,\r\n        title,\r\n        provider,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    track()?.errors(error);\r\n\r\n    console.error(\"error when try get GameInfoFromSearch\", error);\r\n  }\r\n};\r\n","import { fetchBase } from \"utils\";\r\n\r\nexport interface GamesListElement {\r\n  id: string;\r\n  image_url: string;\r\n  name: string;\r\n  provider: string;\r\n}\r\n\r\ninterface GamesList {\r\n  games: GamesListElement[];\r\n}\r\n\r\nexport const getGamesList = async (\r\n  setGames: (games: GamesListElement[]) => void,\r\n) => {\r\n  const { data } = await fetchBase<GamesList>(\"slots/get-featured-slots\");\r\n\r\n  if (data?.games) {\r\n    setGames(data.games);\r\n  }\r\n};\r\n"],"sourceRoot":""}