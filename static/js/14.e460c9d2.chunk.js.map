{"version":3,"sources":["pages/ModalPages/pages/Fairness/index.tsx","pages/ModalPages/pages/Fairness/style.module.scss"],"names":["mobileScreen","css","spacing","scrollProps","style","display","FairnessModal","isOpen","useSeed","serverSeed","clientSeed","setClientSeed","rotateClientSeed","getServerSeed","rotateServerSeed","intl","useGetLocale","useWindowSize","height","width","useState","fairnessClientSeed","setFairnessClientSeed","useEffect","seed","handleRotateServerSeed","scrollStyles","minWidth","minHeight","maxHeight","parseInt","open","onClose","length","className","dialogActions","title","formatMessage","id","grow","translateContentSizeYToHolder","noScrollX","contentProps","contentRoot","contentInnerWrapper","content","wrapper","input","readOnly","label","value","current_seed_hashed","handleRotate","row","onChange","event","target","isSetManually","error","nonceWrapper","Number","games_played","buttonWrapper","onClick","textLink","text","window","process","Fairness","props","gameName","module","exports"],"mappings":"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","file":"static/js/14.e460c9d2.chunk.js","sourcesContent":["import React, {\r\n  FunctionComponent,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport type { ElementPropsWithElementRefAndRenderer } from \"react-scrollbars-custom/dist/types/types\";\r\n\r\nimport SeedProvider from \"providers/Seed\";\r\nimport {\r\n  Button,\r\n  CopyInput,\r\n  CopyInputProps,\r\n  DialogActions,\r\n  DialogContent,\r\n  ProgressiveModal,\r\n} from \"components\";\r\nimport { useWindowSize } from \"providers\";\r\n\r\nimport { Scrollbar } from \"components/Scrollbar\";\r\nimport { ModalsProps } from \"config/routes\";\r\nimport { useSeed } from \"providers/Seed\";\r\n\r\nimport { ReactComponent as Check } from \"assets/icons/check.svg\";\r\nimport css from \"./style.module.scss\";\r\n\r\nconst { mobileScreen, spacing } = css;\r\nconst scrollProps: ElementPropsWithElementRefAndRenderer<HTMLDivElement> = {\r\n  style: {\r\n    display: \"block\",\r\n  },\r\n};\r\n\r\nconst FairnessModal: FunctionComponent<ModalsProps> = ({ isOpen }) => {\r\n  const {\r\n    serverSeed,\r\n    clientSeed,\r\n    setClientSeed,\r\n    rotateClientSeed,\r\n    getServerSeed,\r\n    rotateServerSeed,\r\n  } = useSeed();\r\n\r\n  const intl = useGetLocale();\r\n  const { height, width } = useWindowSize();\r\n\r\n  const [fairnessClientSeed, setFairnessClientSeed] = useState(\"\");\r\n\r\n  const rotate = () => {\r\n    if (!clientSeed?.seed || clientSeed.seed.length <= 3) rotateClientSeed();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      return;\r\n    }\r\n\r\n    getServerSeed();\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (!fairnessClientSeed || fairnessClientSeed !== clientSeed?.seed)\r\n      setFairnessClientSeed(clientSeed?.seed || \"\");\r\n  }, [clientSeed?.seed]);\r\n\r\n  const handleSeed = (seed: string) => {\r\n    setFairnessClientSeed(seed);\r\n    setClientSeed({\r\n      seed,\r\n      isSetManually: true,\r\n    });\r\n  };\r\n\r\n  const handleChangeClientSeed: CopyInputProps[\"onChange\"] = (event) =>\r\n    handleSeed(event.target.value);\r\n\r\n  const handleRotateClientSeed = () => {\r\n    const { seed } = rotateClientSeed();\r\n\r\n    setFairnessClientSeed(seed);\r\n  };\r\n\r\n  const handleRotateServerSeed = () => rotateServerSeed();\r\n\r\n  const verify = () => {\r\n    window.open(`${process.env.REACT_APP_VERIFY_URL}`);\r\n  };\r\n\r\n  const scrollStyles = {\r\n    minWidth: \"100%\",\r\n    minHeight: \"100%\",\r\n    maxHeight:\r\n      height - (width < parseInt(mobileScreen) ? 0 : parseInt(spacing) * 8),\r\n  };\r\n\r\n  return (\r\n    <ProgressiveModal\r\n      open={isOpen && !!serverSeed}\r\n      width={600}\r\n      onClose={() => {\r\n        rotate();\r\n      }}>\r\n      <DialogActions className={css.dialogActions}>\r\n        <h1 className={css.title}>\r\n          {intl.formatMessage({ id: \"fairnessInformation.title\" })}\r\n        </h1>\r\n\r\n        <div className={css.grow} />\r\n      </DialogActions>\r\n\r\n      <Scrollbar\r\n        translateContentSizeYToHolder\r\n        noScrollX\r\n        style={scrollStyles}\r\n        contentProps={scrollProps}>\r\n        <div className={css.contentRoot}>\r\n          <div className={css.contentInnerWrapper}>\r\n            <DialogContent className={css.content}>\r\n              <div className={css.wrapper}>\r\n                <CopyInput\r\n                  className={css.input}\r\n                  readOnly\r\n                  label={intl.formatMessage({\r\n                    id: \"fairnessInformation.serverSeedHashed\",\r\n                  })}\r\n                  value={\r\n                    serverSeed?.current_seed_hashed ||\r\n                    \"something is wrong, please reload the page\"\r\n                  }\r\n                  handleRotate={handleRotateServerSeed}\r\n                />\r\n                <div className={css.row}>\r\n                  <CopyInput\r\n                    className={css.input}\r\n                    label={intl.formatMessage({\r\n                      id: \"fairnessInformation.clientSeed\",\r\n                    })}\r\n                    value={fairnessClientSeed}\r\n                    onChange={handleChangeClientSeed}\r\n                    handleRotate={handleRotateClientSeed}\r\n                    error={fairnessClientSeed.length <= 3}\r\n                  />\r\n                  <div className={css.nonceWrapper}>\r\n                    <CopyInput\r\n                      className={css.input}\r\n                      readOnly\r\n                      label={intl.formatMessage({\r\n                        id: \"fairnessInformation.nonce\",\r\n                      })}\r\n                      value={Number(serverSeed?.games_played) + 1 || \"-1\"}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={css.buttonWrapper}>\r\n                <Button\r\n                  onClick={handleRotateServerSeed}\r\n                  className={css.textLink}>\r\n                  <p className={css.text}>\r\n                    {intl.formatMessage({\r\n                      id: \"fairnessInformation.rotate\",\r\n                    })}\r\n                  </p>\r\n                </Button>\r\n                <Button onClick={verify} className={css.textLink}>\r\n                  <p className={css.text}>\r\n                    {intl.formatMessage({\r\n                      id: \"fairnessInformation.button\",\r\n                    })}\r\n                  </p>\r\n                </Button>\r\n              </div>\r\n            </DialogContent>\r\n          </div>\r\n        </div>\r\n      </Scrollbar>\r\n    </ProgressiveModal>\r\n  );\r\n};\r\n\r\nconst Fairness: FunctionComponent<ModalsProps> = (props) => {\r\n  if (props.gameName === null) return null;\r\n  return (\r\n    <SeedProvider gameName={props.gameName}>\r\n      <FairnessModal {...props} />\r\n    </SeedProvider>\r\n  );\r\n};\r\n\r\nexport default Fairness;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"wrapper\":\"style_wrapper__2kGsa\",\"row\":\"style_row__rcIsm\",\"nonceWrapper\":\"style_nonceWrapper__jujgF\",\"buttonWrapper\":\"style_buttonWrapper__1qMqP\",\"textLink\":\"style_textLink__22_PU\",\"text\":\"style_text__3v0jh\",\"dialogActions\":\"style_dialogActions__2asFy\",\"title\":\"style_title__3ugfs\",\"grow\":\"style_grow__3GDg-\",\"contentRoot\":\"style_contentRoot__2qhgN\",\"contentInnerWrapper\":\"style_contentInnerWrapper__1VxwX\",\"content\":\"style_content__2F6n0\",\"input\":\"style_input__1cZgT\"};"],"sourceRoot":""}