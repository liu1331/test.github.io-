{"version":3,"sources":["components/Share/style.module.scss","components/ChangeValue/ChahgeValue.tsx","hooks/useTypedSelector.tsx","assets/icons/facebook-white.svg","assets/icons/twitter-white.svg","components/Share/index.tsx","hooks/withDiscount.tsx","hooks/useChangeValue.tsx","components/ProductCard/ProductCard.module.css","components/ProductCard/ProductCardModal/ProductCardModal.tsx","components/ProductCard/ProductCard.tsx","pages/ProductContent.tsx"],"names":["module","exports","ChahgeValue","props","countValue","upValue","downValue","className","onClick","type","shape","icon","UseTypedSelector","useSelector","Share","shareLink","shareTitle","useRef","css","root","socialContainer","social","FacebookShareButton","url","quote","iconBox","src","facebookIcon","TwitterShareButton","title","twitterIcon","line","buttonWrapper","withDiscount","order","discount","DiscountName","ON_3_KG","priceWithDiscount","Number","price","valueRule","useChangeValue","productName","useState","countValueInHook","setCountValue","totalPrice","totalPriceInHook","setTotalPrice","changeValueOrder","useActionCreators","useEffect","Value","newPrice","console","log","ProductCardModal","product","img","localStorageOrders","pushProduct","visible","isModalVisible","onOk","setIsModalVisible","inBasket","okText","cancelText","onCancel","alt","style","fontWeight","color","ProductCard","btn","setBtn","orders","localStorage","getItem","json","JSON","parse","length","map","j","showModal","item","hoverable","width","display","flexDirection","alignItems","flex","cover","CardImg","description","textAlign","marginBottom","disabled","danger","ProductContent","getProductsThunk","products","state","window","location","pathname","search","Helmet","defer","onChangeClientState","name","content","property","paddingTop"],"mappings":"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","file":"static/js/6.41a432c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__9CMnc\",\"input\":\"style_input__Z0O3Z\",\"icon\":\"style_icon__1xlGT\",\"line\":\"style_line__fG0eX\",\"socialContainer\":\"style_socialContainer__3_jXe\",\"social\":\"style_social__1A8ZW\",\"iconBox\":\"style_iconBox__3MAnX\",\"buttonWrapper\":\"style_buttonWrapper___3-4M\",\"button\":\"style_button__2qT8X\"};","\r\nimport React, { FC } from 'react'\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\ninterface IChangeValue{\r\n    upValue:()=> void,\r\n    downValue:()=> void,\r\n    countValue: number\r\n}\r\n\r\nconst ChahgeValue:FC<IChangeValue> = (props) => {\r\n\r\n\r\n    const {countValue,upValue, downValue} = props\r\n\r\n\r\n    return (\r\n        <div className= 'ModalContent__PriceInfo__ChangeValue___item'>\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <Button onClick={() => upValue()} type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n                        </div>\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <span>{countValue}</span>\r\n                        </div>\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <Button onClick={() => downValue()} type=\"primary\" shape=\"circle\" icon={<MinusOutlined />} />\r\n                        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChahgeValue\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\"\r\n\r\nexport const UseTypedSelector: TypedUseSelectorHook<RootState> = useSelector","export default __webpack_public_path__ + \"static/media/facebook-white.5e77194b.svg\";","export default __webpack_public_path__ + \"static/media/twitter-white.7f45dec6.svg\";","import React, { useRef, FunctionComponent, MouseEventHandler } from \"react\";\r\nimport { FacebookShareButton, TwitterShareButton } from \"react-share\";\r\n\r\nimport facebookIcon from \"assets/icons/facebook-white.svg\";\r\nimport twitterIcon from \"assets/icons/twitter-white.svg\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  shareLink: string;\r\n  shareTitle: string;\r\n}\r\n\r\nexport const Share: FunctionComponent<Props> = ({ shareLink, shareTitle }) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={css.socialContainer}>\r\n        <div className={css.social}>\r\n          <FacebookShareButton url={shareLink} quote={shareTitle}>\r\n            <img className={css.iconBox} src={facebookIcon} />\r\n          </FacebookShareButton>\r\n          <span>Facebook</span>\r\n        </div>\r\n        <div className={css.social}>\r\n          <TwitterShareButton title={shareTitle} url={shareLink}>\r\n            <img className={css.iconBox} src={twitterIcon} />\r\n          </TwitterShareButton>\r\n          <span>Twitter</span>\r\n        </div>\r\n      </div>\r\n      <div className={css.line} />\r\n      <div className={css.buttonWrapper}></div>\r\n    </div>\r\n  );\r\n};\r\n","import { DiscountName } from \"../types/discounts\";\r\n\r\n\r\n\r\nexport interface IOrderIsDiscount{\r\n    countValueInHook: number,\r\n    discount: string | '',\r\n    price: number\r\n}\r\n\r\n\r\n\r\nexport function withDiscount (order:IOrderIsDiscount){\r\n        switch (order.discount) {\r\n            case DiscountName.ON_3_KG:\r\n                    return {priceWithDiscount: Number(order.price) /2,\r\n                    valueRule: 3}\r\n\r\n            default:\r\n               return {priceWithDiscount: Number(order.price),\r\n                valueRule: null}\r\n        }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useActionCreators } from \"./useAC\";\r\nimport { withDiscount } from \"./withDiscount\";\r\n\r\n\r\n\r\nexport interface IOrderIsDiscount {\r\n    countValue?: number,\r\n    totalPrice?: number,\r\n    discount: string | '' | undefined,\r\n    price: number,\r\n    productName: string;\r\n    img?: string;\r\n    inBasket?: boolean\r\n}\r\n\r\n\r\n\r\nexport function useChangeValue(order:any) {\r\n    const {price, discount , productName , countValue} = order\r\n    const [countValueInHook, setCountValue] = useState<number>(countValue || 1)\r\n    const [totalPriceInHook, setTotalPrice] = useState<number>(order.totalPrice || order.price)\r\n    const {changeValueOrder} = useActionCreators()\r\n\r\n    useEffect(() => {\r\n        changeValueOrder(productName, totalPriceInHook, countValueInHook)\r\n    }, [countValueInHook])\r\n\r\n    const upValue = () => {\r\n        setCountValue((Value) => Value + 1)\r\n        const newPrice = withDiscount({ countValueInHook, discount, price })\r\n        console.log('totalPriceInHook '+totalPriceInHook)\r\n\r\n        console.log('price '+price)\r\n        console.log('newPrice.priceWithDiscount '+newPrice.priceWithDiscount)\r\n\r\n\r\n        if (!!discount) {\r\n\r\n\r\n            if (Number(countValueInHook + 1) % Number(newPrice.valueRule) === 0) {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) + Number(newPrice.priceWithDiscount))\r\n\r\n            } else {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) + Number(price))\r\n\r\n            }\r\n\r\n        } else {\r\n            setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) + Number(price))\r\n\r\n        }\r\n    }\r\n    const downValue = () => {\r\n        if (countValueInHook - 1 === 0) {\r\n            return\r\n        }\r\n        if (!!discount) {\r\n            const newPrice = withDiscount({ countValueInHook, discount, price })\r\n            if (Number(countValueInHook) % Number(newPrice.valueRule) === 0) {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) - Number(newPrice.priceWithDiscount))\r\n\r\n            } else {\r\n                setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) - Number(price))\r\n            }\r\n        } else {\r\n            setTotalPrice((totalPriceInHook) => totalPriceInHook = Number(totalPriceInHook) - Number(price))\r\n        }\r\n        setCountValue((Value) => Value - 1)\r\n    }\r\n\r\n    return {\r\n        countValueInHook, setCountValue, totalPriceInHook, setTotalPrice, upValue, downValue\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardImg\":\"ProductCard_CardImg__Q7044\"};","import { Modal } from 'antd';\r\nimport React, { FC, useState } from 'react'\r\nimport { IProduct } from '../../../types/product';\r\nimport { useActionCreators } from '../../../hooks/useAC';\r\nimport ChahgeValue from '../../ChangeValue/ChahgeValue';\r\nimport { useChangeValue } from '../../../hooks/useChangeValue';\r\n\r\n\r\ninterface IModal {\r\n    isModalVisible: boolean;\r\n    setIsModalVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n    product: IProduct;\r\n}\r\n\r\nconst ProductCardModal: FC<IModal> = (props) => {\r\n    const { img, price, productName, discount } = props.product\r\n    const { localStorageOrders, pushProduct } = useActionCreators()\r\n\r\n    const {countValueInHook, setCountValue, totalPriceInHook, setTotalPrice, upValue, downValue\r\n    } = useChangeValue({productName, discount, price} )\r\n\r\n    const handleOk = () => {\r\n        if (countValueInHook === 0) return; //warn\r\n        props.setIsModalVisible(false);\r\n        localStorageOrders({ img, productName, countValue:countValueInHook, totalPrice: totalPriceInHook, price, inBasket: true, discount});\r\n        pushProduct({ productName, img, price, totalPrice: totalPriceInHook, inBasket: true, discount })\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        props.setIsModalVisible(false);\r\n        setCountValue(1)\r\n        setTotalPrice(price)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal title=\"Заказ\" visible={props.isModalVisible} onOk={() => handleOk()} okText='Добавить в корзину' cancelText='Отмена' onCancel={handleCancel}>\r\n                <div className='ModalContent'>\r\n                    <div className=\"ModalContent__info\">\r\n                        <div>\r\n                            <img src={img} alt=\"\" />\r\n                        </div>\r\n                        <div>\r\n                            <span>{productName}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"ModalContent__PriceInfo\">\r\n                        <ChahgeValue countValue={countValueInHook} upValue ={upValue} downValue={downValue} />\r\n\r\n                        <div className=\"ModalContent__PriceInfo__item\">\r\n                            <h1 style={{ fontWeight: 'normal' }}>Сумма</h1>\r\n                            <h2 style={{ fontWeight: 'bold', color: 'chocolate' }}>${totalPriceInHook}</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductCardModal\r\n","import { Button, Card, Col, Row } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport style from \"./ProductCard.module.css\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport { IProduct } from \"../../types/product\";\r\nimport ProductCardModal from \"./ProductCardModal/ProductCardModal\";\r\nimport { IOrder } from \"../../types/order\";\r\n\r\nconst ProductCard: FC<IProduct> = (props) => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [btn, setBtn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const orders = localStorage.getItem(\"orders\") || \"[]\";\r\n    const json = JSON.parse(orders) as IProduct[];\r\n    if (json.length > 0) {\r\n      json.map((j) => {\r\n        if (j.productName === props.productName) {\r\n          setBtn(true);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  return (\r\n    <div className={style.item}>\r\n      <Card\r\n        hoverable\r\n        style={{\r\n          width: \"300px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          flex: \"0 1 33.333%\",\r\n        }}\r\n        cover={\r\n          <div className={style.CardImg}>\r\n            <img alt=\"imgProduct\" src={props.img} />\r\n          </div>\r\n        }\r\n      >\r\n        <Meta\r\n          title={props.productName}\r\n          description={\"$\" + props.price}\r\n          style={{ textAlign: \"center\", marginBottom: \"15px\" }}\r\n        />\r\n        {btn === true ? (\r\n          <Button disabled={true} type=\"dashed\" onClick={() => showModal()}>\r\n            {\" \"}\r\n            В корзине{\" \"}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={false}\r\n            type=\"dashed\"\r\n            danger\r\n            onClick={() => showModal()}\r\n          >\r\n            {\" \"}\r\n            Купить{\" \"}\r\n          </Button>\r\n        )}\r\n      </Card>\r\n\r\n      <ProductCardModal\r\n        product={props}\r\n        isModalVisible={isModalVisible}\r\n        setIsModalVisible={setIsModalVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import { Share } from \"components/Share\";\r\nimport React from \"react\";\r\nimport { FC, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ProductCard from \"../components/ProductCard/ProductCard\";\r\nimport { useActionCreators } from \"../hooks/useAC\";\r\nimport { UseTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport loseImg from \"../assets/icons/lose-icon.png\";\r\nconst ProductContent: FC = () => {\r\n  const { getProductsThunk } = useActionCreators();\r\n  const { products } = UseTypedSelector((state) => state.ProductContent);\r\n\r\n  useEffect(() => {\r\n    getProductsThunk();\r\n  }, []);\r\n  const path = window.location.pathname + window.location.search;\r\n\r\n  return (\r\n    <>\r\n      <Helmet defer={false} onChangeClientState={(state) => console.log(state)}>\r\n        {/* <!-- Primary Meta Tags --> */}\r\n        <title>Hello</title>\r\n        <meta name=\"title\" content=\"Hello\" />\r\n        <meta name=\"description\" content=\"Its my website\" />\r\n\r\n        {/* <!-- Open Graph / Facebook --/> */}\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta\r\n          property=\"og:url\"\r\n          content=\"https://liu1331.github.io/test.github.io-/productContent\"\r\n        />\r\n        <meta property=\"og:title\" content=\"Hello\" />\r\n        <meta property=\"og:description\" content=\"Its my website\" />\r\n        {/* <meta property=\"og:image\" content={loseImg} /> */}\r\n\r\n        {/* <!-- Twitter --/> */}\r\n        <meta property=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          property=\"twitter:url\"\r\n          content=\"https://liu1331.github.io/test.github.io-/productContent\"\r\n        />\r\n        <meta property=\"twitter:title\" content=\"Hello\" />\r\n        <meta property=\"twitter:description\" content=\"Its my website\" />\r\n        {/* <meta property=\"twitter:image\" content={loseImg} /> */}\r\n      </Helmet>\r\n      <div className=\"container\">\r\n        <div className=\"ProductContent_items\" style={{ paddingTop: \"20px\" }}>\r\n          {products.map((product) => (\r\n            <ProductCard key={product.productName} {...product} />\r\n          ))}\r\n          <Share\r\n            shareLink=\"https://liu1331.github.io/productContent\"\r\n            shareTitle=\"Content\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductContent;\r\n"],"sourceRoot":""}