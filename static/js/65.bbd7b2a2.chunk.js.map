{"version":3,"sources":["pages/ModalPages/pages/Wallet/Withdraw/style.module.scss","pages/ModalPages/pages/Wallet/Withdraw/index.tsx","pages/ModalPages/pages/Wallet/Components/Template.tsx","pages/ModalPages/pages/Wallet/Components/style.module.scss","pages/ModalPages/pages/Wallet/Components/Currency/style.module.scss","pages/ModalPages/pages/Wallet/GemInfo/index.tsx","pages/ModalPages/pages/Wallet/GemInfo/style.module.scss","pages/ModalPages/pages/Wallet/getChainOnlyValue.tsx"],"names":["module","exports","fpsStyle","maxHeight","noStyle","Withdraw","currency","intl","useGetLocale","actualCoin","useLocation","useHistory","useCoins","coinsList","find","value","coin","useFetch","infoFetch","infoData","data","useState","address","setAddress","sendFetch","sendData","method","setMethod","isFPSup","setIsFPSup","minValue","setMinValue","direct","toFixed","fp","fees","setFees","amount","setAmount","receive","setReceive","focusStatus","useRef","close","useModalLocation","amountChecker","target","min","Number","useEffect","variables","minimum_withdrawal_direct","minimum_withdrawal_fp","fee","withdrawal_fee_direct","withdrawal_fee_fp","fp_supported","amt","result","current","send","a","loading","answer","notifyBarManager","success","message","timeOut","balance","coinsManager","coinValueUpdate","className","css","root","checkBox","style","isChecked","text","on","formatMessage","id","off","switchHandleChange","checked","classes","switch","toggle","switchToggle","track","label","onChange","amountBox","amountInput","onBlur","onFocus","buttonAmount","button","onClick","getChainOnlyValue","clsx","feeHelp","feesWrapper","feesInnerWrapper","replaceNumbers","sendWrapper","sendButton","Template","children","innerWrapper","GemInfo","chainConfig","Chain","BSC","ETH","TRX","Mainnet","Polygon","returnValue","type","reminderText","boldText","checkCurrency","toUpperCase","folder","coinType","findIndex"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,oBAAoB,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,wBAAwB,SAAW,wBAAwB,UAAY,yBAAyB,aAAe,4BAA4B,YAAc,2BAA2B,gBAAkB,+BAA+B,iBAAmB,gCAAgC,oBAAsB,mCAAmC,UAAY,yBAAyB,aAAe,4BAA4B,YAAc,2BAA2B,OAAS,sBAAsB,WAAa,0BAA0B,YAAc,2BAA2B,YAAc,2BAA2B,iBAAmB,gCAAgC,IAAM,mBAAmB,QAAU,uBAAuB,SAAW,wBAAwB,MAAQ,uB,6MC6B/uCC,EAAW,CAAEC,UAAW,GACxBC,EAAU,GAsPDC,UApP0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpCC,EAAOC,yBAKPC,GAJWC,cACDC,cAEMC,cAAdC,UACqBC,MAAK,SAACC,GAAD,OAAWA,EAAMC,OAASV,MANH,EAQjBW,YACtC,kCATuD,mBAQlDC,EARkD,KAQ/BC,EAR+B,KAQrCC,KARqC,EAW3BC,mBAE5B,IAbuD,mBAWlDC,EAXkD,KAWzCC,EAXyC,OAe3BN,YAAmB,6BAfQ,mBAelDO,EAfkD,KAevCC,EAfuC,OAgB7BJ,mBAAiC,UAhBJ,mBAgBlDK,EAhBkD,KAgB1CC,EAhB0C,OAiB3BN,oBAAS,GAjBkB,mBAiBlDO,EAjBkD,KAiBzCC,EAjByC,OAkBzBR,mBAAmC,MAlBV,mBAkBlDS,EAlBkD,KAkBxCC,EAlBwC,OAmBjCV,mBAAyB,CAC/CW,OAAS,GAAGC,QAAQ,GACpBC,GAAK,GAAGD,QAAQ,KArBuC,mBAmBlDE,EAnBkD,KAmB5CC,EAnB4C,OAuB7Bf,mBAAS,cAvBoB,mBAuBlDgB,EAvBkD,KAuB1CC,GAvB0C,QAwB3BjB,mBAAS,GAxBkB,qBAwBlDkB,GAxBkD,MAwBzCC,GAxByC,MAyBnDC,GAAcC,kBAAO,GACnBC,GAAUC,cAAVD,MAYFE,GAAgB,SAACC,GACrB,GAAIhB,EAAU,CACZ,IAAMiB,EAAMC,OAAkB,WAAXtB,EAAsBI,EAASE,OAASF,EAASI,IAChEnB,EAAQiC,OAAOF,GAMnB,OAJI/B,EAAQgC,IACVhC,EAAQgC,GAGHhC,EAGT,OAAOiC,OAAOF,IAyBhBG,qBAAU,WACR/B,EAAU,CACRgC,UAAW,CACTlC,KAAMV,OAGT,CAACA,EAAUY,IAEd+B,qBAAU,WACR,GAAI9B,EAAU,CACZ,IAAM4B,EAAM,CACVf,OAAQb,EAASgC,0BACjBjB,GAAIf,EAASiC,uBAEfrB,EAAYgB,GAEZ,IAAMM,EAAM,CACVrB,OAAQb,EAASmC,sBACjBpB,GAAIf,EAASoC,mBAEfnB,EAAQiB,GAEsB,MAA1BlC,EAASqC,aACX3B,GAAW,IAEXA,GAAW,GACXF,EAAU,cAGb,CAACR,IAEJ8B,qBAAU,WACR,IAAMI,EAAiB,WAAX3B,EAAsBS,EAAKH,OAASG,EAAKD,GACjDuB,EAAMZ,GAAcR,GACpBqB,EAASV,OAAOS,GAAOT,OAAOK,GAE9BK,EAAS,IACXA,EAAS,GAGPD,IAAQT,OAAOX,IAAYI,GAAYkB,SACzCrB,GAAUmB,EAAIxB,QAAQ,IAGxBO,GAAWkB,KACV,CAAChC,EAAQW,EAAQF,IAEpBc,qBAAU,WACJnB,IAAaW,GAAYkB,SAC3BrB,GAAUR,EAASE,UAEpB,CAACF,IAEJ,IAAM8B,GAAI,uCAAG,kCAAAC,EAAA,yDACNpC,EAASqC,QADH,gCAEYtC,EAAU,CAC7B0B,UAAW,CACTlC,KAAMV,EACNoB,SACAJ,UACAe,YAPK,QAEH0B,EAFG,UAYC3C,EAAS2C,EAAT3C,QAEN4C,mBAAiB5C,EAAK6C,QAAU,UAAY,SAAS,CACnDC,QAAS9C,EAAK8C,QACdC,QAAS,MAGX5C,EAAW,IAEH6C,EAAkBhD,EAAlBgD,QAASpD,EAASI,EAATJ,KACjBqD,IAAaC,gBAAgBF,EAASpD,GAClCI,EAAK6C,SA/EftB,MAwDW,2CAAH,qDA+BV,MAAiB,QAAbrC,EACK,cAAC,IAAD,IAIP,cAAC,IAAD,UACE,sBAAKiE,UAAWC,IAAIC,KAApB,UACE,qBAAKF,UAAWC,IAAIE,SAAUC,MAAQ/C,EAAqBxB,EAAXF,EAAhD,SACE,cAAC,YAAD,CACE0E,UAAsB,WAAXlD,EACXmD,KAAM,CACJC,GAAIvE,EAAKwE,cAAc,CAAEC,GAAI,kCAC7BC,IAAK1E,EAAKwE,cAAc,CAAEC,GAAI,+BAEhCE,mBA1GiB,SAACC,GAC1BxD,EAAUwD,EAAU,SAAW,cA0GvBC,QAAS,CACPC,OAAQ,CACNC,OAAQd,IAAIe,aACZC,MAAOhB,IAAIgB,YAMnB,cAAC,IAAD,CACEC,MAAOlF,EAAKwE,cAAc,CAAEC,GAAI,4BAChCjE,MAAOO,EACPoE,SAxJoB,SAAC,GAA+C,IAA7C5C,EAA4C,EAA5CA,OAC7BvB,EAAWuB,EAAO/B,UA0Jd,sBAAKwD,UAAWC,IAAImB,UAApB,UACE,cAAC,IAAD,CACEpB,UAAWC,IAAIoB,YACfH,MAAOlF,EAAKwE,cAAc,CAAEC,GAAI,2BAChCjE,MAAOsB,EACPqD,SAvKiB,SAAC,GAA+C,IAA7C5C,EAA4C,EAA5CA,OACtB/B,EAAQiC,OAAOF,EAAO/B,QACxBA,GAAmB,IAAVA,GAAgB+B,EAAO/B,OAClCuB,GAAUQ,EAAO/B,QAqKX8E,OAAQ,YAAiB,IAAd/C,EAAa,EAAbA,OACTR,GAAUO,GAAcC,EAAO/B,OAAOkB,QAAQ,IAC9CQ,GAAYkB,SAAU,GAExBmC,QAAS,WACPrD,GAAYkB,SAAU,KAG1B,sBAAKY,UAAWC,IAAIuB,aAApB,UACE,cAAC,SAAD,CAAQxB,UAAWC,IAAIwB,OAAQC,QAvJjB,WACtB3D,IAAoB,OAAV7B,QAAU,IAAVA,OAAA,EAAAA,EAAY2D,UAAW,MAsJzB,SACG7D,EAAKwE,cAAc,CAAEC,GAAI,gCAE5B,cAAC,SAAD,CAAQT,UAAWC,IAAIwB,OAAQC,QAtJjB,WACtB,GAAInE,EAAU,CACZ,IAAMiB,EAAMC,OAAkB,WAAXtB,EAAsBI,EAASE,OAASF,EAASI,IAEpEI,GAAUS,EAAId,QAAQ,IAAM,UAE5BK,GAAU,MAgJJ,SACG/B,EAAKwE,cAAc,CAAEC,GAAI,sCAK/BkB,YAAkB5F,EAAU6F,YAAK3B,IAAInB,IAAKmB,IAAI4B,UAE/C,qBAAK7B,UAAWC,IAAI6B,YAApB,SACE,sBAAK9B,UAAWC,IAAI8B,iBAApB,UACE,cAAC,aAAD,CAAY/B,UAAWC,IAAInB,IAA3B,mBACM9C,EAAKwE,cAAc,CACrBC,GAAI,yBAFR,YAGQuB,yBACO,WAAX7E,EAAsBS,EAAKH,OAASG,EAAKD,IAJ7C,YAKO5B,KAEP,cAAC,aAAD,CAAYiE,UAAWC,IAAInB,IAA3B,mBACM9C,EAAKwE,cAAc,CACrBC,GAAI,4BAFR,YAGQuB,yBAAehE,GAAQN,QAAQ,IAHvC,YAG8C3B,UAIlD,qBAAKiE,UAAWC,IAAIgC,YAApB,SACE,cAAC,IAAD,CACEjC,UAAWC,IAAIiC,WACfR,QAASrC,GACTE,QAASrC,EAASqC,QAHpB,SAIGvD,EAAKwE,cAAc,CAAEC,GAAI,0C,4IC7PvB0B,EARoC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpD,OACE,qBAAKpC,UAAWC,IAAIC,KAApB,SACE,qBAAKF,UAAWC,IAAIoC,aAApB,SAAmCD,O,mCCVzC3G,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,oBAAoB,aAAe,4BAA4B,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,wB,oBCAhfD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,gBAAkB,+BAA+B,aAAe,4BAA4B,MAAQ,qBAAqB,MAAQ,qBAAqB,cAAgB,6BAA6B,KAAO,oBAAoB,UAAY,yBAAyB,OAAS,sBAAsB,KAAO,oBAAoB,YAAc,2BAA2B,KAAO,sB,uFCkB7rB4G,IAdyB,WACtC,IAAMtG,EAAOC,yBAEb,OACE,cAAC,IAAD,UACE,qBAAK+D,UAAWa,IAAQP,KAAxB,SACGtE,EAAKwE,cAAc,CAClBC,GAAI,yB,oBCXdhF,EAAOC,QAAU,CAAC,KAAO,sB,yHCMnB6G,EAIF,CACFC,MAAO,CACLC,IAAK,CAAC,MAAO,QAAS,OAAQ,OAAQ,OAAQ,QAC9CC,IAAK,CAAC,MAAO,OACbC,IAAK,CAAC,MAAO,MAAO,QACpB,cAAe,CAAC,SAElBC,QAAS,CACPC,QAAS,CAAC,WAIDlB,EAAoB,SAAC5F,EAAmBiE,GACnD,GAAIjE,EAAU,CAAC,IAAD,aACZ,IAAM+G,EAAc,SAACtG,EAAeuG,GAAhB,OAClB,eAAC,aAAD,CAAY/C,UAAW4B,YAAK3B,IAAI+C,aAAc/C,IAAIgD,SAAUjD,GAA5D,UACGxD,EADH,IACWuG,EADX,YAKIG,EAAgBnH,EAASoH,cAE/B,IAAK,IAAMJ,KAAQR,EAAa,CAC9B,IAAMa,EAASb,EAAYQ,GAE3B,IAAK,IAAMM,KAAYD,EAAQ,CAC7B,IAAM9G,EAAY8G,EAAOC,GACzB,GAAI/G,EAKF,IAAqC,IAJDA,EAAUgH,WAC5C,SAAC9G,GAAD,OAAWA,IAAU0G,KAIrB,MAAM,CAAN,EAAOJ,EAAYO,EAAUN,MApBzB,qCA2Bd,OAAO","file":"static/js/65.bbd7b2a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3gI0d\",\"coins\":\"style_coins__3oigi\",\"coinImg\":\"style_coinImg__1ZjtK\",\"title\":\"style_title__1Pcf5\",\"text\":\"style_text__2YgSH\",\"subTitle\":\"style_subTitle__GoSmB\",\"checkBox\":\"style_checkBox__1_lNR\",\"switchBox\":\"style_switchBox__kf6hl\",\"switchToggle\":\"style_switchToggle__3ENlZ\",\"switchLabel\":\"style_switchLabel__1xLhP\",\"switchLabelLeft\":\"style_switchLabelLeft__2gwkL\",\"switchLabelRight\":\"style_switchLabelRight__2JFux\",\"selectedSwitchLabel\":\"style_selectedSwitchLabel__26hu7\",\"amountBox\":\"style_amountBox__1SkkA\",\"buttonAmount\":\"style_buttonAmount__RC51b\",\"amountInput\":\"style_amountInput__w_yV2\",\"button\":\"style_button__HTTvY\",\"sendButton\":\"style_sendButton__PL555\",\"sendWrapper\":\"style_sendWrapper__2Cxhy\",\"feesWrapper\":\"style_feesWrapper__3lLCO\",\"feesInnerWrapper\":\"style_feesInnerWrapper__1WB_k\",\"fee\":\"style_fee__Ib8QI\",\"feeHelp\":\"style_feeHelp__39nsH\",\"disabled\":\"style_disabled__1Dgab\",\"track\":\"style_track__1NHAC\"};","import React, {\r\n  ChangeEvent,\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useGetLocale } from \"providers\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Button, SwitchBox, notifyBarManager, Typography } from \"components\";\r\nimport { replaceNumbers } from \"utils\";\r\nimport { coinsManager, useCoins, useFetch, useModalLocation } from \"hooks\";\r\n\r\nimport { SubmitButton } from \"pages/Auth/components\";\r\n\r\nimport {\r\n  CoinInformation,\r\n  FeesWithdrawal,\r\n  MinimumWithdrawal,\r\n  SendType,\r\n} from \"./types\";\r\nimport { Template } from \"../Components\";\r\nimport { Input } from \"../../../componentsProgressive\";\r\nimport css from \"./style.module.scss\";\r\nimport GemInfo from \"../GemInfo\";\r\nimport { getChainOnlyValue } from \"../getChainOnlyValue\";\r\n\r\nconst fpsStyle = { maxHeight: 0 };\r\nconst noStyle = {};\r\n\r\nconst Withdraw: FunctionComponent<any> = ({ currency }) => {\r\n  const intl = useGetLocale();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { coinsList } = useCoins();\r\n  const actualCoin = coinsList.find((value) => value.coin === currency);\r\n\r\n  const [infoFetch, { data: infoData }] = useFetch<CoinInformation>(\r\n    \"/withdraw/get-coin-information\",\r\n  );\r\n  const [address, setAddress] = useState(\r\n    // intl.formatMessage({ id: \"wallet.withdraw.addressPlaceholder\" }), //Placeholder address if it need\r\n    \"\",\r\n  );\r\n  const [sendFetch, sendData] = useFetch<SendType>(\"withdraw/place-withdrawal\");\r\n  const [method, setMethod] = useState<\"FAUCETPAY\" | \"DIRECT\">(\"DIRECT\");\r\n  const [isFPSup, setIsFPSup] = useState(true);\r\n  const [minValue, setMinValue] = useState<MinimumWithdrawal | null>(null);\r\n  const [fees, setFees] = useState<FeesWithdrawal>({\r\n    direct: (1).toFixed(8),\r\n    fp: (1).toFixed(8),\r\n  });\r\n  const [amount, setAmount] = useState(\"0.00000000\");\r\n  const [receive, setReceive] = useState(0);\r\n  const focusStatus = useRef(false);\r\n  const { close } = useModalLocation();\r\n  const handleAmountChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n    const value = Number(target.value);\r\n    if (value || value === 0 || !target.value) {\r\n      setAmount(target.value);\r\n    }\r\n  };\r\n\r\n  const handleAddressChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n    setAddress(target.value);\r\n  };\r\n\r\n  const amountChecker = (target: string) => {\r\n    if (minValue) {\r\n      const min = Number(method === \"DIRECT\" ? minValue.direct : minValue.fp);\r\n      let value = Number(target);\r\n\r\n      if (value < min) {\r\n        value = min;\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    return Number(target);\r\n  };\r\n\r\n  const handleAmountAll = () => {\r\n    setAmount(actualCoin?.balance || \"0\");\r\n  };\r\n\r\n  const handleAmountMin = () => {\r\n    if (minValue) {\r\n      const min = Number(method === \"DIRECT\" ? minValue.direct : minValue.fp);\r\n\r\n      setAmount(min.toFixed(8) || \"0\");\r\n    } else {\r\n      setAmount(\"0\");\r\n    }\r\n  };\r\n\r\n  const handleSwitchChange = (checked: boolean) => {\r\n    setMethod(checked ? \"DIRECT\" : \"FAUCETPAY\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    close();\r\n  };\r\n\r\n  useEffect(() => {\r\n    infoFetch({\r\n      variables: {\r\n        coin: currency,\r\n      },\r\n    });\r\n  }, [currency, infoFetch]);\r\n\r\n  useEffect(() => {\r\n    if (infoData) {\r\n      const min = {\r\n        direct: infoData.minimum_withdrawal_direct,\r\n        fp: infoData.minimum_withdrawal_fp,\r\n      };\r\n      setMinValue(min);\r\n\r\n      const fee = {\r\n        direct: infoData.withdrawal_fee_direct,\r\n        fp: infoData.withdrawal_fee_fp,\r\n      };\r\n      setFees(fee);\r\n\r\n      if (infoData.fp_supported === \"1\") {\r\n        setIsFPSup(true);\r\n      } else {\r\n        setIsFPSup(false);\r\n        setMethod(\"DIRECT\");\r\n      }\r\n    }\r\n  }, [infoData]);\r\n\r\n  useEffect(() => {\r\n    const fee = method === \"DIRECT\" ? fees.direct : fees.fp;\r\n    let amt = amountChecker(amount);\r\n    let result = Number(amt) - Number(fee);\r\n\r\n    if (result < 0) {\r\n      result = 0;\r\n    }\r\n\r\n    if (amt !== Number(amount) && !focusStatus.current) {\r\n      setAmount(amt.toFixed(8));\r\n    }\r\n\r\n    setReceive(result);\r\n  }, [method, amount, fees]);\r\n\r\n  useEffect(() => {\r\n    if (minValue && !focusStatus.current) {\r\n      setAmount(minValue.direct);\r\n    }\r\n  }, [minValue]);\r\n\r\n  const send = async () => {\r\n    if (!sendData.loading) {\r\n      const answer = await sendFetch({\r\n        variables: {\r\n          coin: currency,\r\n          method,\r\n          address,\r\n          amount,\r\n        },\r\n      });\r\n\r\n      if (answer) {\r\n        const { data } = answer;\r\n        if (data) {\r\n          notifyBarManager[data.success ? \"success\" : \"error\"]({\r\n            message: data.message,\r\n            timeOut: 2000,\r\n          });\r\n\r\n          setAddress(\"\");\r\n\r\n          const { balance, coin } = data;\r\n          coinsManager.coinValueUpdate(balance, coin);\r\n          if (data.success) {\r\n            handleClose();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (currency === \"GEM\") {\r\n    return <GemInfo />;\r\n  }\r\n\r\n  return (\r\n    <Template>\r\n      <div className={css.root}>\r\n        <div className={css.checkBox} style={!isFPSup ? fpsStyle : noStyle}>\r\n          <SwitchBox\r\n            isChecked={method === \"DIRECT\"}\r\n            text={{\r\n              on: intl.formatMessage({ id: \"wallet.withdraw.switch.direct\" }),\r\n              off: intl.formatMessage({ id: \"wallet.withdraw.switch.fp\" }),\r\n            }}\r\n            switchHandleChange={handleSwitchChange}\r\n            classes={{\r\n              switch: {\r\n                toggle: css.switchToggle,\r\n                track: css.track,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <Input\r\n          label={intl.formatMessage({ id: \"wallet.withdraw.address\" })}\r\n          value={address}\r\n          onChange={handleAddressChange}\r\n        />\r\n\r\n        <div className={css.amountBox}>\r\n          <Input\r\n            className={css.amountInput}\r\n            label={intl.formatMessage({ id: \"wallet.withdraw.amount\" })}\r\n            value={amount}\r\n            onChange={handleAmountChange}\r\n            onBlur={({ target }) => {\r\n              setAmount(amountChecker(target.value).toFixed(8));\r\n              focusStatus.current = false;\r\n            }}\r\n            onFocus={() => {\r\n              focusStatus.current = true;\r\n            }}\r\n          />\r\n          <div className={css.buttonAmount}>\r\n            <Button className={css.button} onClick={handleAmountAll}>\r\n              {intl.formatMessage({ id: \"wallet.withdraw.allButton\" })}\r\n            </Button>\r\n            <Button className={css.button} onClick={handleAmountMin}>\r\n              {intl.formatMessage({ id: \"wallet.withdraw.minButton\" })}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {getChainOnlyValue(currency, clsx(css.fee, css.feeHelp))}\r\n\r\n        <div className={css.feesWrapper}>\r\n          <div className={css.feesInnerWrapper}>\r\n            <Typography className={css.fee}>\r\n              {`${intl.formatMessage({\r\n                id: \"wallet.withdraw.fees\",\r\n              })} ${replaceNumbers(\r\n                method === \"DIRECT\" ? fees.direct : fees.fp,\r\n              )} ${currency}`}\r\n            </Typography>\r\n            <Typography className={css.fee}>\r\n              {`${intl.formatMessage({\r\n                id: \"wallet.withdraw.receive\",\r\n              })} ${replaceNumbers(receive.toFixed(8))} ${currency}`}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={css.sendWrapper}>\r\n          <SubmitButton\r\n            className={css.sendButton}\r\n            onClick={send}\r\n            loading={sendData.loading}>\r\n            {intl.formatMessage({ id: \"wallet.withdraw.sendButton\" })}\r\n          </SubmitButton>\r\n        </div>\r\n      </div>\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default Withdraw;\r\n","import React, { CSSProperties, FunctionComponent } from \"react\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport interface TemplateProps {\r\n  scrollbarStyle?: CSSProperties;\r\n}\r\n\r\nconst Template: FunctionComponent<TemplateProps> = ({ children }) => {\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={css.innerWrapper}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__24w8e\",\"innerWrapper\":\"style_innerWrapper__1VeHq\",\"breadRoot\":\"style_breadRoot__st5_V\",\"lists\":\"style_lists__1qszv\",\"nested\":\"style_nested__dTcgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"currencyWrapper\":\"style_currencyWrapper__36ahs\",\"labelWrapper\":\"style_labelWrapper__2NBou\",\"label\":\"style_label__28cWk\",\"value\":\"style_value__4Fn6l\",\"buttonWrapper\":\"style_buttonWrapper__1Fw6Y\",\"cell\":\"style_cell__1ZiRy\",\"leftBlock\":\"style_leftBlock__1joOI\",\"button\":\"style_button__gIwdI\",\"grow\":\"style_grow__2dre5\",\"iconWrapper\":\"style_iconWrapper__-UeO5\",\"icon\":\"style_icon__2v723\"};","import React, { FunctionComponent } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\nimport { Template } from \"../Components\";\r\nimport classes from \"./style.module.scss\";\r\n\r\nconst GemInfo: FunctionComponent<any> = () => {\r\n  const intl = useGetLocale();\r\n\r\n  return (\r\n    <Template>\r\n      <div className={classes.text}>\r\n        {intl.formatMessage({\r\n          id: \"wallet.gemInfo\",\r\n        })}\r\n      </div>\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default GemInfo;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"style_text___Zl7R\"};","import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Typography } from \"components\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nconst chainConfig: {\r\n  [key: string]: {\r\n    [key: string]: string[];\r\n  };\r\n} = {\r\n  Chain: {\r\n    BSC: [\"BNB\", \"FLOKI\", \"CAKE\", \"DPET\", \"DXCT\", \"BUSD\"],\r\n    ETH: [\"ETH\", \"FEY\"],\r\n    TRX: [\"TRX\", \"BTT\", \"USDT\"],\r\n    \"Avalanche C\": [\"AVAX\"],\r\n  },\r\n  Mainnet: {\r\n    Polygon: [\"MATIC\"],\r\n  },\r\n};\r\n\r\nexport const getChainOnlyValue = (currency?: string, className?: string) => {\r\n  if (currency) {\r\n    const returnValue = (value: string, type: string) => (\r\n      <Typography className={clsx(css.reminderText, css.boldText, className)}>\r\n        {value} {type} Only\r\n      </Typography>\r\n    );\r\n\r\n    const checkCurrency = currency.toUpperCase();\r\n\r\n    for (const type in chainConfig) {\r\n      const folder = chainConfig[type];\r\n\r\n      for (const coinType in folder) {\r\n        const coinsList = folder[coinType];\r\n        if (coinsList) {\r\n          const isCurrentCoinPresentInArray = coinsList.findIndex(\r\n            (value) => value === checkCurrency,\r\n          );\r\n\r\n          if (isCurrentCoinPresentInArray !== -1) {\r\n            return returnValue(coinType, type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n"],"sourceRoot":""}