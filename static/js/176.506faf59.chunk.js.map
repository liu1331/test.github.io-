{"version":3,"sources":["../../src/index.ts","../../src/utils.ts","../node_modules/scroll-polyfill/dist/index.esm.js"],"names":["isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","style","getComputedStyle","overflowY","overflowX","frame","ownerDocument","defaultView","frameElement","e","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","condition","message","Error","maybeValue","defaultValue","config","_listeners","_currentAnimationStep","_currentTime","_springTime","_currentValue","_currentVelocity","_isAnimating","_oscillationVelocityPairs","this","_config","fromValue","withDefault","toValue","stiffness","damping","mass","initialVelocity","overshootClamping","allowsOverdamping","restVelocityThreshold","restDisplacementThreshold","_reset","_notifyListeners","requestAnimationFrame","t","_step","Date","now","cancelAnimationFrame","updatedConfig","_advanceSpringToTime","baseConfig","listener","push","onStart","onUpdate","onStop","listenerFn","reduce","result","Object","values","indexOf","eventName","forEach","maybeListenerFn","timestamp","shouldNotifyListeners","deltaTime","Spring","MAX_DELTA_TIME_MS","c","m","k","v0","invariant","zeta","Math","sqrt","omega0","omega1","omega2","x0","oscillation","velocity","envelope","exp","sin","cos","sinh","cosh","_isSpringOvershooting","_isSpringAtRest","stop","isOvershooting","isNoVelocity","abs","defaultScrollToOptions","behavior","left","undefined","top","defaultScrollIntoViewOptions","block","inline","doScroll","target","smoothScroll","isNaN","scrollLeft","scrollTop","defaultSpringConfig","spring","update","Promise","r","assign","s","currentValue","start","x","y","all","startX","v","scrollX","startY","scrollY","clamp","value","min","max","isObject","val","type","isWindow","obj","window","getScrollingElement","doc","scrollingElement","documentElement","normTarget","document","isDetached","contains","createScrollTo","method","mapOptions","options","ctor","TypeError","assertScrollToOptions","opts","finalOpts","isRootScroller","scrollportWidth","scrollLeftMax","clampX","scrollportHeight","scrollTopMax","clampY","clampOptions","scrollTo","scroll","scrollBy","scrollIntoView","Boolean","windowWithViewport","scrollMode","boundary","checkBoundary","node","frames","cursor","parentElement","body","viewportWidth","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","pageXOffset","viewportY","pageYOffset","getBoundingClientRect","targetHeight","targetWidth","targetTop","targetRight","right","targetBottom","bottom","targetLeft","targetBlock","targetInline","computations","index","length","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","computeScrollIntoView","map","then","polyfillScrollToOptions","scope","nativeMethod","isScrollBy","fallbackMethod","Number","arguments","apply","polyfillScrollToViewOptions","Element","prototype","alignToTop","polyfill","force","undoFns","f"],"mappings":"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","file":"static/js/176.506faf59.chunk.js","sourcesContent":["/**\n *  @license\n *  Copyright 2017 Adam Miskiewicz\n *\n *  Use of this source code is governed by a MIT-style license that can be found\n *  in the LICENSE file or at https://opensource.org/licenses/MIT.\n */\n\nimport { invariant, withDefault } from \"./utils\";\n\nexport interface SpringConfig {\n  fromValue: number; // Starting value of the animation.\n  toValue: number; // Ending value of the animation.\n  stiffness: number; // The spring stiffness coefficient.\n  damping: number; // Defines how the spring’s motion should be damped due to the forces of friction.\n  mass: number; // The mass of the object attached to the end of the spring.\n  initialVelocity: number; // The initial velocity (in units/ms) of the object attached to the spring.\n  allowsOverdamping: boolean; // Whether or not the spring allows \"overdamping\" (a damping ratio > 1). Defaults to false.\n  overshootClamping: boolean; // False when overshooting is allowed, true when it is not. Defaults to false.\n  restVelocityThreshold: number; // When spring's velocity is below `restVelocityThreshold`, it is at rest. Defaults to .001.\n  restDisplacementThreshold: number; // When the spring's displacement (current value) is below `restDisplacementThreshold`, it is at rest. Defaults to .001.\n}\n\nexport type PartialSpringConfig = Partial<SpringConfig>;\n\nexport type SpringListenerFn = (spring: Spring) => void;\nexport interface SpringListener {\n  onUpdate?: SpringListenerFn;\n  onStart?: SpringListenerFn;\n  onStop?: SpringListenerFn;\n}\n\n/**\n * Implements a spring physics simulation based on the equations behind\n * damped harmonic oscillators (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n */\nexport class Spring {\n  static MAX_DELTA_TIME_MS = 1 / 60 * 1000 * 4; // advance 4 frames at max\n\n  _listeners: SpringListener[] = [];\n\n  private _config: SpringConfig;\n  private _currentAnimationStep: number = 0; // current requestAnimationFrame\n\n  private _currentTime: number = 0; // Current timestamp of animation in ms (real time)\n  private _springTime: number = 0; // Current time along the spring curve in ms (zero-based)\n\n  private _currentValue: number = 0; // the current value of the spring\n  private _currentVelocity: number = 0; // the current velocity of the spring\n  private _isAnimating: boolean = false;\n\n  private _oscillationVelocityPairs = [];\n\n  constructor(config: PartialSpringConfig = {}) {\n    this._config = {\n      fromValue: withDefault(config.fromValue, 0),\n      toValue: withDefault(config.toValue, 1),\n      stiffness: withDefault(config.stiffness, 100),\n      damping: withDefault(config.damping, 10),\n      mass: withDefault(config.mass, 1),\n      initialVelocity: withDefault(config.initialVelocity, 0),\n      overshootClamping: withDefault(config.overshootClamping, false),\n      allowsOverdamping: withDefault(config.allowsOverdamping, false),\n      restVelocityThreshold: withDefault(config.restVelocityThreshold, 0.001),\n      restDisplacementThreshold: withDefault(\n        config.restDisplacementThreshold,\n        0.001\n      )\n    };\n    this._currentValue = this._config.fromValue;\n    this._currentVelocity = this._config.initialVelocity;\n  }\n\n  /**\n   * If `fromValue` differs from `toValue`, or `initialVelocity` is non-zero,\n   * start the simulation and call the `onStart` listeners.\n   */\n  start(): this {\n    const { fromValue, toValue, initialVelocity } = this._config;\n\n    if (fromValue !== toValue || initialVelocity !== 0) {\n      this._reset();\n      this._isAnimating = true;\n\n      if (!this._currentAnimationStep) {\n        this._notifyListeners(\"onStart\");\n        this._currentAnimationStep = requestAnimationFrame((t: number) => {\n          this._step(Date.now());\n        });\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * If a simulation is in progress, stop it and call the `onStop` listeners.\n   */\n  stop(): this {\n    if (!this._isAnimating) {\n      return this;\n    }\n\n    this._isAnimating = false;\n    this._notifyListeners(\"onStop\");\n\n    if (this._currentAnimationStep) {\n      cancelAnimationFrame(this._currentAnimationStep);\n      this._currentAnimationStep = 0;\n    }\n\n    return this;\n  }\n\n  /**\n   * The spring's current position.\n   */\n  get currentValue(): number {\n    return this._currentValue;\n  }\n\n  /**\n   * The spring's current velocity in units / ms.\n   */\n  get currentVelocity(): number {\n    return this._currentVelocity; // give velocity in units/ms;\n  }\n\n  /**\n   * If the spring has reached its `toValue`, or if its velocity is below the\n   * `restVelocityThreshold`, it is considered at rest. If `stop()` is called\n   * during a simulation, both `isAnimating` and `isAtRest` will be false.\n   */\n  get isAtRest(): boolean {\n    return this._isSpringAtRest();\n  }\n\n  /**\n   * Whether or not the spring is currently emitting values.\n   *\n   * Note: this is distinct from whether or not it is at rest.\n   * See also `isAtRest`.\n   */\n  get isAnimating(): boolean {\n    return this._isAnimating;\n  }\n\n  /**\n   * Updates the spring config with the given values.  Values not explicitly\n   * supplied will be reused from the existing config.\n   */\n  updateConfig(updatedConfig: PartialSpringConfig): this {\n    // When we update the spring config, we reset the simulation to ensure the\n    // spring always moves the full distance between `fromValue` and `toValue`.\n    // To ensure that the simulation behaves correctly if those values aren't\n    // being changed in `updatedConfig`, we run the simulation with `_step()`\n    // and default `fromValue` and `initialVelocity` to their current values.\n\n    this._advanceSpringToTime(Date.now());\n\n    const baseConfig = {\n      fromValue: this._currentValue,\n      initialVelocity: this._currentVelocity\n    };\n\n    this._config = {\n      ...this._config,\n      ...baseConfig,\n      ...updatedConfig\n    };\n\n    this._reset();\n\n    return this;\n  }\n\n  /**\n   * The provided callback will be invoked when the simulation begins.\n   */\n  onStart(listener: SpringListenerFn): this {\n    this._listeners.push({ onStart: listener });\n    return this;\n  }\n\n  /**\n   * The provided callback will be invoked on each frame while the simulation is\n   * running.\n   */\n  onUpdate(listener: SpringListenerFn): this {\n    this._listeners.push({ onUpdate: listener });\n    return this;\n  }\n\n  /**\n   * The provided callback will be invoked when the simulation ends.\n   */\n  onStop(listener: SpringListenerFn): this {\n    this._listeners.push({ onStop: listener });\n    return this;\n  }\n\n  /**\n   * Remove a single listener from this spring.\n   */\n  removeListener(listenerFn: SpringListenerFn): this {\n    this._listeners = this._listeners.reduce(\n      (result, listener) => {\n        const foundListenerFn =\n          Object.values(listener).indexOf(listenerFn) !== -1;\n        if (!foundListenerFn) {\n          result.push(listener);\n        }\n        return result;\n      },\n      [] as SpringListener[]\n    );\n    return this;\n  }\n\n  /**\n   * Removes all listeners from this spring.\n   */\n  removeAllListeners(): this {\n    this._listeners = [];\n    return this;\n  }\n\n  private _reset() {\n    this._currentTime = Date.now();\n    this._springTime = 0.0;\n    this._currentValue = this._config.fromValue;\n    this._currentVelocity = this._config.initialVelocity;\n  }\n\n  private _notifyListeners(eventName: keyof SpringListener) {\n    this._listeners.forEach((listener: Partial<SpringListener>) => {\n      const maybeListenerFn = listener[eventName];\n      if (typeof maybeListenerFn === \"function\") {\n        maybeListenerFn(this);\n      }\n    });\n  }\n\n  /**\n   * `_step` is the main loop.  While the animation is running, it updates the\n   * current state once per frame, and schedules the next frame if the spring is\n   * not yet at rest.\n   */\n  private _step(timestamp: number) {\n    this._advanceSpringToTime(timestamp, true);\n\n    // check `_isAnimating`, in case `stop()` got called during\n    // `_advanceSpringToTime()`\n    if (this._isAnimating) {\n      this._currentAnimationStep = requestAnimationFrame((t: number) =>\n        this._step(Date.now())\n      );\n    }\n  }\n\n  private _advanceSpringToTime(\n    timestamp: number,\n    shouldNotifyListeners: boolean = false\n  ) {\n    // `_advanceSpringToTime` updates `_currentTime` and triggers the listeners.\n    // Because of these side effects, it's only safe to call when an animation\n    // is already in-progress.\n    if (!this._isAnimating) {\n      return;\n    }\n\n    let deltaTime = timestamp - this._currentTime;\n\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at slower speed than jumping to the end.\n    if (deltaTime > Spring.MAX_DELTA_TIME_MS) {\n      deltaTime = Spring.MAX_DELTA_TIME_MS;\n    }\n    this._springTime += deltaTime;\n\n    const c = this._config.damping;\n    const m = this._config.mass;\n    const k = this._config.stiffness;\n    const fromValue = this._config.fromValue;\n    const toValue = this._config.toValue;\n    const v0 = -this._config.initialVelocity;\n\n    invariant(m > 0, \"Mass value must be greater than 0\");\n    invariant(k > 0, \"Stiffness value must be greater than 0\");\n    invariant(c > 0, \"Damping value must be greater than 0\");\n\n    let zeta = c / (2 * Math.sqrt(k * m)); // damping ratio (dimensionless)\n    const omega0 = Math.sqrt(k / m) / 1000; // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    const omega2 = omega0 * Math.sqrt(zeta * zeta - 1.0); // frequency of damped oscillation\n    const x0 = toValue - fromValue; // initial displacement of the spring at t = 0\n\n    if (zeta > 1 && !this._config.allowsOverdamping) {\n      zeta = 1;\n    }\n\n    let oscillation = 0.0;\n    let velocity = 0.0;\n    const t = this._springTime;\n    if (zeta < 1) {\n      // Under damped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      oscillation =\n        toValue -\n        envelope *\n          ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) +\n            x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity =\n        zeta *\n          omega0 *\n          envelope *\n          (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 +\n            x0 * Math.cos(omega1 * t)) -\n        envelope *\n          (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) -\n            omega1 * x0 * Math.sin(omega1 * t));\n    } else if (zeta === 1) {\n      // Critically damped\n      const envelope = Math.exp(-omega0 * t);\n      oscillation = toValue - envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity =\n        envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    } else {\n      // Overdamped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      oscillation =\n        toValue -\n        envelope *\n          ((v0 + zeta * omega0 * x0) * Math.sinh(omega2 * t) +\n            omega2 * x0 * Math.cosh(omega2 * t)) /\n          omega2;\n      velocity =\n        envelope *\n          zeta *\n          omega0 *\n          (Math.sinh(omega2 * t) * (v0 + zeta * omega0 * x0) +\n            x0 * omega2 * Math.cosh(omega2 * t)) /\n          omega2 -\n        envelope *\n          (omega2 * Math.cosh(omega2 * t) * (v0 + zeta * omega0 * x0) +\n            omega2 * omega2 * x0 * Math.sinh(omega2 * t)) /\n          omega2;\n    }\n\n    this._currentTime = timestamp;\n    this._currentValue = oscillation;\n    this._currentVelocity = velocity;\n\n    if (!shouldNotifyListeners) {\n      return;\n    }\n\n    this._notifyListeners(\"onUpdate\");\n    if (!this._isAnimating) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // If the Spring is overshooting (when overshoot clamping is on), or if the\n    // spring is at rest (based on the thresholds set in the config), stop the\n    // animation.\n    if (this._isSpringOvershooting() || this._isSpringAtRest()) {\n      if (k !== 0) {\n        // Ensure that we end up with a round value\n        this._currentValue = toValue;\n        this._currentVelocity = 0;\n        this._notifyListeners(\"onUpdate\");\n      }\n\n      this.stop();\n      return;\n    }\n  }\n\n  private _isSpringOvershooting() {\n    const { stiffness, fromValue, toValue, overshootClamping } = this._config;\n    let isOvershooting = false;\n    if (overshootClamping && stiffness !== 0) {\n      if (fromValue < toValue) {\n        isOvershooting = this._currentValue > toValue;\n      } else {\n        isOvershooting = this._currentValue < toValue;\n      }\n    }\n    return isOvershooting;\n  }\n\n  private _isSpringAtRest() {\n    const {\n      stiffness,\n      toValue,\n      restDisplacementThreshold,\n      restVelocityThreshold\n    } = this._config;\n\n    const isNoVelocity =\n      Math.abs(this._currentVelocity) <= restVelocityThreshold;\n    const isNoDisplacement =\n      stiffness !== 0 &&\n      Math.abs(toValue - this._currentValue) <= restDisplacementThreshold;\n    return isNoDisplacement && isNoVelocity;\n  }\n}\n","/**\n *  @license\n *  Copyright 2017 Adam Miskiewicz\n *\n *  Use of this source code is governed by a MIT-style license that can be found\n *  in the LICENSE file or at https://opensource.org/licenses/MIT.\n */\n\nexport function invariant(condition: boolean, message: string): void {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nexport function withDefault<X>(maybeValue: X | undefined, defaultValue: X): X {\n  return typeof maybeValue !== \"undefined\" && maybeValue !== null\n    ? (maybeValue as X)\n    : defaultValue;\n}\n","import computeScrollIntoView from 'compute-scroll-into-view';\nimport { Spring } from 'wobble';\n\n// @see https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions\r\nconst defaultScrollToOptions = {\r\n    behavior: 'auto',\r\n    left: undefined,\r\n    top: undefined,\r\n};\r\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollInToView\r\nconst defaultScrollIntoViewOptions = {\r\n    behavior: 'auto',\r\n    block: 'start',\r\n    inline: 'nearest',\r\n};\r\nconst doScroll = (target, left, top, behavior) => {\r\n    if (behavior === 'smooth') {\r\n        return smoothScroll(target, left, top);\r\n    }\r\n    // scroll({left: NaN, top: NaN}) => scroll({})\r\n    if (!isNaN(left)) {\r\n        target.scrollLeft = left;\r\n    }\r\n    if (!isNaN(top)) {\r\n        target.scrollTop = top;\r\n    }\r\n};\r\nconst defaultSpringConfig = {\r\n    stiffness: 170,\r\n    damping: 26,\r\n    mass: 1,\r\n    restVelocityThreshold: 0.01,\r\n    restDisplacementThreshold: 0.1,\r\n};\r\nconst spring = (fromValue, toValue, update) => new Promise((r) => new Spring(Object.assign(Object.assign({}, defaultSpringConfig), { fromValue, toValue }))\r\n    .onUpdate((s) => update(s.currentValue))\r\n    .onStop(() => r(void 0))\r\n    .start());\r\nconst smoothScroll = (target, x, y) => {\r\n    const scrollX = () => {\r\n        if (isNaN(x)) {\r\n            return;\r\n        }\r\n        const startX = target.scrollLeft;\r\n        if (startX === x) {\r\n            return;\r\n        }\r\n        return spring(startX, x, (v) => (target.scrollLeft = v));\r\n    };\r\n    const scrollY = () => {\r\n        if (isNaN(y)) {\r\n            return;\r\n        }\r\n        const startY = target.scrollTop;\r\n        if (startY === y) {\r\n            return;\r\n        }\r\n        return spring(startY, y, (v) => (target.scrollTop = v));\r\n    };\r\n    return Promise.all([scrollX(), scrollY()]);\r\n};\r\nconst clampOptions = (target, { left, top }) => {\r\n    const isRootScroller = target === getScrollingElement(target.ownerDocument);\r\n    const clampX = () => {\r\n        if (isNaN(left)) {\r\n            return;\r\n        }\r\n        const scrollportWidth = isRootScroller\r\n            ? target.ownerDocument.documentElement.clientWidth // for IE & Edge\r\n            : target.clientWidth;\r\n        const scrollLeftMax = target.scrollWidth - scrollportWidth;\r\n        return clamp(left, 0, scrollLeftMax);\r\n    };\r\n    const clampY = () => {\r\n        if (isNaN(top)) {\r\n            return;\r\n        }\r\n        const scrollportHeight = isRootScroller\r\n            ? target.ownerDocument.documentElement.clientHeight\r\n            : target.clientHeight;\r\n        const scrollTopMax = target.scrollHeight - scrollportHeight;\r\n        return clamp(top, 0, scrollTopMax);\r\n    };\r\n    return { left: clampX(), top: clampY() };\r\n};\r\nconst clamp = (value, min, max) => {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\nconst isObject = (val) => {\r\n    const type = typeof val;\r\n    return (type === 'object' && val != null) || type === 'function';\r\n};\r\nconst isWindow = (obj) => obj.window === obj;\r\n// @see: https://codesandbox.io/s/assert-scrolltooptions-y5bm4\r\nconst assertScrollToOptions = (options, target, method) => {\r\n    if (!isObject(options)) {\r\n        const ctor = isWindow(target) ? 'Window' : 'Element';\r\n        throw new TypeError(`Failed to execute '${method}' on '${ctor}': parameter 1 ('options') is not an object.`);\r\n    }\r\n};\r\nconst getScrollingElement = (doc) => {\r\n    // more robust: https://github.com/mathiasbynens/document.scrollingElement\r\n    return doc.scrollingElement || doc.documentElement;\r\n};\r\nconst normTarget = (obj) => isWindow(obj)\r\n    ? getScrollingElement(obj.document)\r\n    : obj;\r\nconst isDetached = (target) => {\r\n    return !(target && target.ownerDocument.documentElement.contains(target));\r\n};\r\nconst createScrollTo = (method, mapOptions) => {\r\n    return (target, options) => {\r\n        if (options == null) {\r\n            return;\r\n        }\r\n        assertScrollToOptions(options, target, method);\r\n        target = normTarget(target);\r\n        if (isDetached(target)) {\r\n            return;\r\n        }\r\n        const opts = Object.assign(Object.assign({}, defaultScrollToOptions), options);\r\n        const finalOpts = mapOptions ? mapOptions(opts, target) : opts;\r\n        const { left, top } = clampOptions(target, finalOpts);\r\n        return doScroll(target, left, top, finalOpts.behavior);\r\n    };\r\n};\r\nconst scrollTo = createScrollTo('scrollTo');\r\nconst scroll = createScrollTo('scroll');\r\nconst scrollBy = createScrollTo('scrollBy', (opts, target) => {\r\n    if (!isNaN(opts.left)) {\r\n        opts.left += target.scrollLeft;\r\n    }\r\n    if (!isNaN(opts.top)) {\r\n        opts.top += target.scrollTop;\r\n    }\r\n    return opts;\r\n});\r\nconst scrollIntoView = (target, options) => {\r\n    target = normTarget(target);\r\n    if (isDetached(target)) {\r\n        return;\r\n    }\r\n    const opts = Object.assign(Object.assign({}, defaultScrollIntoViewOptions), (isObject(options)\r\n        ? options\r\n        : !(options == null || Boolean(options)) && { block: 'end' }));\r\n    return Promise.all(computeScrollIntoView(target, opts).map(({ el, top, left }) => doScroll(el, left, top, opts.behavior))).then(() => { });\r\n};\r\nconst polyfillScrollToOptions = (scope, method) => {\r\n    const nativeMethod = scope[method];\r\n    const isScrollBy = method === 'scrollBy';\r\n    const fallbackMethod = isScrollBy\r\n        ? function (x, y) {\r\n            // scrollBy(NaN, NaN) => no effect\r\n            scrollBy(this, {\r\n                left: isNaN(x) ? undefined : Number(x),\r\n                top: isNaN(y) ? undefined : Number(y),\r\n            });\r\n        }\r\n        : function (x, y) {\r\n            // scroll(NaN, NaN) => scroll(0, 0)\r\n            scrollTo(this, { left: Number(x) || 0, top: Number(y) || 0 });\r\n        };\r\n    scope[method] = function () {\r\n        if (arguments.length === 1) {\r\n            return (isScrollBy ? scrollBy : scrollTo)(this, arguments[0]);\r\n        }\r\n        return (nativeMethod || fallbackMethod).apply(this, arguments);\r\n    };\r\n    return () => {\r\n        scope[method] = nativeMethod;\r\n    };\r\n};\r\nconst polyfillScrollToViewOptions = () => {\r\n    const nativeMethod = Element.prototype.scrollIntoView;\r\n    const fallbackMethod = function (alignToTop) {\r\n        return scrollIntoView(this, alignToTop);\r\n    };\r\n    Element.prototype.scrollIntoView = function () {\r\n        const options = arguments[0];\r\n        if (isObject(options)) {\r\n            return scrollIntoView(this, options);\r\n        }\r\n        return (nativeMethod || fallbackMethod).apply(this, arguments);\r\n    };\r\n    return () => {\r\n        Element.prototype.scrollIntoView = nativeMethod;\r\n    };\r\n};\r\nconst polyfill = ({ force = false } = {}) => {\r\n    if (typeof document !== 'undefined' &&\r\n        (force || !('scrollBehavior' in document.documentElement.style))) {\r\n        const undoFns = [\r\n            polyfillScrollToOptions(window, 'scroll'),\r\n            polyfillScrollToOptions(window, 'scrollBy'),\r\n            polyfillScrollToOptions(window, 'scrollTo'),\r\n            polyfillScrollToOptions(Element.prototype, 'scroll'),\r\n            polyfillScrollToOptions(Element.prototype, 'scrollBy'),\r\n            polyfillScrollToOptions(Element.prototype, 'scrollTo'),\r\n            polyfillScrollToViewOptions(),\r\n        ];\r\n        return () => {\r\n            undoFns.forEach((f) => f());\r\n        };\r\n    }\r\n    return () => { };\r\n};\n\nexport { polyfill as default, scroll, scrollBy, scrollIntoView, scrollTo };\n"],"sourceRoot":""}