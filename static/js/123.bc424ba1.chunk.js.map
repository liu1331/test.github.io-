{"version":3,"sources":["pages/TfaChallenge/Loading/index.tsx","pages/TfaChallenge/index.tsx","pages/TfaChallenge/style.module.scss"],"names":["Loading","className","css","loadingWrapper","size","circularWidth","color","modalsLoaderColor","inputClasses","input","TfaChallenge","isOpen","intl","useGetLocale","useLocalStorage","token","setToken","tfa","setTfa","setUser","useUser","useState","code","setCode","useFetch","fetch","called","loading","data","error","close","useModalLocation","useEffect","closeModal","handleChangeCode","event","target","value","handleTFA","a","variables","response","success","open","onClose","innerWrapper","animation","in","title","formatMessage","id","description","label","onChange","classes","errorWrapper","onClick","module","exports"],"mappings":"6NAgBeA,EARC,WACd,OACE,qBAAKC,UAAWC,IAAIC,eAApB,SACE,cAAC,mBAAD,CAAkBC,KAAM,GAAIC,cAAe,EAAGC,MAAOC,SCcrDC,EAAe,CACnBC,MAAOP,IAAIO,OA0GEC,UAvGM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAChBC,EAAOC,yBADmC,EAGtBC,YAAgB,SAHM,mBAGzCC,EAHyC,KAGlCC,EAHkC,OAI1BF,YAAgB,OAJU,mBAIzCG,EAJyC,KAIpCC,EAJoC,KAKxCC,EAAYC,oBAAZD,QALwC,EAMxBE,mBAAS,IANe,mBAMzCC,EANyC,KAMnCC,EANmC,OAQEC,YAChD,yBAT8C,mBAQzCC,EARyC,YAQhCC,EARgC,EAQhCA,OAAQC,EARwB,EAQxBA,QAASC,EARe,EAQfA,KAAMC,EARS,EAQTA,MAG/BC,EAAUC,cAAVD,MAERE,qBAAU,WACJjB,GAIJG,EAAO,MACN,CAACA,EAAQH,IAEZ,IAAMkB,EAAa,WACjBH,KAYII,EAA2C,SAACC,GAChDZ,EAAQY,EAAMC,OAAOC,QAGjBC,EAAS,uCAAG,8BAAAC,EAAA,sEACOd,EAAM,CAAEe,UAAW,CAAElB,UAD5B,OACVmB,EADU,QAGhB,UAAIA,EAASb,YAAb,aAAI,EAAec,UACjBT,IAJc,2CAAH,qDAQfD,qBAAU,WACHN,IAAUC,IAAWE,IAAS,OAACD,QAAD,IAACA,OAAD,EAACA,EAAMc,WAI1CxB,EAAO,IACPK,EAAQ,OACP,CAACG,EAAQC,EAASC,EAAMC,IA8B3B,OACE,cAAC,QAAD,CAAOc,KAAMhC,EAAQiC,QA3DH,WAClBX,IACIhB,IACFE,EAAQ,MACRD,EAAO,IACPF,EAAS,MAsDX,SACE,sBAAKf,UAAWC,IAAI2C,aAApB,UACGlB,GACC,cAAC,aAAD,CACE1B,UAAWC,IAAIC,eACf2C,UAAU,OACVC,GAAIpB,EAHN,SAIE,cAAC,EAAD,MAIJ,cAAC,aAAD,CAAYmB,UAAU,OAAOC,IAAKpB,EAAlC,SAtCF,eAAC,IAAD,CACEqB,MAAOpC,EAAKqC,cAAc,CAAEC,GAAI,4BAChCC,YAAavC,EAAKqC,cAAc,CAC9BC,GAAI,kCAHR,UAKE,cAAC,QAAD,CACEA,GAAG,qBACHE,MAAOxC,EAAKqC,cAAc,CAAEC,GAAI,4BAChCb,MAAOf,EACP+B,SAAUnB,EACVoB,QAAS9C,IAGVqB,GACC,qBAAK5B,UAAWC,IAAIqD,aAApB,SACE,cAAC,iBAAD,CAAgB1B,OAAK,EAArB,SAAuBA,MAI3B,cAAC,IAAD,CAAc2B,QAASlB,EAAvB,SACG1B,EAAKqC,cAAc,CAAEC,GAAI,2C,oBCzGpCO,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,aAAe,4BAA4B,eAAiB,8BAA8B,aAAe,4BAA4B,aAAe,4BAA4B,MAAQ","file":"static/js/123.bc424ba1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { CircularProgress } from \"components\";\r\n\r\nimport { modalsLoaderColor } from \"sass/styleVariables\";\r\n\r\nimport css from \"../style.module.scss\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={css.loadingWrapper}>\r\n      <CircularProgress size={70} circularWidth={2} color={modalsLoaderColor} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  FormHelperText,\r\n  Input,\r\n  InputProps,\r\n  Modal,\r\n  Transition,\r\n} from \"components\";\r\nimport { useFetch, useLocalStorage, useModalLocation } from \"hooks\";\r\n\r\nimport { SubmitButton, Template } from \"pages/Auth/components\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport css from \"./style.module.scss\";\r\nimport { useUser } from \"providers\";\r\nimport { ModalsProps } from \"config/routes\";\r\n\r\ninterface FetchData {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\nconst inputClasses = {\r\n  input: css.input,\r\n};\r\n\r\nconst TfaChallenge = ({ isOpen }: ModalsProps) => {\r\n  const intl = useGetLocale();\r\n\r\n  const [token, setToken] = useLocalStorage(\"token\");\r\n  const [tfa, setTfa] = useLocalStorage(\"2fa\");\r\n  const { setUser } = useUser();\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const [fetch, { called, loading, data, error }] = useFetch<FetchData>(\r\n    \"account/tfa-challenge\",\r\n  );\r\n  const { close } = useModalLocation();\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      return;\r\n    }\r\n\r\n    setTfa(\"\");\r\n  }, [setTfa, token]);\r\n\r\n  const closeModal = () => {\r\n    close();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeModal();\r\n    if (tfa) {\r\n      setUser(null);\r\n      setTfa(\"\");\r\n      setToken(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChangeCode: InputProps[\"onChange\"] = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n\r\n  const handleTFA = async () => {\r\n    const response = await fetch({ variables: { code } });\r\n\r\n    if (response.data?.success) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!called || loading || error || !data?.success) {\r\n      return;\r\n    }\r\n\r\n    setTfa(\"\");\r\n    setCode(\"\");\r\n  }, [called, loading, data, error]);\r\n\r\n  const renderView = () => {\r\n    return (\r\n      <Template\r\n        title={intl.formatMessage({ id: \"form.tfaChallenge.title\" })}\r\n        description={intl.formatMessage({\r\n          id: \"form.tfaChallenge.description\",\r\n        })}>\r\n        <Input\r\n          id=\"tfa-challenge-code\"\r\n          label={intl.formatMessage({ id: \"form.tfaChallenge.input\" })}\r\n          value={code}\r\n          onChange={handleChangeCode}\r\n          classes={inputClasses}\r\n        />\r\n\r\n        {error && (\r\n          <div className={css.errorWrapper}>\r\n            <FormHelperText error>{error}</FormHelperText>\r\n          </div>\r\n        )}\r\n\r\n        <SubmitButton onClick={handleTFA}>\r\n          {intl.formatMessage({ id: \"form.tfaChallenge.button\" })}\r\n        </SubmitButton>\r\n      </Template>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal open={isOpen} onClose={handleClose}>\r\n      <div className={css.innerWrapper}>\r\n        {loading && (\r\n          <Transition\r\n            className={css.loadingWrapper}\r\n            animation=\"fade\"\r\n            in={loading}>\r\n            <Loading />\r\n          </Transition>\r\n        )}\r\n\r\n        <Transition animation=\"fade\" in={!loading}>\r\n          {renderView()}\r\n        </Transition>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TfaChallenge;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"innerWrapper\":\"style_innerWrapper__3S_B-\",\"loadingWrapper\":\"style_loadingWrapper__3KRvW\",\"errorWrapper\":\"style_errorWrapper__1Tiks\",\"submitButton\":\"style_submitButton__100Po\",\"input\":\"style_input__2Ch11\"};"],"sourceRoot":""}