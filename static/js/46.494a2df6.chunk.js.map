{"version":3,"sources":["pages/Diamonds/style.module.scss","pages/Diamonds/Game/style.module.scss","pages/Diamonds/Controller/style.module.scss","pages/Diamonds/Controller/components/Bet/style.module.scss","pages/Diamonds/Controller/components/Bet/components/Input/style.module.scss","pages/Diamonds/Controller/components/Bet/components/AutoBetPanel/style.module.scss","components/HotKeys/Listener/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","pages/Diamonds/Game/index.tsx","pages/Diamonds/Controller/components/Bet/components/Input/index.tsx","pages/Diamonds/Controller/components/Bet/components/AutoBetPanel/index.tsx","pages/Diamonds/Controller/components/Bet/index.tsx","pages/Diamonds/Controller/hooks/useAutoGame.ts","pages/Diamonds/Controller/index.tsx","pages/Diamonds/Controller/hooks/useManualGame.ts","pages/Diamonds/page.tsx","pages/Diamonds/index.tsx","pages/Diamonds/Controller/components/Reducer/index.ts","pages/Diamonds/Controller/components/Bet/components/BetButton/index.tsx","pages/Diamonds/Controller/components/Bet/components/BetButton/style.module.scss","pages/Diamonds/Controller/components/Bet/components/Switch/index.tsx","pages/Diamonds/Controller/components/Bet/components/Switch/style.module.scss","pages/Diamonds/Controller/components/Reducer/actions/actionTypes.ts","pages/Diamonds/Controller/components/Reducer/actions/combinations.ts","pages/Diamonds/Controller/components/Reducer/context.ts","pages/Diamonds/Controller/components/Reducer/reducer.ts","pages/Diamonds/Controller/components/Reducer/provider.tsx"],"names":["module","exports","ActiveKeys","useHotKeyListener","callbacks","useHotKeys","isHotkeyActive","isHotKeysPaused","useEffect","keyDownListenerIgnore","event","isKeyboardEvent","target","tagName","toLowerCase","code","preventDefault","keyListener","key","callbackKeyA","callbackKeyS","callbackSpace","callbackKeyQ","callbackKeyW","callbackKeyE","callbackKeyR","callbackKeyT","callbackKeyY","callbackKeyD","window","addEventListener","removeEventListener","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","DiamondsGame","useCoins","selectedCoin","showInUSD","controlState","useDiamondsControl","field","betAmount","outcome","diamondsInCombination","repeatDiamonds","positions","useMemo","map","diamondIndex","isWinCombination","isNumber","get","Math","random","className","styles","root","firstDiamond","secondDiamond","isUsdAmount","coin","Input","topLabel","topLabelValue","withRefreshIcon","withoutLabel","withLoopIcon","coinIconIsLeftward","refreshAction","setAmountFromConfig","maxButtonOnClickHandler","dollarPrefix","warningModal","classes","props","refreshField","disabled","undefined","String","buttons","onClick","clsx","topLabelTitle","wrapper","inputRoot","inputWithoutLabel","inputWithLeftwardLabel","input","leftwardCoinIconWrapper","coinImg","draggable","btnsWrapper","mobileButtons","AutoBetPanel","intl","autoModeValues","autoBetsIsStart","enableDollarPrefix","inputOnChangeHandler","inputOnBlurHandler","showUSD","controlDispatch","stopOnProfitUsdValue","stopOnLossUsdValue","autoInputs","formatMessage","id","onChange","actions","SET_BET_AMOUNT","onBlur","numberOfBets","SET_NUMBER_OF_BETS","values","labels","name","onWinModeType","type","SET_ON_WIN_MODE_TYPE","mode","nestedComponents","1","label","onWin","SET_ON_WIN","onLossModeType","SET_ON_LOSS_MODE_TYPE","onLoss","SET_ON_LOSS","stopOnProfit","SET_STOP_ON_PROFIT","stopOnLoss","SET_STOP_ON_LOSS","getUsdValue","coinPrice","coinValue","Number","price","Bet","manualBetAction","fetchPlayLoading","autoBetAction","stopAutoBets","useGetLocale","useState","isAutoMode","setAutoMode","isWarningOpen","setIsWarningOpen","coinsConfiguration","coinsPrices","useCallback","actionType","replace","checkingValue","isFinite","isNaN","selectedCoinConfig","find","config","limitBet","maximumBet","minimumBet","amount","min","balance","toFixed","toDecimal","div","mul","allowNegativeNumbers","enableLimitation","valueString","parseFloat","abs","convertedBalance","Warning","isOpen","onClose","callBack","warning","Switch","leftText","rightText","checked","setChecked","betControl","manualInput","BetButton","autoBetBtn","changeBetWithConditions","bet","onWinOrLoss","autoMode","baseBet","stopAutoMode","resultBet","add","checkStopAutoBetsConditions","pnlSum","stopOnLossNumber","stopOnProfitNumber","lt","gt","usdToCurrency","error","track","errors","custom","place","isStopAutoBets","autoStop","Controller","liveStatsIsOpen","liveStatsHandleClose","useSeed","clientSeed","rotateClientSeed","updateNonce","language","useLocale","useLocalStorage","token","playEffect","useSoundSystemControl","controlFunctions","getSoundEffectNames","gamePathNames","DIAMONDS","placeAndWin","useFetch","playGameFetch","playFetchLoading","loading","play","a","actualBet","reqParams","locale","client_seed","seed","bet_amt","variables","data","success","notifyBarManager","timeOut","message","win","isSetManually","coinsManager","coinValueUpdate","PLAY","roll_numbers","liveStatsManager","addBet","profit","useManualGame","setAutoBetAction","SET_AUTO_BETS_IS_START","startAutoBets","floor","isInfinity","sleep","useAutoGame","getConfiguration","fetch","process","configurationResponse","json","configuration","SET_COINS_CONFIGURATION","coins","coinConfig","minimum_bet","maximum_bet","console","log","reset","LiveStats","handleClose","BettingInformation","React","lazy","LazyComponentLoader","DiamondsPage","isSoundOpen","setIsSoundOpen","hotKeyIsOpen","setHotKeyIsOpen","setLiveStatsIsOpen","bettingInformationIsOpen","setBettingInformationIsOpen","SoundModal","HotKeys","Game","optionsWrapper","OptionsButton","withSound","soundOnClick","liveStatOnclick","hotKeysOnClick","bettingInformationOnClick","statisticsWrapper","game","withFairness","DiamondsWrapper","Helmet","content","http-equiv","Seed","gameName","useContext","Context","children","button","switchWrapper","highlight","option","switchTrack","SET_FIELD","SET_ACTUAL_BET","SET_OUTCOME","SET_LIVE_STATS","calculateDiamonds","defaultValue","diamondsCount","Map","set","repeatedDiamonds","forEach","count","push","singleDiamond","initialDiamondsControlState","createContext","fill","autoModeActionFieldMatching","diamondsControlReducer","state","action","calculates","diamonds","DiamondsControlProvider","useReducer","Provider"],"mappings":"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","file":"static/js/46.494a2df6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"optionsWrapper\":\"style_optionsWrapper__1bFs4\",\"statisticsWrapper\":\"style_statisticsWrapper__24pxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__2ms-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3DNd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"style_buttons__36rwZ\",\"manualInput\":\"style_manualInput__3boHG\",\"betControl\":\"style_betControl__3V8sP\",\"autoBetBtn\":\"style_autoBetBtn__3CTTl\",\"warning\":\"style_warning__piOLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"diamonds\":\"style_diamonds__2kl_R\",\"root\":\"style_root__3Jarv\",\"topLabel\":\"style_topLabel__2YK5j\",\"topLabelTitle\":\"style_topLabelTitle__I_0mL\",\"topLabelValue\":\"style_topLabelValue__25d7p\",\"wrapper\":\"style_wrapper__3N0q3\",\"input\":\"style_input__2lm3i\",\"inputRoot\":\"style_inputRoot__1oNQ7\",\"inputWithoutLabel\":\"style_inputWithoutLabel__2lKJZ\",\"inputWithLeftwardLabel\":\"style_inputWithLeftwardLabel__eK_ro\",\"disabled\":\"style_disabled__1Y4CD\",\"btnsWrapper\":\"style_btnsWrapper__EVejX\",\"coinImg\":\"style_coinImg__13Cu-\",\"leftwardCoinIconWrapper\":\"style_leftwardCoinIconWrapper__1gKzy\",\"mobileButtons\":\"style_mobileButtons__1MQcN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autoInputs\":\"style_autoInputs__2YgXt\"};","import { useEffect } from \"react\";\r\nimport { isKeyboardEvent } from \"utils/guards\";\r\nimport { useHotKeys } from \"../Provider\";\r\n\r\nenum ActiveKeys {\r\n  KeyA,\r\n  KeyS,\r\n  Space,\r\n  KeyQ,\r\n  KeyW,\r\n  KeyE,\r\n  KeyR,\r\n  KeyT,\r\n  KeyY,\r\n  KeyD,\r\n}\r\n\r\nexport interface HotKeysCallbacks {\r\n  callbackKeyA?: () => void;\r\n  callbackKeyS?: () => void;\r\n  callbackSpace?: () => void;\r\n  callbackKeyQ?: () => void;\r\n  callbackKeyW?: () => void;\r\n  callbackKeyE?: () => void;\r\n  callbackKeyR?: () => void;\r\n  callbackKeyT?: () => void;\r\n  callbackKeyY?: () => void;\r\n  callbackKeyD?: () => void;\r\n}\r\n\r\nexport const useHotKeyListener = (callbacks: HotKeysCallbacks) => {\r\n  const { isHotkeyActive, isHotKeysPaused } = useHotKeys();\r\n\r\n  useEffect(() => {\r\n    const keyDownListenerIgnore = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    const keyListener = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n        const {\r\n          callbackKeyA,\r\n          callbackKeyS,\r\n          callbackSpace,\r\n          callbackKeyQ,\r\n          callbackKeyW,\r\n          callbackKeyE,\r\n          callbackKeyR,\r\n          callbackKeyT,\r\n          callbackKeyY,\r\n          callbackKeyD,\r\n        } = callbacks;\r\n        switch (key) {\r\n          case \"KeyA\":\r\n            if (callbackKeyA) callbackKeyA();\r\n            break;\r\n          case \"KeyS\":\r\n            if (callbackKeyS) callbackKeyS();\r\n            break;\r\n          case \"Space\":\r\n            if (callbackSpace) callbackSpace();\r\n            break;\r\n          case \"KeyQ\":\r\n            if (callbackKeyQ) callbackKeyQ();\r\n            break;\r\n          case \"KeyW\":\r\n            if (callbackKeyW) callbackKeyW();\r\n            break;\r\n          case \"KeyE\":\r\n            if (callbackKeyE) callbackKeyE();\r\n            break;\r\n          case \"KeyR\":\r\n            if (callbackKeyR) callbackKeyR();\r\n            break;\r\n          case \"KeyT\":\r\n            if (callbackKeyT) callbackKeyT();\r\n            break;\r\n          case \"KeyY\":\r\n            if (callbackKeyY) callbackKeyY();\r\n            break;\r\n          case \"KeyD\":\r\n            if (callbackKeyD) callbackKeyD();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", keyDownListenerIgnore);\r\n    window.addEventListener(\"keyup\", keyListener);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyDownListenerIgnore);\r\n      window.removeEventListener(\"keyup\", keyListener);\r\n    };\r\n  }, [isHotkeyActive, isHotKeysPaused, callbacks]);\r\n};\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { FC, useMemo } from \"react\";\r\n\r\nimport { isNumber } from \"utils\";\r\nimport { useCoins } from \"hooks\";\r\n\r\nimport { Combinations, Position, Field } from \"games/Diamonds\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport { useDiamondsControl } from \"../Controller/components/Reducer\";\r\n\r\nconst DiamondsGame: FC = () => {\r\n  const { selectedCoin, showInUSD } = useCoins([\"selectedCoin\", \"showInUSD\"]);\r\n  const { controlState } = useDiamondsControl();\r\n  const { field, betAmount, outcome, diamondsInCombination, repeatDiamonds } =\r\n    controlState;\r\n\r\n  const positions = useMemo(\r\n    () => (\r\n      <Field>\r\n        {field.map((diamondIndex) => (\r\n          <Position\r\n            key={`position_${Math.random()}`}\r\n            diamondIndex={diamondIndex}\r\n            isWinCombination={\r\n              isNumber(diamondIndex)\r\n                ? (repeatDiamonds.get(diamondIndex) || 0) > 1\r\n                : false\r\n            }\r\n          />\r\n        ))}\r\n      </Field>\r\n    ),\r\n    [repeatDiamonds, field],\r\n  );\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Combinations\r\n        firstDiamond={diamondsInCombination[0]}\r\n        secondDiamond={diamondsInCombination[1]}\r\n        betAmount={betAmount}\r\n        outcome={outcome}\r\n        isUsdAmount={showInUSD && selectedCoin?.coin !== \"GEM\"}\r\n        {...(selectedCoin && { coin: selectedCoin })}\r\n      />\r\n      {positions}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiamondsGame;\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Input as InputBase, InputProps, Button, GetCoinImg } from \"components\";\r\nimport { ReactComponent as RefreshIcon } from \"assets/diamonds/refresh-icon.svg\";\r\nimport { ReactComponent as LoopIcon } from \"assets/diamonds/loop-icon.svg\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ninterface Props extends InputProps {\r\n  topLabel?: string;\r\n  topLabelValue?: string;\r\n  withRefreshIcon?: boolean;\r\n  coin?: string;\r\n  coinIconIsLeftward?: boolean;\r\n  withoutLabel?: boolean;\r\n  withLoopIcon?: boolean;\r\n  dollarPrefix?: boolean;\r\n  warningModal?: JSX.Element;\r\n  refreshAction?: () => void;\r\n  setAmountFromConfig?: (type: string, betAmount: string) => void;\r\n  maxButtonOnClickHandler?: () => void;\r\n}\r\n\r\nconst Input: FC<Props> = ({\r\n  className,\r\n  topLabel,\r\n  topLabelValue,\r\n  withRefreshIcon,\r\n  withoutLabel,\r\n  withLoopIcon,\r\n  coinIconIsLeftward,\r\n  coin,\r\n  refreshAction,\r\n  setAmountFromConfig,\r\n  maxButtonOnClickHandler,\r\n  dollarPrefix,\r\n  warningModal,\r\n  classes,\r\n  ...props\r\n}) => {\r\n  const refreshField = props.disabled ? undefined : refreshAction;\r\n  const value = String(props.value);\r\n  if (dollarPrefix) props.value = `$${props.value}`;\r\n\r\n  const buttons =\r\n    setAmountFromConfig && !props.disabled ? (\r\n      <>\r\n        <Button onClick={() => setAmountFromConfig(\"min\", value)}>MIN</Button>\r\n        <Button onClick={() => setAmountFromConfig(\"half\", value)}>1/2</Button>\r\n        <Button onClick={() => setAmountFromConfig(\"double\", value)}>2x</Button>\r\n        <Button onClick={maxButtonOnClickHandler}>MAX</Button>\r\n      </>\r\n    ) : null;\r\n\r\n  return (\r\n    <div>\r\n      <div className={clsx(styles.root, classes?.root)}>\r\n        <div className={styles.topLabel}>\r\n          {topLabel ? (\r\n            <span className={styles.topLabelTitle}>{topLabel}</span>\r\n          ) : null}\r\n          {topLabelValue ? (\r\n            <span className={styles.topLabelValue}>{topLabelValue}</span>\r\n          ) : null}\r\n        </div>\r\n        <div className={clsx(styles.wrapper, className)}>\r\n          <InputBase\r\n            {...props}\r\n            classes={{\r\n              root: clsx(\r\n                styles.inputRoot,\r\n                {\r\n                  [styles.inputWithoutLabel]: withoutLabel,\r\n                },\r\n                {\r\n                  [styles.inputWithLeftwardLabel]: coinIconIsLeftward,\r\n                },\r\n              ),\r\n              disabled: styles.disabled,\r\n              input: styles.input,\r\n            }}\r\n          />\r\n        </div>\r\n        {coin && coinIconIsLeftward ? (\r\n          <div className={styles.leftwardCoinIconWrapper}>\r\n            <GetCoinImg\r\n              className={styles.coinImg}\r\n              coin={coin}\r\n              draggable={false}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        <div className={styles.btnsWrapper}>\r\n          {withRefreshIcon && refreshField ? (\r\n            <RefreshIcon onClick={refreshField} />\r\n          ) : null}\r\n          {withLoopIcon ? <LoopIcon /> : null}\r\n          {coin && !coinIconIsLeftward ? (\r\n            <GetCoinImg\r\n              className={styles.coinImg}\r\n              coin={coin}\r\n              draggable={false}\r\n            />\r\n          ) : null}\r\n          {warningModal ? warningModal : null}\r\n          {buttons}\r\n        </div>\r\n      </div>\r\n      <div className={styles.mobileButtons}>{buttons}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { FC, ChangeEvent, Dispatch } from \"react\";\r\n\r\nimport { GetLocaleShape } from \"providers\";\r\nimport { RadioGroup } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Input from \"../Input\";\r\nimport {\r\n  AutoModeValues,\r\n  DiamondsControlActions,\r\n  AutoModeType,\r\n  actions,\r\n} from \"../../../Reducer\";\r\n\r\ninterface Props {\r\n  intl: GetLocaleShape;\r\n  autoModeValues: AutoModeValues;\r\n  autoBetsIsStart: boolean;\r\n  coin?: string;\r\n  betAmount: string;\r\n  enableDollarPrefix: boolean;\r\n  showUSD: boolean;\r\n  stopOnProfitUsdValue: string;\r\n  stopOnLossUsdValue: string;\r\n  warningModal: JSX.Element;\r\n  controlDispatch: Dispatch<DiamondsControlActions>;\r\n  inputOnBlurHandler: (\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    actionType: string,\r\n    allowNegativeNumbers?: boolean,\r\n    enableLimitation?: boolean,\r\n  ) => void;\r\n  inputOnChangeHandler: (\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    actionType: string,\r\n  ) => void;\r\n  setAmountFromConfig: (type: string, betAmount: string) => void;\r\n  maxButtonOnClickHandler: () => void;\r\n}\r\n\r\nconst AutoBetPanel: FC<Props> = ({\r\n  coin,\r\n  intl,\r\n  setAmountFromConfig,\r\n  autoModeValues,\r\n  autoBetsIsStart,\r\n  betAmount,\r\n  enableDollarPrefix,\r\n  inputOnChangeHandler,\r\n  inputOnBlurHandler,\r\n  showUSD,\r\n  controlDispatch,\r\n  maxButtonOnClickHandler,\r\n  stopOnProfitUsdValue,\r\n  stopOnLossUsdValue,\r\n  warningModal,\r\n}) => {\r\n  return (\r\n    <div className={styles.autoInputs}>\r\n      <Input\r\n        topLabel={intl.formatMessage({ id: \"diamonds.input.betAmount\" })}\r\n        coin={coin}\r\n        coinIconIsLeftward\r\n        withoutLabel\r\n        setAmountFromConfig={setAmountFromConfig}\r\n        maxButtonOnClickHandler={maxButtonOnClickHandler}\r\n        warningModal={warningModal}\r\n        value={betAmount}\r\n        disabled={autoBetsIsStart}\r\n        dollarPrefix={enableDollarPrefix}\r\n        onChange={(event) =>\r\n          inputOnChangeHandler(event, actions.SET_BET_AMOUNT)\r\n        }\r\n        onBlur={(event) =>\r\n          inputOnBlurHandler(event, actions.SET_BET_AMOUNT, false, true)\r\n        }\r\n      />\r\n      <Input\r\n        topLabel={intl.formatMessage({\r\n          id: \"diamonds.input.numberOfBets\",\r\n        })}\r\n        withLoopIcon={!autoModeValues.numberOfBets}\r\n        withoutLabel\r\n        value={autoModeValues.numberOfBets}\r\n        disabled={autoBetsIsStart}\r\n        onChange={(event) =>\r\n          inputOnChangeHandler(event, actions.SET_NUMBER_OF_BETS)\r\n        }\r\n        onBlur={(event) =>\r\n          inputOnBlurHandler(event, actions.SET_NUMBER_OF_BETS)\r\n        }\r\n      />\r\n      <RadioGroup\r\n        values={[\"change\", \"reset\", \"stop\"]}\r\n        labels={[\"Change Bet By (%)\", \"Reset To Base Bet\", \"Stop Betting\"]}\r\n        topLabel={intl.formatMessage({ id: \"diamonds.input.onWin\" })}\r\n        name=\"onwin_diamonds_radiogroup\"\r\n        value={autoModeValues.onWinModeType}\r\n        onChange={(event) => {\r\n          controlDispatch({\r\n            type: actions.SET_ON_WIN_MODE_TYPE,\r\n            mode: event.target.value as AutoModeType,\r\n          });\r\n        }}\r\n        nestedComponents={{\r\n          1: (\r\n            <Input\r\n              label={intl.formatMessage({ id: \"diamonds.input.increaseBy\" })}\r\n              withRefreshIcon\r\n              value={autoModeValues.onWin}\r\n              disabled={autoBetsIsStart}\r\n              dollarPrefix={enableDollarPrefix}\r\n              onChange={(event) =>\r\n                inputOnChangeHandler(event, actions.SET_ON_WIN)\r\n              }\r\n              onBlur={(event) =>\r\n                inputOnBlurHandler(event, actions.SET_ON_WIN, true)\r\n              }\r\n              refreshAction={() =>\r\n                controlDispatch({ type: actions.SET_ON_WIN, value: \"\" })\r\n              }\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <RadioGroup\r\n        values={[\"change\", \"reset\", \"stop\"]}\r\n        labels={[\"Change Bet By (%)\", \"Reset To Base Bet\", \"Stop Betting\"]}\r\n        topLabel={intl.formatMessage({ id: \"diamonds.input.onLoss\" })}\r\n        value={autoModeValues.onLossModeType}\r\n        name=\"onloss_diamonds_radiogroup\"\r\n        onChange={(event) => {\r\n          controlDispatch({\r\n            type: actions.SET_ON_LOSS_MODE_TYPE,\r\n            mode: event.target.value as AutoModeType,\r\n          });\r\n        }}\r\n        nestedComponents={{\r\n          1: (\r\n            <Input\r\n              label={intl.formatMessage({ id: \"diamonds.input.increaseBy\" })}\r\n              withRefreshIcon\r\n              value={autoModeValues.onLoss}\r\n              disabled={autoBetsIsStart}\r\n              dollarPrefix={enableDollarPrefix}\r\n              onChange={(event) =>\r\n                inputOnChangeHandler(event, actions.SET_ON_LOSS)\r\n              }\r\n              onBlur={(event) =>\r\n                inputOnBlurHandler(event, actions.SET_ON_LOSS, true)\r\n              }\r\n              refreshAction={() =>\r\n                controlDispatch({ type: actions.SET_ON_LOSS, value: \"\" })\r\n              }\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Input\r\n        topLabel={intl.formatMessage({\r\n          id: \"diamonds.input.stopOnProfit\",\r\n        })}\r\n        topLabelValue={!showUSD ? `$${stopOnProfitUsdValue}` : undefined}\r\n        coin={coin}\r\n        withoutLabel\r\n        value={autoModeValues.stopOnProfit}\r\n        disabled={autoBetsIsStart}\r\n        dollarPrefix={enableDollarPrefix}\r\n        onChange={(event) =>\r\n          inputOnChangeHandler(event, actions.SET_STOP_ON_PROFIT)\r\n        }\r\n        onBlur={(event) =>\r\n          inputOnBlurHandler(event, actions.SET_STOP_ON_PROFIT)\r\n        }\r\n      />\r\n      <Input\r\n        topLabel={intl.formatMessage({ id: \"diamonds.input.stopOnLoss\" })}\r\n        topLabelValue={!showUSD ? `$${stopOnLossUsdValue}` : undefined}\r\n        coin={coin}\r\n        withoutLabel\r\n        value={autoModeValues.stopOnLoss}\r\n        disabled={autoBetsIsStart}\r\n        dollarPrefix={enableDollarPrefix}\r\n        onChange={(event) =>\r\n          inputOnChangeHandler(event, actions.SET_STOP_ON_LOSS)\r\n        }\r\n        onBlur={(event) => inputOnBlurHandler(event, actions.SET_STOP_ON_LOSS)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoBetPanel;\r\n","import React, {\r\n  FC,\r\n  ChangeEvent,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n} from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { toDecimal } from \"utils\";\r\nimport { Coin, useCoins } from \"hooks\";\r\nimport { useHotKeyListener } from \"components/HotKeys/Listener\";\r\nimport Warning from \"components/Warning\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Input from \"./components/Input\";\r\nimport BetButton from \"./components/BetButton\";\r\nimport Switch from \"./components/Switch\";\r\nimport AutoBetPanel from \"./components/AutoBetPanel\";\r\nimport {\r\n  DiamondsControlActions,\r\n  useDiamondsControl,\r\n  actions,\r\n} from \"../Reducer\";\r\n\r\ninterface Props {\r\n  manualBetAction: () => void;\r\n  autoBetAction: () => void;\r\n  stopAutoBets: () => void;\r\n  fetchPlayLoading: boolean;\r\n}\r\n\r\nconst getUsdValue = (\r\n  coin: Coin | null | undefined,\r\n  coinPrice: any,\r\n  coinValue: string,\r\n) => {\r\n  return coin && coin.coin !== \"GEM\" && coinPrice[coin.coin]\r\n    ? Number(coinPrice[coin.coin]?.price) * Number(coinValue)\r\n    : 0;\r\n};\r\n\r\nconst Bet: FC<Props> = ({\r\n  manualBetAction,\r\n  fetchPlayLoading,\r\n  autoBetAction,\r\n  stopAutoBets,\r\n}) => {\r\n  const intl = useGetLocale();\r\n  const [isAutoMode, setAutoMode] = useState(false);\r\n  const [isWarningOpen, setIsWarningOpen] = useState(false);\r\n  const { controlDispatch, controlState } = useDiamondsControl();\r\n  const { betAmount, autoModeValues, coinsConfiguration, autoBetsIsStart } =\r\n    controlState;\r\n\r\n  const { selectedCoin, coinsPrices, showInUSD } = useCoins([\r\n    \"selectedCoin\",\r\n    \"coinsPrices\",\r\n    \"showInUSD\",\r\n  ]);\r\n  const coin = selectedCoin ? selectedCoin.coin : \"BTC\";\r\n\r\n  const inputOnChangeHandler = useCallback(\r\n    (\r\n      event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n      actionType: string,\r\n    ) => {\r\n      const value = event.target.value.replace(\"$\", \"\");\r\n      const checkingValue = value === \"-\" ? -1 : Number(value);\r\n      if (!isFinite(checkingValue) || isNaN(checkingValue)) {\r\n        return;\r\n      }\r\n      controlDispatch({\r\n        type: actionType,\r\n        value: value,\r\n      } as DiamondsControlActions);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const setAmountFromConfig = useCallback(\r\n    (type: string, betAmount: string) => {\r\n      if (!selectedCoin) return;\r\n\r\n      switch (type) {\r\n        case \"min\":\r\n        case \"max\": {\r\n          const selectedCoinConfig = coinsConfiguration.find(\r\n            (config) => config.coin === selectedCoin.coin,\r\n          );\r\n          if (!selectedCoinConfig) return;\r\n          const limitBet =\r\n            type === \"max\"\r\n              ? selectedCoinConfig.maximumBet\r\n              : selectedCoinConfig.minimumBet;\r\n          const amount = !showInUSD\r\n            ? Math.min(Number(selectedCoin.balance), Number(limitBet))\r\n            : Math.min(\r\n                getUsdValue(selectedCoin, coinsPrices, selectedCoin.balance),\r\n                getUsdValue(selectedCoin, coinsPrices, limitBet),\r\n              );\r\n          return controlDispatch({\r\n            type: actions.SET_BET_AMOUNT,\r\n            value: amount.toFixed(8),\r\n          });\r\n        }\r\n        case \"half\":\r\n          return controlDispatch({\r\n            type: actions.SET_BET_AMOUNT,\r\n            value: toDecimal(betAmount || 0)\r\n              .div(2)\r\n              .toFixed(8),\r\n          });\r\n        case \"double\":\r\n          return controlDispatch({\r\n            type: actions.SET_BET_AMOUNT,\r\n            value: toDecimal(betAmount || 0)\r\n              .mul(2)\r\n              .toFixed(8),\r\n          });\r\n      }\r\n    },\r\n    [coinsConfiguration, selectedCoin, showInUSD],\r\n  );\r\n\r\n  const inputOnBlurHandler = (\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    actionType: string,\r\n    allowNegativeNumbers: boolean = false,\r\n    enableLimitation: boolean = false,\r\n  ) => {\r\n    const valueString = event.target.value.replace(\"$\", \"\");\r\n    if (valueString === \"\") return;\r\n    let value = parseFloat(valueString);\r\n    if (!isFinite(value) || isNaN(value)) {\r\n      value = 0;\r\n    }\r\n    value = allowNegativeNumbers ? value : Math.abs(value);\r\n\r\n    if (enableLimitation) {\r\n      const convertedBalance =\r\n        showInUSD && selectedCoin && selectedCoin?.coin !== \"GEM\"\r\n          ? Number(selectedCoin?.price) * Number(selectedCoin?.balance)\r\n          : Number(selectedCoin?.balance);\r\n\r\n      if (value > convertedBalance) {\r\n        setAmountFromConfig(\"min\", String(value));\r\n        return;\r\n      }\r\n    }\r\n\r\n    controlDispatch({\r\n      type: actionType,\r\n      value: value.toFixed(8),\r\n    } as DiamondsControlActions);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (coinsConfiguration.length > 0 && selectedCoin && coinsPrices) {\r\n      const selectedCoinConfig = coinsConfiguration.find(\r\n        (config) => config.coin === selectedCoin.coin,\r\n      );\r\n      if (selectedCoinConfig) {\r\n        controlDispatch({\r\n          type: actions.SET_BET_AMOUNT,\r\n          value: showInUSD\r\n            ? getUsdValue(\r\n                selectedCoin,\r\n                coinsPrices,\r\n                selectedCoinConfig.minimumBet,\r\n              ).toFixed(8)\r\n            : selectedCoinConfig.minimumBet,\r\n        });\r\n      }\r\n    }\r\n  }, [coinsConfiguration, selectedCoin?.coin, coinsPrices, showInUSD]);\r\n\r\n  const playFunction = () => {\r\n    if (isAutoMode && !autoBetsIsStart) {\r\n      autoBetAction();\r\n    } else if (!isAutoMode && !autoBetsIsStart && !fetchPlayLoading) {\r\n      manualBetAction();\r\n    } else if (autoBetsIsStart) {\r\n      stopAutoBets();\r\n    }\r\n  };\r\n\r\n  useHotKeyListener({\r\n    callbackKeyA: () => setAmountFromConfig(\"half\", betAmount),\r\n    callbackKeyS: () => setAmountFromConfig(\"double\", betAmount),\r\n    callbackSpace: playFunction,\r\n  });\r\n\r\n  const enableDollarPrefix = showInUSD && selectedCoin?.coin !== \"GEM\";\r\n  const warningModal = (\r\n    <Warning\r\n      isOpen={isWarningOpen}\r\n      onClose={() => setIsWarningOpen(false)}\r\n      callBack={() => setAmountFromConfig(\"max\", betAmount)}\r\n      className={styles.warning}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.buttons}>\r\n        <Switch\r\n          leftText={intl.formatMessage({ id: \"diamonds.switch.manual\" })}\r\n          rightText={intl.formatMessage({ id: \"diamonds.switch.auto\" })}\r\n          checked={isAutoMode}\r\n          setChecked={setAutoMode}\r\n        />\r\n        <div className={styles.betControl}>\r\n          {!isAutoMode ? (\r\n            <div className={styles.manualInput}>\r\n              <Input\r\n                topLabel={intl.formatMessage({\r\n                  id: \"diamonds.input.betAmount\",\r\n                })}\r\n                coin={coin}\r\n                coinIconIsLeftward\r\n                withoutLabel\r\n                setAmountFromConfig={setAmountFromConfig}\r\n                value={betAmount}\r\n                dollarPrefix={enableDollarPrefix}\r\n                maxButtonOnClickHandler={() => setIsWarningOpen(true)}\r\n                onChange={(event) =>\r\n                  inputOnChangeHandler(event, actions.SET_BET_AMOUNT)\r\n                }\r\n                onBlur={(event) =>\r\n                  inputOnBlurHandler(event, actions.SET_BET_AMOUNT, false, true)\r\n                }\r\n                warningModal={warningModal}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {!isAutoMode && (\r\n            <BetButton onClick={manualBetAction} disabled={fetchPlayLoading}>\r\n              {intl.formatMessage({ id: \"diamonds.button.bet\" })}\r\n            </BetButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isAutoMode ? (\r\n        <>\r\n          <AutoBetPanel\r\n            intl={intl}\r\n            coin={selectedCoin?.coin}\r\n            setAmountFromConfig={setAmountFromConfig}\r\n            autoModeValues={autoModeValues}\r\n            autoBetsIsStart={autoBetsIsStart}\r\n            betAmount={betAmount}\r\n            enableDollarPrefix={enableDollarPrefix}\r\n            inputOnChangeHandler={inputOnChangeHandler}\r\n            inputOnBlurHandler={inputOnBlurHandler}\r\n            warningModal={warningModal}\r\n            showUSD={showInUSD}\r\n            controlDispatch={controlDispatch}\r\n            stopOnProfitUsdValue={getUsdValue(\r\n              selectedCoin,\r\n              coinsPrices,\r\n              autoModeValues.stopOnProfit,\r\n            ).toFixed(2)}\r\n            stopOnLossUsdValue={getUsdValue(\r\n              selectedCoin,\r\n              coinsPrices,\r\n              autoModeValues.stopOnLoss,\r\n            ).toFixed(2)}\r\n            maxButtonOnClickHandler={() => setIsWarningOpen(true)}\r\n          />\r\n          <div className={styles.autoBetBtn}>\r\n            <BetButton onClick={autoBetsIsStart ? stopAutoBets : autoBetAction}>\r\n              {autoBetsIsStart\r\n                ? \"Stop Autobet\"\r\n                : intl.formatMessage({ id: \"diamonds.button.autoBet\" })}\r\n            </BetButton>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bet;\r\n","import { Dispatch, useCallback } from \"react\";\r\n\r\nimport { coinsManager, useCoins, useFetch, useLocalStorage } from \"hooks\";\r\nimport { useSeed, useLocale } from \"providers\";\r\nimport { sleep, toDecimal, track } from \"utils\";\r\nimport { notifyBarManager } from \"components\";\r\n\r\nimport { PlayGameFetchResponse } from \"./types\";\r\nimport {\r\n  DiamondsControlState,\r\n  DiamondsControlActions,\r\n  AutoModeType,\r\n  actions,\r\n} from \"../components/Reducer\";\r\nimport { Decimal } from \"utils/decimal\";\r\nimport { liveStatsManager } from \"components/LiveStats/eventEmitter/emitter\";\r\n\r\nconst isNumber = (value: unknown) => {\r\n  return !isNaN(value as number) && isFinite(value as number);\r\n};\r\n\r\ninterface AutoBetParameters {\r\n  bet: number;\r\n  baseBet: number;\r\n  onWinOrLoss: string;\r\n  autoMode: AutoModeType;\r\n  stopAutoMode: () => void;\r\n}\r\n\r\nconst changeBetWithConditions = ({\r\n  bet,\r\n  onWinOrLoss,\r\n  autoMode,\r\n  baseBet,\r\n  stopAutoMode,\r\n}: AutoBetParameters) => {\r\n  let resultBet = toDecimal(bet);\r\n\r\n  switch (autoMode) {\r\n    case \"change\":\r\n      if (isNumber(Number(onWinOrLoss)) && onWinOrLoss !== \"\") {\r\n        return Number(\r\n          resultBet.add(resultBet.mul(onWinOrLoss).div(100)).toFixed(8),\r\n        );\r\n      }\r\n      break;\r\n    case \"reset\":\r\n      return baseBet;\r\n    case \"stop\":\r\n      stopAutoMode();\r\n  }\r\n};\r\n\r\nconst checkStopAutoBetsConditions = (\r\n  pnlSum: Decimal,\r\n  stopOnLoss: string,\r\n  stopOnProfit: string,\r\n) => {\r\n  const stopOnLossNumber = Number(stopOnLoss);\r\n  const stopOnProfitNumber = Number(stopOnProfit);\r\n  return (\r\n    (isNumber(stopOnLossNumber) &&\r\n      stopOnLossNumber > 0 &&\r\n      pnlSum.lt(0) &&\r\n      pnlSum.abs().gt(stopOnLossNumber)) ||\r\n    (isNumber(stopOnProfitNumber) &&\r\n      stopOnProfitNumber > 0 &&\r\n      pnlSum.gt(stopOnProfitNumber))\r\n  );\r\n};\r\n\r\nconst usdToCurrency = (amount: string, coin: string, coinPrice: any) => {\r\n  try {\r\n    return toDecimal(amount).div(coinPrice[coin]?.price).toFixed(8);\r\n  } catch (error) {\r\n    track()?.errors(error, {\r\n      custom: {\r\n        place: \"usdToCurrency\",\r\n        values: `amount: ${amount} | coin: ${coin} | price: ${coinPrice[coin]?.price}`,\r\n      },\r\n    });\r\n\r\n    return amount;\r\n  }\r\n};\r\n\r\nlet isStopAutoBets = false,\r\n  autoStop: () => void = () => null;\r\n\r\nexport const useAutoGame = (\r\n  controlState: DiamondsControlState,\r\n  controlDispatch: Dispatch<DiamondsControlActions>,\r\n) => {\r\n  const { betAmount, autoModeValues } = controlState;\r\n\r\n  const { selectedCoin, showInUSD, coinsPrices } = useCoins();\r\n  const { clientSeed, rotateClientSeed, updateNonce } = useSeed();\r\n  const language = useLocale();\r\n  const [token] = useLocalStorage(\"token\");\r\n\r\n  const [playGameFetch] = useFetch<PlayGameFetchResponse>(\"diamonds/play\");\r\n\r\n  const stopAutoBets = (e?: any, f?: () => void) => {\r\n    if (typeof f === \"function\") {\r\n      autoStop = f;\r\n    }\r\n\r\n    isStopAutoBets = true;\r\n  };\r\n\r\n  const setAutoBetAction = useCallback((value: boolean) => {\r\n    controlDispatch({\r\n      type: actions.SET_AUTO_BETS_IS_START,\r\n      value,\r\n    });\r\n  }, []);\r\n\r\n  const startAutoBets = async () => {\r\n    autoStop = () => null;\r\n    if (!clientSeed || !selectedCoin || !token) return;\r\n    setAutoBetAction(true);\r\n    isStopAutoBets = false;\r\n\r\n    let numberOfBets = Math.floor(Number(autoModeValues.numberOfBets));\r\n    let pnlSum = toDecimal(\"0\");\r\n\r\n    const { onWin, onLoss } = autoModeValues;\r\n    const isInfinity = !autoModeValues.numberOfBets;\r\n\r\n    let bet = parseFloat(betAmount) || 0;\r\n    const baseBet = bet;\r\n    let { stopOnProfit, stopOnLoss } = autoModeValues;\r\n\r\n    if (showInUSD && selectedCoin.coin !== \"GEM\") {\r\n      stopOnProfit = usdToCurrency(\r\n        stopOnProfit,\r\n        selectedCoin.coin,\r\n        coinsPrices,\r\n      );\r\n      stopOnLoss = usdToCurrency(stopOnLoss, selectedCoin.coin, coinsPrices);\r\n    }\r\n\r\n    while (true) {\r\n      if (\r\n        (numberOfBets < 1 && !isInfinity) ||\r\n        isStopAutoBets ||\r\n        checkStopAutoBetsConditions(pnlSum, stopOnLoss, stopOnProfit)\r\n      ) {\r\n        break;\r\n      }\r\n\r\n      let actualBet = String(bet);\r\n      if (showInUSD && selectedCoin.coin !== \"GEM\") {\r\n        actualBet = usdToCurrency(actualBet, selectedCoin.coin, coinsPrices);\r\n      }\r\n\r\n      const reqParams = {\r\n        token: token,\r\n        language: language.locale,\r\n        client_seed: clientSeed?.seed,\r\n        bet_amt: actualBet,\r\n        coin: selectedCoin.coin,\r\n      };\r\n\r\n      const { error, data } = await playGameFetch({ variables: reqParams });\r\n\r\n      if (error || !data?.success) {\r\n        notifyBarManager.error({\r\n          timeOut: 4000,\r\n          message: error,\r\n        });\r\n        break;\r\n      }\r\n\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n      coinsManager.coinValueUpdate(data.balance, selectedCoin.coin);\r\n      pnlSum = pnlSum.add(data.profit);\r\n\r\n      controlDispatch({\r\n        type: actions.PLAY,\r\n        field: data.roll_numbers,\r\n        outcome: data.outcome,\r\n      });\r\n\r\n      if (Number(data.profit) > 0) {\r\n        const resultBet = changeBetWithConditions({\r\n          bet,\r\n          onWinOrLoss: onWin,\r\n          autoMode: autoModeValues.onWinModeType,\r\n          baseBet,\r\n          stopAutoMode: stopAutoBets,\r\n        });\r\n        if (resultBet) bet = resultBet;\r\n      } else {\r\n        const resultBet = changeBetWithConditions({\r\n          bet,\r\n          onWinOrLoss: onLoss,\r\n          autoMode: autoModeValues.onLossModeType,\r\n          baseBet,\r\n          stopAutoMode: stopAutoBets,\r\n        });\r\n        if (resultBet) bet = resultBet;\r\n      }\r\n\r\n      controlDispatch({\r\n        type: actions.SET_BET_AMOUNT,\r\n        value: String(bet),\r\n      });\r\n\r\n      if (!isInfinity) {\r\n        numberOfBets--;\r\n        controlDispatch({\r\n          type: actions.SET_NUMBER_OF_BETS,\r\n          value: String(numberOfBets),\r\n        });\r\n      }\r\n\r\n      const profit = Number(data.profit),\r\n        amount = Number(bet);\r\n\r\n      await sleep(0.25);\r\n      liveStatsManager.addBet({\r\n        profit: Number(profit),\r\n        amount: Number(amount),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n\r\n    if (isStopAutoBets) {\r\n      autoStop();\r\n    }\r\n\r\n    setAutoBetAction(false);\r\n  };\r\n\r\n  return { startAutoBets, stopAutoBets };\r\n};\r\n","import React, { FC, useEffect, useCallback } from \"react\";\r\n\r\nimport LiveStats from \"components/LiveStats\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Bet from \"./components/Bet\";\r\nimport { useManualGame, useAutoGame } from \"./hooks\";\r\nimport { actions, useDiamondsControl } from \"./components/Reducer\";\r\nimport { liveStatsManager } from \"components/LiveStats/eventEmitter/emitter\";\r\nimport { useCoins } from \"hooks\";\r\nimport { track } from \"utils\";\r\n\r\ninterface CoinConfigurationInResponse {\r\n  coin: string;\r\n  minimum_bet: string;\r\n  maximum_bet: string;\r\n}\r\n\r\ninterface ConfigResponse {\r\n  coins: Array<CoinConfigurationInResponse>;\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\ninterface Props {\r\n  liveStatsIsOpen: boolean;\r\n  liveStatsHandleClose: () => void;\r\n}\r\n\r\nconst Controller: FC<Props> = ({ liveStatsIsOpen, liveStatsHandleClose }) => {\r\n  const { controlState, controlDispatch } = useDiamondsControl();\r\n  const { selectedCoin } = useCoins();\r\n  const { play, playFetchLoading } = useManualGame(\r\n    controlState,\r\n    controlDispatch,\r\n  );\r\n  const { startAutoBets, stopAutoBets } = useAutoGame(\r\n    controlState,\r\n    controlDispatch,\r\n  );\r\n\r\n  const getConfiguration = async () => {\r\n    try {\r\n      const configurationResponse = await fetch(\r\n        `${process.env.REACT_APP_URL}/diamonds/get-configuration`,\r\n      );\r\n      const configuration =\r\n        (await configurationResponse.json()) as ConfigResponse;\r\n      if (configuration.success) {\r\n        controlDispatch({\r\n          type: actions.SET_COINS_CONFIGURATION,\r\n          config: configuration.coins.map((coinConfig) => ({\r\n            minimumBet: coinConfig.minimum_bet,\r\n            maximumBet: coinConfig.maximum_bet,\r\n            coin: coinConfig.coin,\r\n          })),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      track()?.errors(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfiguration();\r\n    return () => stopAutoBets();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    stopAutoBets({}, () => {\r\n      liveStatsManager.reset();\r\n    });\r\n  }, [selectedCoin?.coin]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <Bet\r\n          manualBetAction={play}\r\n          fetchPlayLoading={playFetchLoading}\r\n          autoBetAction={startAutoBets}\r\n          stopAutoBets={stopAutoBets}\r\n        />\r\n      </div>\r\n      <LiveStats isOpen={liveStatsIsOpen} handleClose={liveStatsHandleClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import { Dispatch } from \"react\";\r\nimport { toDecimal } from \"utils\";\r\n\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport { coinsManager, useCoins, useFetch, useLocalStorage } from \"hooks\";\r\nimport { useSeed, useLocale } from \"providers\";\r\nimport { notifyBarManager } from \"components\";\r\n\r\nimport { PlayGameFetchResponse } from \"./types\";\r\nimport {\r\n  DiamondsControlState,\r\n  DiamondsControlActions,\r\n  actions,\r\n} from \"../components/Reducer\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\nimport { liveStatsManager } from \"components/LiveStats/eventEmitter/emitter\";\r\n\r\nexport const useManualGame = (\r\n  controlState: DiamondsControlState,\r\n  controlDispatch: Dispatch<DiamondsControlActions>,\r\n) => {\r\n  const { betAmount } = controlState;\r\n\r\n  const { selectedCoin, showInUSD, coinsPrices } = useCoins();\r\n  const { clientSeed, rotateClientSeed, updateNonce } = useSeed();\r\n  const language = useLocale();\r\n  const [token] = useLocalStorage(\"token\");\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { place, placeAndWin } = getSoundEffectNames(gamePathNames.DIAMONDS);\r\n  const [playGameFetch, { loading: playFetchLoading }] =\r\n    useFetch<PlayGameFetchResponse>(\"diamonds/play\");\r\n\r\n  const play = async () => {\r\n    if (!clientSeed || !selectedCoin || !token) return;\r\n\r\n    const actualBet =\r\n      showInUSD && selectedCoin.coin !== \"GEM\"\r\n        ? toDecimal(betAmount)\r\n            .div(coinsPrices[selectedCoin.coin]?.price)\r\n            .toFixed(8)\r\n        : betAmount;\r\n\r\n    const reqParams = {\r\n      token: token,\r\n      language: language.locale,\r\n      client_seed: clientSeed?.seed,\r\n      bet_amt: actualBet,\r\n      coin: selectedCoin.coin,\r\n    };\r\n\r\n    const { error, data } = await playGameFetch({ variables: reqParams });\r\n\r\n    if (error || !data?.success) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n      return;\r\n    }\r\n    data.win ? playEffect(placeAndWin) : playEffect(place);\r\n    if (clientSeed && !clientSeed?.isSetManually) {\r\n      rotateClientSeed();\r\n    } else {\r\n      updateNonce();\r\n    }\r\n    coinsManager.coinValueUpdate(data.balance, selectedCoin.coin);\r\n\r\n    controlDispatch({\r\n      type: actions.PLAY,\r\n      field: data.roll_numbers,\r\n      outcome: data.outcome,\r\n    });\r\n\r\n    liveStatsManager.addBet({\r\n      amount: Number(actualBet),\r\n      profit: Number(data.profit),\r\n      coin: data.coin,\r\n    });\r\n  };\r\n\r\n  return { play, playFetchLoading };\r\n};\r\n","import React, { FC, useState } from \"react\";\r\n\r\nimport { Statistics } from \"components\";\r\n\r\nimport LazyComponentLoader from \"config/LazyComponentLoader\";\r\nimport OptionsButton from \"components/OptionsButton\";\r\nimport { HotKeysModal } from \"components/HotKeys\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport Game from \"./Game\";\r\nimport Controller from \"./Controller\";\r\nimport { DiamondsControlProvider } from \"./Controller/components/Reducer\";\r\nimport { SoundModals } from \"components/SoundModal\";\r\n\r\nconst BettingInformation = React.lazy(() =>\r\n  LazyComponentLoader(import(\"pages/ModalPages/pages/BettingInformation\")),\r\n);\r\n\r\nconst DiamondsPage: FC = () => {\r\n  const [isSoundOpen, setIsSoundOpen] = useState(false);\r\n  const [hotKeyIsOpen, setHotKeyIsOpen] = useState(false);\r\n  const [liveStatsIsOpen, setLiveStatsIsOpen] = useState(false);\r\n  const [bettingInformationIsOpen, setBettingInformationIsOpen] =\r\n    useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <SoundModals isOpen={isSoundOpen} onClose={() => setIsSoundOpen(false)} />\r\n      <HotKeysModal\r\n        isOpen={hotKeyIsOpen}\r\n        onClose={() => setHotKeyIsOpen(false)}\r\n      />\r\n      <DiamondsControlProvider>\r\n        <Game />\r\n        <div className={styles.optionsWrapper}>\r\n          <OptionsButton\r\n            withSound\r\n            soundOnClick={() => setIsSoundOpen(true)}\r\n            liveStatOnclick={() => setLiveStatsIsOpen(true)}\r\n            hotKeysOnClick={() => setHotKeyIsOpen(true)}\r\n            bettingInformationOnClick={() => setBettingInformationIsOpen(true)}\r\n          />\r\n        </div>\r\n        <Controller\r\n          liveStatsHandleClose={() => setLiveStatsIsOpen(false)}\r\n          liveStatsIsOpen={liveStatsIsOpen}\r\n        />\r\n      </DiamondsControlProvider>\r\n      <div className={styles.statisticsWrapper}>\r\n        <BettingInformation\r\n          isOpen={bettingInformationIsOpen}\r\n          game=\"diamonds\"\r\n          onClose={() => setBettingInformationIsOpen(false)}\r\n        />\r\n        <Statistics withFairness />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiamondsPage;\r\n","import React, { FC } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport \"config/themes/_diamonds.scss\";\r\nimport SeedProvider from \"providers/Seed\";\r\n\r\nimport Page from \"./page\";\r\n\r\nconst DiamondsWrapper: FC = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Diamonds | Crypto Gambling Casino</title>\r\n        <meta name=\"title\" content=\"Play Bitcoin Diamonds  - Pasino.com\" />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Play Diamonds with Bitcoin on Pasino.com.   \"\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"Play Diamonds, Diamonds Bitcoin, Diamonds Gambling, Diamonds Betting \"\r\n        />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        <meta name=\"language\" content=\"English\" />\r\n      </Helmet>\r\n      <SeedProvider gameName=\"diamonds\">\r\n        <Page />\r\n      </SeedProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiamondsWrapper;\r\n","import { useContext } from \"react\";\r\n\r\nimport Context from \"./context\";\r\n\r\nexport { default as DiamondsControlProvider } from \"./provider\";\r\nexport { actions } from \"./actions\";\r\nexport * from \"./types\";\r\n\r\nexport const useDiamondsControl = () => useContext(Context);\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Button, ButtonProps } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst BetButton: FC<ButtonProps> = ({ children, ...props }) => {\r\n  return (\r\n    <Button className={styles.button} {...props}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default BetButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__q7Lkg\"};","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Switch as SwitchBase } from \"components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  leftText: string;\r\n  rightText: string;\r\n  checked: boolean;\r\n  setChecked: (checked: boolean) => void;\r\n  className?: string;\r\n}\r\n\r\nconst Switch: FC<Props> = ({\r\n  leftText,\r\n  rightText,\r\n  checked,\r\n  setChecked,\r\n  className,\r\n}) => {\r\n  return (\r\n    <div className={clsx(styles.switchWrapper, className)}>\r\n      <span\r\n        className={clsx(\r\n          {\r\n            [styles.highlight]: !checked,\r\n          },\r\n          styles.option,\r\n        )}\r\n        onClick={() => setChecked(false)}>\r\n        {leftText}\r\n      </span>\r\n      <SwitchBase\r\n        onChange={(event) => {\r\n          setChecked(event.target.checked);\r\n        }}\r\n        checked={checked}\r\n        classes={{\r\n          track: styles.switchTrack,\r\n        }}\r\n      />\r\n      <span\r\n        className={clsx(\r\n          {\r\n            [styles.highlight]: checked,\r\n          },\r\n          styles.option,\r\n        )}\r\n        onClick={() => setChecked(true)}>\r\n        {rightText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"switchWrapper\":\"style_switchWrapper__m_t9e\",\"option\":\"style_option__33osT\",\"highlight\":\"style_highlight__32VYB\",\"switchTrack\":\"style_switchTrack__29WCl\"};","export const SET_FIELD = \"SET_FIELD\";\r\nexport const SET_BET_AMOUNT = \"SET_BET_AMOUNT\";\r\nexport const SET_ACTUAL_BET = \"SET_ACTUAL_BET\";\r\n\r\nexport const SET_NUMBER_OF_BETS = \"SET_NUMBER_OF_BETS\";\r\nexport const SET_ON_WIN = \"SET_ON_WIN\";\r\nexport const SET_ON_LOSS = \"SET_ON_LOSS\";\r\nexport const SET_STOP_ON_PROFIT = \"SET_STOP_ON_PROFIT\";\r\nexport const SET_STOP_ON_LOSS = \"SET_STOP_ON_LOSS\";\r\n\r\nexport const SET_OUTCOME = \"SET_OUTCOME\";\r\nexport const PLAY = \"PLAY\";\r\n\r\nexport const SET_AUTO_BETS_IS_START = \"SET_AUTO_BETS_IS_START\";\r\n\r\nexport const SET_COINS_CONFIGURATION = \"SET_COINS_CONFIGURATION\";\r\n\r\nexport const SET_LIVE_STATS = \"SET_LIVE_STATS\";\r\n\r\nexport const SET_ON_LOSS_MODE_TYPE = \"SET_ON_LOSS_MODE_TYPE\";\r\nexport const SET_ON_WIN_MODE_TYPE = \"SET_ON_WIN_MODE_TYPE\";\r\n","import { DiamondIndex } from \"games/Diamonds\";\r\n\r\nconst get = <Type>(map: Map<any, Type>, key: any, defaultValue: Type) => {\r\n  const value = map.get(key);\r\n  return value === undefined ? defaultValue : value;\r\n};\r\n\r\nexport function* calculateDiamonds(field: Array<DiamondIndex>) {\r\n  const diamondsCount = new Map() as Map<DiamondIndex, number>;\r\n\r\n  for (const diamondIndex of field) {\r\n    diamondsCount.set(diamondIndex, get(diamondsCount, diamondIndex, 0) + 1);\r\n  }\r\n\r\n  yield diamondsCount;\r\n\r\n  const repeatedDiamonds = [] as Array<DiamondIndex>;\r\n  diamondsCount.forEach((count, diamondIndex) => {\r\n    if (count > 2 && repeatedDiamonds.length > 0) {\r\n      repeatedDiamonds[1] = repeatedDiamonds[0];\r\n      repeatedDiamonds[0] = diamondIndex;\r\n    } else if (count > 1) {\r\n      repeatedDiamonds.push(diamondIndex);\r\n    }\r\n  });\r\n\r\n  if (repeatedDiamonds.length === 0) {\r\n    repeatedDiamonds.push(field[0], field[1]);\r\n  } else if (repeatedDiamonds.length === 1) {\r\n    const singleDiamond =\r\n      field.find((diamondIndex) => diamondIndex !== repeatedDiamonds[0]) || 0;\r\n    repeatedDiamonds.push(singleDiamond);\r\n  }\r\n\r\n  yield repeatedDiamonds;\r\n}\r\n","import { Dispatch, createContext } from \"react\";\r\n\r\nimport { initialDiamondsControlState } from \"./reducer\";\r\nimport { DiamondsControlActions, DiamondsControlState } from \"./types\";\r\n\r\ninterface DiamondsControlContext {\r\n  controlState: DiamondsControlState;\r\n  controlDispatch: Dispatch<DiamondsControlActions>;\r\n}\r\n\r\nexport const defaultValue: DiamondsControlContext = {\r\n  controlState: initialDiamondsControlState,\r\n  controlDispatch: () => {},\r\n};\r\n\r\nconst Context = createContext<DiamondsControlContext>(defaultValue);\r\n\r\nexport default Context;\r\n","import { DiamondIndex } from \"games/Diamonds\";\r\n\r\nimport { actions, calculateDiamonds } from \"./actions\";\r\nimport { DiamondsControlState, DiamondsControlActions } from \"./types\";\r\n\r\nconst FIELD_SIZE = 5;\r\nconst defaultDiamondsInCombination = [0, 1];\r\n\r\nexport const initialDiamondsControlState: DiamondsControlState = {\r\n  field: new Array(FIELD_SIZE).fill(null),\r\n  betAmount: \"0.000000\",\r\n  actualBet: \"\",\r\n  autoModeValues: {\r\n    numberOfBets: \"\",\r\n    onWin: \"\",\r\n    onLoss: \"\",\r\n    stopOnProfit: \"\",\r\n    stopOnLoss: \"\",\r\n    onWinModeType: \"change\",\r\n    onLossModeType: \"change\",\r\n  },\r\n  outcome: null,\r\n  diamondsInCombination: defaultDiamondsInCombination,\r\n  repeatDiamonds: new Map(),\r\n  autoBetsIsStart: false,\r\n  coinsConfiguration: [],\r\n};\r\n\r\nconst autoModeActionFieldMatching = {\r\n  [actions.SET_NUMBER_OF_BETS]: \"numberOfBets\",\r\n  [actions.SET_ON_WIN]: \"onWin\",\r\n  [actions.SET_ON_LOSS]: \"onLoss\",\r\n  [actions.SET_STOP_ON_LOSS]: \"stopOnLoss\",\r\n  [actions.SET_STOP_ON_PROFIT]: \"stopOnProfit\",\r\n};\r\n\r\nexport const diamondsControlReducer = (\r\n  state: DiamondsControlState,\r\n  action: DiamondsControlActions,\r\n): DiamondsControlState => {\r\n  switch (action.type) {\r\n    case actions.SET_FIELD:\r\n      return {\r\n        ...state,\r\n        field: action.field,\r\n      };\r\n    case actions.SET_BET_AMOUNT:\r\n      return {\r\n        ...state,\r\n        betAmount: action.value,\r\n      };\r\n    case actions.SET_ACTUAL_BET:\r\n      return {\r\n        ...state,\r\n        actualBet: action.bet,\r\n      };\r\n    case actions.SET_NUMBER_OF_BETS:\r\n    case actions.SET_ON_WIN:\r\n    case actions.SET_ON_LOSS:\r\n    case actions.SET_STOP_ON_LOSS:\r\n    case actions.SET_STOP_ON_PROFIT:\r\n      return {\r\n        ...state,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          [autoModeActionFieldMatching[action.type]]: action.value,\r\n        },\r\n      };\r\n    case actions.PLAY:\r\n      const calculates = calculateDiamonds(action.field);\r\n      const diamonds = calculates.next().value as Map<DiamondIndex, number>;\r\n      const diamondsInCombination = calculates.next().value as number[];\r\n      return {\r\n        ...state,\r\n        field: action.field,\r\n        outcome: action.outcome,\r\n        diamondsInCombination,\r\n        repeatDiamonds: diamonds,\r\n      };\r\n    case actions.SET_AUTO_BETS_IS_START:\r\n      return {\r\n        ...state,\r\n        autoBetsIsStart: action.value,\r\n      };\r\n    case actions.SET_COINS_CONFIGURATION:\r\n      return {\r\n        ...state,\r\n        coinsConfiguration: action.config,\r\n      };\r\n    case actions.SET_ON_WIN_MODE_TYPE:\r\n      return {\r\n        ...state,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          onWinModeType: action.mode,\r\n        },\r\n      };\r\n    case actions.SET_ON_LOSS_MODE_TYPE:\r\n      return {\r\n        ...state,\r\n        autoModeValues: {\r\n          ...state.autoModeValues,\r\n          onLossModeType: action.mode,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { FC, useReducer } from \"react\";\r\n\r\nimport Context from \"./context\";\r\nimport { initialDiamondsControlState, diamondsControlReducer } from \"./reducer\";\r\n\r\nconst DiamondsControlProvider: FC = ({ children }) => {\r\n  const [controlState, controlDispatch] = useReducer(\r\n    diamondsControlReducer,\r\n    initialDiamondsControlState,\r\n  );\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        controlState,\r\n        controlDispatch,\r\n      }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default DiamondsControlProvider;\r\n"],"sourceRoot":""}