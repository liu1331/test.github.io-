{"version":3,"sources":["components/Cropper/cropper.js"],"names":["window","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","value","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","EXPORTED_DATA_KEY","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","maxCanvasWidth","Infinity","maxCanvasHeight","minCropBoxWidth","minCropBoxHeight","maxCropBoxWidth","maxCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","maxRatio","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","ratio","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","this","initContainer","initCanvas","initialCanvasData","canvasData","initCropBox","initialCropBoxData","cropBoxData","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","oldLeft","oldTop","limitCanvas","sizeLimited","positionLimited","containerWidth","containerHeight","_getAdjustedSizes","_getAdjustedSizes2","minLeft","minTop","maxLeft","maxTop","newLeft","newTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","canvasWidth","canvasHeight","canvasLeft","canvasTop","_getAdjustedSizes3","_getAdjustedSizes4","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","degreesX","atan","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","newCanvasWidth","newCanvasHeight","offsetCanvasWidth","offsetCanvasHeight","newCropBoxWidth","newCropBoxHeight","offsetCropBoxWidth","offsetCropBoxHeight","oldScale","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","factory"],"mappings":"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","file":"static/js/167.00defb40.chunk.js","sourcesContent":["/* eslint-disable no-undef */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable no-unused-expressions */\r\n\r\n/*!\r\n * Cropper.js v2.0.0-alpha.2\r\n * https://fengyuanchen.github.io/cropperjs\r\n *\r\n * Copyright 2015-present Chen Fengyuan\r\n * Released under the MIT license\r\n *\r\n * Date: 2021-12-25T08:31:12.767Z\r\n */\r\n\r\nvar define,\r\n  globalThis = window;\r\n\r\n(function (global, factory) {\r\n  typeof exports === \"object\" && typeof module !== \"undefined\"\r\n    ? (module.exports = factory())\r\n    : typeof define === \"function\" && define.amd\r\n    ? define(factory)\r\n    : ((global =\r\n        typeof globalThis !== \"undefined\" ? globalThis : global || self),\r\n      (global.Cropper = factory()));\r\n})(this, function () {\r\n  \"use strict\";\r\n\r\n  function ownKeys(object, enumerableOnly) {\r\n    var keys = Object.keys(object);\r\n\r\n    if (Object.getOwnPropertySymbols) {\r\n      var symbols = Object.getOwnPropertySymbols(object);\r\n      enumerableOnly &&\r\n        (symbols = symbols.filter(function (sym) {\r\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n        })),\r\n        keys.push.apply(keys, symbols);\r\n    }\r\n\r\n    return keys;\r\n  }\r\n\r\n  function _objectSpread2(target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = null != arguments[i] ? arguments[i] : {};\r\n      i % 2\r\n        ? ownKeys(Object(source), !0).forEach(function (key) {\r\n            _defineProperty(target, key, source[key]);\r\n          })\r\n        : Object.getOwnPropertyDescriptors\r\n        ? Object.defineProperties(\r\n            target,\r\n            Object.getOwnPropertyDescriptors(source),\r\n          )\r\n        : ownKeys(Object(source)).forEach(function (key) {\r\n            Object.defineProperty(\r\n              target,\r\n              key,\r\n              Object.getOwnPropertyDescriptor(source, key),\r\n            );\r\n          });\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n\r\n    return (\r\n      (_typeof =\r\n        \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator\r\n          ? function (obj) {\r\n              return typeof obj;\r\n            }\r\n          : function (obj) {\r\n              return obj &&\r\n                \"function\" == typeof Symbol &&\r\n                obj.constructor === Symbol &&\r\n                obj !== Symbol.prototype\r\n                ? \"symbol\"\r\n                : typeof obj;\r\n            }),\r\n      _typeof(obj)\r\n    );\r\n  }\r\n\r\n  function _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n      throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n  }\r\n\r\n  function _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  function _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) _defineProperties(Constructor, staticProps);\r\n    Object.defineProperty(Constructor, \"prototype\", {\r\n      writable: false,\r\n    });\r\n    return Constructor;\r\n  }\r\n\r\n  function _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  function _toConsumableArray(arr) {\r\n    return (\r\n      _arrayWithoutHoles(arr) ||\r\n      _iterableToArray(arr) ||\r\n      _unsupportedIterableToArray(arr) ||\r\n      _nonIterableSpread()\r\n    );\r\n  }\r\n\r\n  function _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n  }\r\n\r\n  function _iterableToArray(iter) {\r\n    if (\r\n      (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null) ||\r\n      iter[\"@@iterator\"] != null\r\n    )\r\n      return Array.from(iter);\r\n  }\r\n\r\n  function _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) return;\r\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\r\n      return _arrayLikeToArray(o, minLen);\r\n  }\r\n\r\n  function _arrayLikeToArray(arr, len) {\r\n    if (len == null || len > arr.length) len = arr.length;\r\n\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n    return arr2;\r\n  }\r\n\r\n  function _nonIterableSpread() {\r\n    throw new TypeError(\r\n      \"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\r\n    );\r\n  }\r\n\r\n  var IS_BROWSER =\r\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\r\n  var WINDOW = IS_BROWSER ? window : {};\r\n  var IS_TOUCH_DEVICE =\r\n    IS_BROWSER && WINDOW.document.documentElement\r\n      ? \"ontouchstart\" in WINDOW.document.documentElement\r\n      : false;\r\n  var HAS_POINTER_EVENT = IS_BROWSER ? \"PointerEvent\" in WINDOW : false;\r\n  var NAMESPACE = \"cropper\"; // Actions\r\n\r\n  var ACTION_ALL = \"all\";\r\n  var ACTION_CROP = \"crop\";\r\n  var ACTION_MOVE = \"move\";\r\n  var ACTION_ZOOM = \"zoom\";\r\n  var ACTION_EAST = \"e\";\r\n  var ACTION_WEST = \"w\";\r\n  var ACTION_SOUTH = \"s\";\r\n  var ACTION_NORTH = \"n\";\r\n  var ACTION_NORTH_EAST = \"ne\";\r\n  var ACTION_NORTH_WEST = \"nw\";\r\n  var ACTION_SOUTH_EAST = \"se\";\r\n  var ACTION_SOUTH_WEST = \"sw\"; // Classes\r\n\r\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\r\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\r\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\r\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\r\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\r\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\r\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\r\n\r\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\r\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\r\n\r\n  var DRAG_MODE_CROP = \"crop\";\r\n  var DRAG_MODE_MOVE = \"move\";\r\n  var DRAG_MODE_NONE = \"none\"; // Events\r\n\r\n  var EVENT_CROP = \"crop\";\r\n  var EVENT_CROP_END = \"cropend\";\r\n  var EVENT_CROP_MOVE = \"cropmove\";\r\n  var EVENT_CROP_START = \"cropstart\";\r\n  var EVENT_DBLCLICK = \"dblclick\";\r\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? \"touchstart\" : \"mousedown\";\r\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? \"touchmove\" : \"mousemove\";\r\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? \"touchend touchcancel\" : \"mouseup\";\r\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT\r\n    ? \"pointerdown\"\r\n    : EVENT_TOUCH_START;\r\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? \"pointermove\" : EVENT_TOUCH_MOVE;\r\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT\r\n    ? \"pointerup pointercancel\"\r\n    : EVENT_TOUCH_END;\r\n  var EVENT_READY = \"ready\";\r\n  var EVENT_RESIZE = \"resize\";\r\n  var EVENT_WHEEL = \"wheel\";\r\n  var EVENT_ZOOM = \"zoom\"; // Mime types\r\n\r\n  var MIME_TYPE_JPEG = \"image/jpeg\"; // RegExps\r\n\r\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\r\n  var REGEXP_DATA_URL = /^data:/;\r\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\r\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\r\n  // Inspired by the default width and height of a canvas element.\r\n\r\n  var MIN_CONTAINER_WIDTH = 200;\r\n  var MIN_CONTAINER_HEIGHT = 100;\r\n  var EXPORTED_DATA_KEY = [\r\n    \"left\",\r\n    \"top\",\r\n    \"width\",\r\n    \"height\",\r\n    \"naturalWidth\",\r\n    \"naturalHeight\",\r\n  ];\r\n\r\n  var DEFAULTS = {\r\n    // Define the view mode of the cropper\r\n    viewMode: 0,\r\n    // 0, 1, 2, 3\r\n    // Define the dragging mode of the cropper\r\n    dragMode: DRAG_MODE_CROP,\r\n    // 'crop', 'move' or 'none'\r\n    // Define the initial aspect ratio of the crop box\r\n    initialAspectRatio: NaN,\r\n    // Define the aspect ratio of the crop box\r\n    aspectRatio: NaN,\r\n    // An object with the previous cropping result data\r\n    data: null,\r\n    // A selector for adding extra containers to preview\r\n    preview: \"\",\r\n    // Re-render the cropper when resize the window\r\n    responsive: true,\r\n    // Restore the cropped area after resize the window\r\n    restore: true,\r\n    // Check if the current image is a cross-origin image\r\n    checkCrossOrigin: true,\r\n    // Check the current image's Exif Orientation information\r\n    checkOrientation: true,\r\n    // Show the black modal\r\n    modal: true,\r\n    // Show the dashed lines for guiding\r\n    guides: true,\r\n    // Show the center indicator for guiding\r\n    center: true,\r\n    // Show the white modal to highlight the crop box\r\n    highlight: true,\r\n    // Show the grid background\r\n    background: true,\r\n    // Enable to crop the image automatically when initialize\r\n    autoCrop: true,\r\n    // Define the percentage of automatic cropping area when initializes\r\n    autoCropArea: 0.8,\r\n    // Enable to move the image\r\n    movable: true,\r\n    // Enable to rotate the image\r\n    rotatable: true,\r\n    // Enable to scale the image\r\n    scalable: true,\r\n    // Enable to zoom the image\r\n    zoomable: true,\r\n    // Enable to zoom the image by dragging touch\r\n    zoomOnTouch: true,\r\n    // Enable to zoom the image by wheeling mouse\r\n    zoomOnWheel: true,\r\n    // Define zoom ratio when zoom the image by wheeling mouse\r\n    wheelZoomRatio: 0.1,\r\n    // Enable to move the crop box\r\n    cropBoxMovable: true,\r\n    // Enable to resize the crop box\r\n    cropBoxResizable: true,\r\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\r\n    toggleDragModeOnDblclick: true,\r\n    // Size limitation\r\n    minCanvasWidth: 0,\r\n    minCanvasHeight: 0,\r\n    maxCanvasWidth: Infinity,\r\n    maxCanvasHeight: Infinity,\r\n    minCropBoxWidth: 0,\r\n    minCropBoxHeight: 0,\r\n    maxCropBoxWidth: Infinity,\r\n    maxCropBoxHeight: Infinity,\r\n    minContainerWidth: MIN_CONTAINER_WIDTH,\r\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\r\n    // Shortcuts of events\r\n    ready: null,\r\n    cropstart: null,\r\n    cropmove: null,\r\n    cropend: null,\r\n    crop: null,\r\n    zoom: null,\r\n  };\r\n\r\n  var TEMPLATE =\r\n    '<div class=\"cropper-container\" touch-action=\"none\">' +\r\n    '<div class=\"cropper-canvas\"></div>' +\r\n    '<div class=\"cropper-drag-box\"></div>' +\r\n    '<div class=\"cropper-crop-box\">' +\r\n    '<div class=\"cropper-view-box\"></div>' +\r\n    '<div class=\"cropper-dashed dashed-h\"></div>' +\r\n    '<div class=\"cropper-dashed dashed-v\"></div>' +\r\n    '<div class=\"cropper-center\"></div>' +\r\n    '<div class=\"cropper-face\"></div>' +\r\n    '<div class=\"cropper-line line-e\" data-cropper-action=\"e\"></div>' +\r\n    '<div class=\"cropper-line line-n\" data-cropper-action=\"n\"></div>' +\r\n    '<div class=\"cropper-line line-w\" data-cropper-action=\"w\"></div>' +\r\n    '<div class=\"cropper-line line-s\" data-cropper-action=\"s\"></div>' +\r\n    '<div class=\"cropper-point point-e\" data-cropper-action=\"e\"></div>' +\r\n    '<div class=\"cropper-point point-n\" data-cropper-action=\"n\"></div>' +\r\n    '<div class=\"cropper-point point-w\" data-cropper-action=\"w\"></div>' +\r\n    '<div class=\"cropper-point point-s\" data-cropper-action=\"s\"></div>' +\r\n    '<div class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></div>' +\r\n    '<div class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></div>' +\r\n    '<div class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></div>' +\r\n    '<div class=\"cropper-point point-se\" data-cropper-action=\"se\"></div>' +\r\n    \"</div>\" +\r\n    \"</div>\";\r\n\r\n  /**\r\n   * Check if the given value is not a number.\r\n   */\r\n\r\n  var isNaN = Number.isNaN || WINDOW.isNaN;\r\n  /**\r\n   * Check if the given value is a number.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\r\n   */\r\n\r\n  function isNumber(value) {\r\n    return typeof value === \"number\" && !isNaN(value);\r\n  }\r\n  /**\r\n   * Check if the given value is a positive number.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\r\n   */\r\n\r\n  var isPositiveNumber = function isPositiveNumber(value) {\r\n    return value > 0 && value < Infinity;\r\n  };\r\n  /**\r\n   * Check if the given value is undefined.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\r\n   */\r\n\r\n  function isUndefined(value) {\r\n    return typeof value === \"undefined\";\r\n  }\r\n  /**\r\n   * Check if the given value is an object.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\r\n   */\r\n\r\n  function isObject(value) {\r\n    return _typeof(value) === \"object\" && value !== null;\r\n  }\r\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n  /**\r\n   * Check if the given value is a plain object.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\r\n   */\r\n\r\n  function isPlainObject(value) {\r\n    if (!isObject(value)) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      var _constructor = value.constructor;\r\n      var prototype = _constructor.prototype;\r\n      return (\r\n        _constructor &&\r\n        prototype &&\r\n        hasOwnProperty.call(prototype, \"isPrototypeOf\")\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n  /**\r\n   * Check if the given value is a function.\r\n   * @param {*} value - The value to check.\r\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\r\n   */\r\n\r\n  function isFunction(value) {\r\n    return typeof value === \"function\";\r\n  }\r\n  var slice = Array.prototype.slice;\r\n  /**\r\n   * Convert array-like or iterable object to an array.\r\n   * @param {*} value - The value to convert.\r\n   * @returns {Array} Returns a new array.\r\n   */\r\n\r\n  function toArray(value) {\r\n    return Array.from ? Array.from(value) : slice.call(value);\r\n  }\r\n  /**\r\n   * Iterate the given data.\r\n   * @param {*} data - The data to iterate.\r\n   * @param {Function} callback - The process function for each element.\r\n   * @returns {*} The original data.\r\n   */\r\n\r\n  function forEach(data, callback) {\r\n    if (data && isFunction(callback)) {\r\n      if (\r\n        Array.isArray(data) ||\r\n        isNumber(data.length)\r\n        /* array-like */\r\n      ) {\r\n        toArray(data).forEach(function (value, key) {\r\n          callback.call(data, value, key, data);\r\n        });\r\n      } else if (isObject(data)) {\r\n        Object.keys(data).forEach(function (key) {\r\n          callback.call(data, data[key], key, data);\r\n        });\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n  /**\r\n   * Extend the given object.\r\n   * @param {*} target - The target object to extend.\r\n   * @param {*} args - The rest objects for merging to the target object.\r\n   * @returns {Object} The extended object.\r\n   */\r\n\r\n  var assign =\r\n    Object.assign ||\r\n    function assign(target) {\r\n      for (\r\n        var _len = arguments.length,\r\n          args = new Array(_len > 1 ? _len - 1 : 0),\r\n          _key = 1;\r\n        _key < _len;\r\n        _key++\r\n      ) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      if (isObject(target) && args.length > 0) {\r\n        args.forEach(function (arg) {\r\n          if (isObject(arg)) {\r\n            Object.keys(arg).forEach(function (key) {\r\n              target[key] = arg[key];\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      return target;\r\n    };\r\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\r\n  /**\r\n   * Normalize decimal number.\r\n   * Check out {@link https://0.30000000000000004.com/}\r\n   * @param {number} value - The value to normalize.\r\n   * @param {number} [times=100000000000] - The times for normalizing.\r\n   * @returns {number} Returns the normalized number.\r\n   */\r\n\r\n  function normalizeDecimalNumber(value) {\r\n    var times =\r\n      arguments.length > 1 && arguments[1] !== undefined\r\n        ? arguments[1]\r\n        : 100000000000;\r\n    return REGEXP_DECIMALS.test(value)\r\n      ? Math.round(value * times) / times\r\n      : value;\r\n  }\r\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\r\n  /**\r\n   * Apply styles to the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {Object} styles - The styles for applying.\r\n   */\r\n\r\n  function setStyle(element, styles) {\r\n    var style = element.style;\r\n    forEach(styles, function (value, property) {\r\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\r\n        value = \"\".concat(value, \"px\");\r\n      }\r\n\r\n      style[property] = value;\r\n    });\r\n  }\r\n  /**\r\n   * Check if the given element has a special class.\r\n   * @param {Element} element - The element to check.\r\n   * @param {string} value - The class to search.\r\n   * @returns {boolean} Returns `true` if the special class was found.\r\n   */\r\n\r\n  function hasClass(element, value) {\r\n    return element.classList\r\n      ? element.classList.contains(value)\r\n      : element.className.indexOf(value) > -1;\r\n  }\r\n  /**\r\n   * Add classes to the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} value - The classes to be added.\r\n   */\r\n\r\n  function addClass(element, value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    if (isNumber(element.length)) {\r\n      forEach(element, function (elem) {\r\n        addClass(elem, value);\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (element.classList) {\r\n      element.classList.add(value);\r\n      return;\r\n    }\r\n\r\n    var className = element.className.trim();\r\n\r\n    if (!className) {\r\n      element.className = value;\r\n    } else if (className.indexOf(value) < 0) {\r\n      element.className = \"\".concat(className, \" \").concat(value);\r\n    }\r\n  }\r\n  /**\r\n   * Remove classes from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} value - The classes to be removed.\r\n   */\r\n\r\n  function removeClass(element, value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    if (isNumber(element.length)) {\r\n      forEach(element, function (elem) {\r\n        removeClass(elem, value);\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (element.classList) {\r\n      element.classList.remove(value);\r\n      return;\r\n    }\r\n\r\n    if (element.className.indexOf(value) >= 0) {\r\n      element.className = element.className.replace(value, \"\");\r\n    }\r\n  }\r\n  /**\r\n   * Add or remove classes from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} value - The classes to be toggled.\r\n   * @param {boolean} added - Add only.\r\n   */\r\n\r\n  function toggleClass(element, value, added) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    if (isNumber(element.length)) {\r\n      forEach(element, function (elem) {\r\n        toggleClass(elem, value, added);\r\n      });\r\n      return;\r\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\r\n\r\n    if (added) {\r\n      addClass(element, value);\r\n    } else {\r\n      removeClass(element, value);\r\n    }\r\n  }\r\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\r\n  /**\r\n   * Transform the given string from camelCase to kebab-case\r\n   * @param {string} value - The value to transform.\r\n   * @returns {string} The transformed value.\r\n   */\r\n\r\n  function toParamCase(value) {\r\n    return value.replace(REGEXP_CAMEL_CASE, \"$1-$2\").toLowerCase();\r\n  }\r\n  /**\r\n   * Get data from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} name - The data key to get.\r\n   * @returns {string} The data value.\r\n   */\r\n\r\n  function getData(element, name) {\r\n    if (isObject(element[name])) {\r\n      return element[name];\r\n    }\r\n\r\n    if (element.dataset) {\r\n      return element.dataset[name];\r\n    }\r\n\r\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\r\n  }\r\n  /**\r\n   * Set data to the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} name - The data key to set.\r\n   * @param {string} data - The data value.\r\n   */\r\n\r\n  function setData(element, name, data) {\r\n    if (isObject(data)) {\r\n      element[name] = data;\r\n    } else if (element.dataset) {\r\n      element.dataset[name] = data;\r\n    } else {\r\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\r\n    }\r\n  }\r\n  /**\r\n   * Remove data from the given element.\r\n   * @param {Element} element - The target element.\r\n   * @param {string} name - The data key to remove.\r\n   */\r\n\r\n  function removeData(element, name) {\r\n    if (isObject(element[name])) {\r\n      try {\r\n        delete element[name];\r\n      } catch (error) {\r\n        element[name] = undefined;\r\n      }\r\n    } else if (element.dataset) {\r\n      // #128 Safari not allows to delete dataset property\r\n      try {\r\n        delete element.dataset[name];\r\n      } catch (error) {\r\n        element.dataset[name] = undefined;\r\n      }\r\n    } else {\r\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\r\n    }\r\n  }\r\n  var REGEXP_SPACES = /\\s\\s*/;\r\n\r\n  var onceSupported = (function () {\r\n    var supported = false;\r\n\r\n    if (IS_BROWSER) {\r\n      var once = false;\r\n\r\n      var listener = function listener() {};\r\n\r\n      var options = Object.defineProperty({}, \"once\", {\r\n        get: function get() {\r\n          supported = true;\r\n          return once;\r\n        },\r\n\r\n        /**\r\n         * This setter can fix a `TypeError` in strict mode\r\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\r\n         * @param {boolean} value - The value to set\r\n         */\r\n        set: function set(value) {\r\n          once = value;\r\n        },\r\n      });\r\n      WINDOW.addEventListener(\"test\", listener, options);\r\n      WINDOW.removeEventListener(\"test\", listener, options);\r\n    }\r\n\r\n    return supported;\r\n  })();\r\n  /**\r\n   * Remove event listener from the target element.\r\n   * @param {Element} element - The event target.\r\n   * @param {string} type - The event type(s).\r\n   * @param {Function} listener - The event listener.\r\n   * @param {Object} options - The event options.\r\n   */\r\n\r\n  function removeListener(element, type, listener) {\r\n    var options =\r\n      arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n    var handler = listener;\r\n    type\r\n      .trim()\r\n      .split(REGEXP_SPACES)\r\n      .forEach(function (event) {\r\n        if (!onceSupported) {\r\n          var listeners = element.listeners;\r\n\r\n          if (listeners && listeners[event] && listeners[event][listener]) {\r\n            handler = listeners[event][listener];\r\n            delete listeners[event][listener];\r\n\r\n            if (Object.keys(listeners[event]).length === 0) {\r\n              delete listeners[event];\r\n            }\r\n\r\n            if (Object.keys(listeners).length === 0) {\r\n              delete element.listeners;\r\n            }\r\n          }\r\n        }\r\n\r\n        element.removeEventListener(event, handler, options);\r\n      });\r\n  }\r\n  /**\r\n   * Add event listener to the target element.\r\n   * @param {Element} element - The event target.\r\n   * @param {string} type - The event type(s).\r\n   * @param {Function} listener - The event listener.\r\n   * @param {Object} options - The event options.\r\n   */\r\n\r\n  function addListener(element, type, listener) {\r\n    var options =\r\n      arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n    var _handler = listener;\r\n    type\r\n      .trim()\r\n      .split(REGEXP_SPACES)\r\n      .forEach(function (event) {\r\n        if (options.once && !onceSupported) {\r\n          var _element$listeners = element.listeners,\r\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\r\n\r\n          _handler = function handler() {\r\n            delete listeners[event][listener];\r\n            element.removeEventListener(event, _handler, options);\r\n\r\n            for (\r\n              var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;\r\n              _key2 < _len2;\r\n              _key2++\r\n            ) {\r\n              args[_key2] = arguments[_key2];\r\n            }\r\n\r\n            listener.apply(element, args);\r\n          };\r\n\r\n          if (!listeners[event]) {\r\n            listeners[event] = {};\r\n          }\r\n\r\n          if (listeners[event][listener]) {\r\n            element.removeEventListener(\r\n              event,\r\n              listeners[event][listener],\r\n              options,\r\n            );\r\n          }\r\n\r\n          listeners[event][listener] = _handler;\r\n          element.listeners = listeners;\r\n        }\r\n\r\n        element.addEventListener(event, _handler, options);\r\n      });\r\n  }\r\n  /**\r\n   * Dispatch event on the target element.\r\n   * @param {Element} element - The event target.\r\n   * @param {string} type - The event type(s).\r\n   * @param {Object} data - The additional event data.\r\n   * @returns {boolean} Indicate if the event is default prevented or not.\r\n   */\r\n\r\n  function dispatchEvent(element, type, data) {\r\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\r\n\r\n    if (isFunction(Event) && isFunction(CustomEvent)) {\r\n      event = new CustomEvent(type, {\r\n        detail: data,\r\n        bubbles: true,\r\n        cancelable: true,\r\n      });\r\n    } else {\r\n      event = document.createEvent(\"CustomEvent\");\r\n      event.initCustomEvent(type, true, true, data);\r\n    }\r\n\r\n    return element.dispatchEvent(event);\r\n  }\r\n  /**\r\n   * Get the offset base on the document.\r\n   * @param {Element} element - The target element.\r\n   * @returns {Object} The offset data.\r\n   */\r\n\r\n  function getOffset(element) {\r\n    var box = element.getBoundingClientRect();\r\n    return {\r\n      left:\r\n        box.left + (window.pageXOffset - document.documentElement.clientLeft),\r\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop),\r\n    };\r\n  }\r\n  var location = WINDOW.location;\r\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\r\n  /**\r\n   * Check if the given URL is a cross origin URL.\r\n   * @param {string} url - The target URL.\r\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\r\n   */\r\n\r\n  function isCrossOriginURL(url) {\r\n    var parts = url.match(REGEXP_ORIGINS);\r\n    return (\r\n      parts !== null &&\r\n      (parts[1] !== location.protocol ||\r\n        parts[2] !== location.hostname ||\r\n        parts[3] !== location.port)\r\n    );\r\n  }\r\n  /**\r\n   * Add timestamp to the given URL.\r\n   * @param {string} url - The target URL.\r\n   * @returns {string} The result URL.\r\n   */\r\n\r\n  function addTimestamp(url) {\r\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\r\n    return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + timestamp;\r\n  }\r\n  /**\r\n   * Get transforms base on the given object.\r\n   * @param {Object} obj - The target object.\r\n   * @returns {string} A string contains transform values.\r\n   */\r\n\r\n  function getTransforms(_ref) {\r\n    var rotate = _ref.rotate,\r\n      scaleX = _ref.scaleX,\r\n      scaleY = _ref.scaleY,\r\n      translateX = _ref.translateX,\r\n      translateY = _ref.translateY;\r\n    var values = [];\r\n\r\n    if (isNumber(translateX) && translateX !== 0) {\r\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\r\n    }\r\n\r\n    if (isNumber(translateY) && translateY !== 0) {\r\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\r\n    } // Rotate should come first before scale to match orientation transform\r\n\r\n    if (isNumber(rotate) && rotate !== 0) {\r\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\r\n    }\r\n\r\n    if (isNumber(scaleX) && scaleX !== 1) {\r\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\r\n    }\r\n\r\n    if (isNumber(scaleY) && scaleY !== 1) {\r\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\r\n    }\r\n\r\n    var transform = values.length ? values.join(\" \") : \"none\";\r\n    return {\r\n      WebkitTransform: transform,\r\n      msTransform: transform,\r\n      transform: transform,\r\n    };\r\n  }\r\n  /**\r\n   * Get the max ratio of a group of pointers.\r\n   * @param {string} pointers - The target pointers.\r\n   * @returns {number} The result ratio.\r\n   */\r\n\r\n  function getMaxZoomRatio(pointers) {\r\n    var pointers2 = _objectSpread2({}, pointers);\r\n\r\n    var maxRatio = 0;\r\n    forEach(pointers, function (pointer, pointerId) {\r\n      delete pointers2[pointerId];\r\n      forEach(pointers2, function (pointer2) {\r\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\r\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\r\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\r\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\r\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\r\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\r\n        var ratio = (z2 - z1) / z1;\r\n\r\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\r\n          maxRatio = ratio;\r\n        }\r\n      });\r\n    });\r\n    return maxRatio;\r\n  }\r\n  /**\r\n   * Get a pointer from an event object.\r\n   * @param {Object} event - The target event object.\r\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\r\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\r\n   */\r\n\r\n  function getPointer(_ref2, endOnly) {\r\n    var pageX = _ref2.pageX,\r\n      pageY = _ref2.pageY;\r\n    var end = {\r\n      endX: pageX,\r\n      endY: pageY,\r\n    };\r\n    return endOnly\r\n      ? end\r\n      : _objectSpread2(\r\n          {\r\n            startX: pageX,\r\n            startY: pageY,\r\n          },\r\n          end,\r\n        );\r\n  }\r\n  /**\r\n   * Get the center point coordinate of a group of pointers.\r\n   * @param {Object} pointers - The target pointers.\r\n   * @returns {Object} The center point coordinate.\r\n   */\r\n\r\n  function getPointersCenter(pointers) {\r\n    var pageX = 0;\r\n    var pageY = 0;\r\n    var count = 0;\r\n    forEach(pointers, function (_ref3) {\r\n      var startX = _ref3.startX,\r\n        startY = _ref3.startY;\r\n      pageX += startX;\r\n      pageY += startY;\r\n      count += 1;\r\n    });\r\n    pageX /= count;\r\n    pageY /= count;\r\n    return {\r\n      pageX: pageX,\r\n      pageY: pageY,\r\n    };\r\n  }\r\n  /**\r\n   * Get the max sizes in a rectangle under the given aspect ratio.\r\n   * @param {Object} data - The original sizes.\r\n   * @param {string} [type='contain'] - The adjust type.\r\n   * @returns {Object} The result sizes.\r\n   */\r\n\r\n  function getAdjustedSizes(_ref4) {\r\n    var aspectRatio = _ref4.aspectRatio,\r\n      height = _ref4.height,\r\n      width = _ref4.width;\r\n    var type =\r\n      arguments.length > 1 && arguments[1] !== undefined\r\n        ? arguments[1]\r\n        : \"contain\";\r\n    var isValidWidth = isPositiveNumber(width);\r\n    var isValidHeight = isPositiveNumber(height);\r\n\r\n    if (isValidWidth && isValidHeight) {\r\n      var adjustedWidth = height * aspectRatio;\r\n\r\n      if (\r\n        (type === \"contain\" && adjustedWidth > width) ||\r\n        (type === \"cover\" && adjustedWidth < width)\r\n      ) {\r\n        height = width / aspectRatio;\r\n      } else {\r\n        width = height * aspectRatio;\r\n      }\r\n    } else if (isValidWidth) {\r\n      height = width / aspectRatio;\r\n    } else if (isValidHeight) {\r\n      width = height * aspectRatio;\r\n    }\r\n\r\n    return {\r\n      width: width,\r\n      height: height,\r\n    };\r\n  }\r\n  /**\r\n   * Get the new sizes of a rectangle after rotated.\r\n   * @param {Object} data - The original sizes.\r\n   * @returns {Object} The result sizes.\r\n   */\r\n\r\n  function getRotatedSizes(_ref5) {\r\n    var width = _ref5.width,\r\n      height = _ref5.height,\r\n      degree = _ref5.degree;\r\n    degree = Math.abs(degree) % 180;\r\n\r\n    if (degree === 90) {\r\n      return {\r\n        width: height,\r\n        height: width,\r\n      };\r\n    }\r\n\r\n    var arc = ((degree % 90) * Math.PI) / 180;\r\n    var sinArc = Math.sin(arc);\r\n    var cosArc = Math.cos(arc);\r\n    var newWidth = width * cosArc + height * sinArc;\r\n    var newHeight = width * sinArc + height * cosArc;\r\n    return degree > 90\r\n      ? {\r\n          width: newHeight,\r\n          height: newWidth,\r\n        }\r\n      : {\r\n          width: newWidth,\r\n          height: newHeight,\r\n        };\r\n  }\r\n  /**\r\n   * Get a canvas which drew the given image.\r\n   * @param {HTMLImageElement} image - The image for drawing.\r\n   * @param {Object} imageData - The image data.\r\n   * @param {Object} canvasData - The canvas data.\r\n   * @param {Object} options - The options.\r\n   * @returns {HTMLCanvasElement} The result canvas.\r\n   */\r\n\r\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\r\n    var imageAspectRatio = _ref6.aspectRatio,\r\n      imageNaturalWidth = _ref6.naturalWidth,\r\n      imageNaturalHeight = _ref6.naturalHeight,\r\n      _ref6$rotate = _ref6.rotate,\r\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\r\n      _ref6$scaleX = _ref6.scaleX,\r\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\r\n      _ref6$scaleY = _ref6.scaleY,\r\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\r\n    var aspectRatio = _ref7.aspectRatio,\r\n      naturalWidth = _ref7.naturalWidth,\r\n      naturalHeight = _ref7.naturalHeight;\r\n    var _ref8$fillColor = _ref8.fillColor,\r\n      fillColor = _ref8$fillColor === void 0 ? \"transparent\" : _ref8$fillColor,\r\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\r\n      imageSmoothingEnabled =\r\n        _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\r\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\r\n      imageSmoothingQuality =\r\n        _ref8$imageSmoothingQ === void 0 ? \"low\" : _ref8$imageSmoothingQ,\r\n      _ref8$maxWidth = _ref8.maxWidth,\r\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\r\n      _ref8$maxHeight = _ref8.maxHeight,\r\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\r\n      _ref8$minWidth = _ref8.minWidth,\r\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\r\n      _ref8$minHeight = _ref8.minHeight,\r\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\r\n    var canvas = document.createElement(\"canvas\");\r\n    var context = canvas.getContext(\"2d\");\r\n    var maxSizes = getAdjustedSizes({\r\n      aspectRatio: aspectRatio,\r\n      width: maxWidth,\r\n      height: maxHeight,\r\n    });\r\n    var minSizes = getAdjustedSizes(\r\n      {\r\n        aspectRatio: aspectRatio,\r\n        width: minWidth,\r\n        height: minHeight,\r\n      },\r\n      \"cover\",\r\n    );\r\n    var width = Math.min(\r\n      maxSizes.width,\r\n      Math.max(minSizes.width, naturalWidth),\r\n    );\r\n    var height = Math.min(\r\n      maxSizes.height,\r\n      Math.max(minSizes.height, naturalHeight),\r\n    ); // Note: should always use image's natural sizes for drawing as\r\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\r\n\r\n    var destMaxSizes = getAdjustedSizes({\r\n      aspectRatio: imageAspectRatio,\r\n      width: maxWidth,\r\n      height: maxHeight,\r\n    });\r\n    var destMinSizes = getAdjustedSizes(\r\n      {\r\n        aspectRatio: imageAspectRatio,\r\n        width: minWidth,\r\n        height: minHeight,\r\n      },\r\n      \"cover\",\r\n    );\r\n    var destWidth = Math.min(\r\n      destMaxSizes.width,\r\n      Math.max(destMinSizes.width, imageNaturalWidth),\r\n    );\r\n    var destHeight = Math.min(\r\n      destMaxSizes.height,\r\n      Math.max(destMinSizes.height, imageNaturalHeight),\r\n    );\r\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\r\n    canvas.width = normalizeDecimalNumber(width);\r\n    canvas.height = normalizeDecimalNumber(height);\r\n    context.fillStyle = fillColor;\r\n    context.fillRect(0, 0, width, height);\r\n    context.save();\r\n    context.translate(width / 2, height / 2);\r\n    context.rotate((rotate * Math.PI) / 180);\r\n    context.scale(scaleX, scaleY);\r\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\r\n    context.imageSmoothingQuality = imageSmoothingQuality;\r\n    context.drawImage.apply(\r\n      context,\r\n      [image].concat(\r\n        _toConsumableArray(\r\n          params.map(function (param) {\r\n            return Math.floor(normalizeDecimalNumber(param));\r\n          }),\r\n        ),\r\n      ),\r\n    );\r\n    context.restore();\r\n    return canvas;\r\n  }\r\n  var fromCharCode = String.fromCharCode;\r\n  /**\r\n   * Get string from char code in data view.\r\n   * @param {DataView} dataView - The data view for read.\r\n   * @param {number} start - The start index.\r\n   * @param {number} length - The read length.\r\n   * @returns {string} The read result.\r\n   */\r\n\r\n  function getStringFromCharCode(dataView, start, length) {\r\n    var str = \"\";\r\n    length += start;\r\n\r\n    for (var i = start; i < length; i += 1) {\r\n      str += fromCharCode(dataView.getUint8(i));\r\n    }\r\n\r\n    return str;\r\n  }\r\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\r\n  /**\r\n   * Transform Data URL to array buffer.\r\n   * @param {string} dataURL - The Data URL to transform.\r\n   * @returns {ArrayBuffer} The result array buffer.\r\n   */\r\n\r\n  function dataURLToArrayBuffer(dataURL) {\r\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, \"\");\r\n    var binary = atob(base64);\r\n    var arrayBuffer = new ArrayBuffer(binary.length);\r\n    var uint8 = new Uint8Array(arrayBuffer);\r\n    forEach(uint8, function (value, i) {\r\n      uint8[i] = binary.charCodeAt(i);\r\n    });\r\n    return arrayBuffer;\r\n  }\r\n  /**\r\n   * Transform array buffer to Data URL.\r\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\r\n   * @param {string} mimeType - The mime type of the Data URL.\r\n   * @returns {string} The result Data URL.\r\n   */\r\n\r\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\r\n    var chunks = []; // Chunk Typed Array for better performance (#435)\r\n\r\n    var chunkSize = 8192;\r\n    var uint8 = new Uint8Array(arrayBuffer);\r\n\r\n    while (uint8.length > 0) {\r\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\r\n      // eslint-disable-next-line prefer-spread\r\n      chunks.push(\r\n        fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))),\r\n      );\r\n      uint8 = uint8.subarray(chunkSize);\r\n    }\r\n\r\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join(\"\")));\r\n  }\r\n  /**\r\n   * Get orientation value from given array buffer.\r\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\r\n   * @returns {number} The read orientation value.\r\n   */\r\n\r\n  function resetAndGetOrientation(arrayBuffer) {\r\n    var dataView = new DataView(arrayBuffer);\r\n    var orientation; // Ignores range error when the image does not have correct Exif information\r\n\r\n    try {\r\n      var littleEndian;\r\n      var app1Start;\r\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\r\n\r\n      if (dataView.getUint8(0) === 0xff && dataView.getUint8(1) === 0xd8) {\r\n        var length = dataView.byteLength;\r\n        var offset = 2;\r\n\r\n        while (offset + 1 < length) {\r\n          if (\r\n            dataView.getUint8(offset) === 0xff &&\r\n            dataView.getUint8(offset + 1) === 0xe1\r\n          ) {\r\n            app1Start = offset;\r\n            break;\r\n          }\r\n\r\n          offset += 1;\r\n        }\r\n      }\r\n\r\n      if (app1Start) {\r\n        var exifIDCode = app1Start + 4;\r\n        var tiffOffset = app1Start + 10;\r\n\r\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === \"Exif\") {\r\n          var endianness = dataView.getUint16(tiffOffset);\r\n          littleEndian = endianness === 0x4949;\r\n\r\n          if (\r\n            littleEndian ||\r\n            endianness === 0x4d4d\r\n            /* bigEndian */\r\n          ) {\r\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002a) {\r\n              var firstIFDOffset = dataView.getUint32(\r\n                tiffOffset + 4,\r\n                littleEndian,\r\n              );\r\n\r\n              if (firstIFDOffset >= 0x00000008) {\r\n                ifdStart = tiffOffset + firstIFDOffset;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (ifdStart) {\r\n        var _length = dataView.getUint16(ifdStart, littleEndian);\r\n\r\n        var _offset;\r\n\r\n        var i;\r\n\r\n        for (i = 0; i < _length; i += 1) {\r\n          _offset = ifdStart + i * 12 + 2;\r\n\r\n          if (\r\n            dataView.getUint16(_offset, littleEndian) === 0x0112\r\n            /* Orientation */\r\n          ) {\r\n            // 8 is the offset of the current tag's value\r\n            _offset += 8; // Get the original orientation value\r\n\r\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\r\n\r\n            dataView.setUint16(_offset, 1, littleEndian);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      orientation = 1;\r\n    }\r\n\r\n    return orientation;\r\n  }\r\n  /**\r\n   * Parse Exif Orientation value.\r\n   * @param {number} orientation - The orientation to parse.\r\n   * @returns {Object} The parsed result.\r\n   */\r\n\r\n  function parseOrientation(orientation) {\r\n    var rotate = 0;\r\n    var scaleX = 1;\r\n    var scaleY = 1;\r\n\r\n    switch (orientation) {\r\n      // Flip horizontal\r\n      case 2:\r\n        scaleX = -1;\r\n        break;\r\n      // Rotate left 180°\r\n\r\n      case 3:\r\n        rotate = -180;\r\n        break;\r\n      // Flip vertical\r\n\r\n      case 4:\r\n        scaleY = -1;\r\n        break;\r\n      // Flip vertical and rotate right 90°\r\n\r\n      case 5:\r\n        rotate = 90;\r\n        scaleY = -1;\r\n        break;\r\n      // Rotate right 90°\r\n\r\n      case 6:\r\n        rotate = 90;\r\n        break;\r\n      // Flip horizontal and rotate right 90°\r\n\r\n      case 7:\r\n        rotate = 90;\r\n        scaleX = -1;\r\n        break;\r\n      // Rotate left 90°\r\n\r\n      case 8:\r\n        rotate = -90;\r\n        break;\r\n    }\r\n\r\n    return {\r\n      rotate: rotate,\r\n      scaleX: scaleX,\r\n      scaleY: scaleY,\r\n    };\r\n  }\r\n\r\n  var render = {\r\n    render: function render() {\r\n      this.initContainer();\r\n      this.initCanvas();\r\n      this.initialCanvasData = assign({}, this.canvasData);\r\n      this.initCropBox(); // Store the `initialCropBoxData` outside of the `initCropBox` method,\r\n      // just because the `initCropBox` method will be called more then once.\r\n\r\n      this.initialCropBoxData = assign({}, this.cropBoxData);\r\n      this.renderCanvas();\r\n\r\n      if (this.cropped) {\r\n        this.renderCropBox();\r\n      }\r\n    },\r\n    initContainer: function initContainer() {\r\n      var element = this.element,\r\n        options = this.options,\r\n        container = this.container,\r\n        cropper = this.cropper;\r\n      var minWidth = Number(options.minContainerWidth);\r\n      var minHeight = Number(options.minContainerHeight);\r\n      addClass(cropper, CLASS_HIDDEN);\r\n      removeClass(element, CLASS_HIDDEN);\r\n      var containerData = {\r\n        width: Math.max(\r\n          container.offsetWidth,\r\n          minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH,\r\n        ),\r\n        height: Math.max(\r\n          container.offsetHeight,\r\n          minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT,\r\n        ),\r\n      };\r\n      setStyle(cropper, containerData);\r\n      addClass(element, CLASS_HIDDEN);\r\n      removeClass(cropper, CLASS_HIDDEN);\r\n      this.containerData = containerData;\r\n    },\r\n    // Canvas (image wrapper)\r\n    initCanvas: function initCanvas() {\r\n      var options = this.options,\r\n        containerData = this.containerData,\r\n        imageData = this.imageData;\r\n      var viewMode = options.viewMode;\r\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\r\n      var naturalWidth = rotated\r\n        ? imageData.naturalHeight\r\n        : imageData.naturalWidth;\r\n      var naturalHeight = rotated\r\n        ? imageData.naturalWidth\r\n        : imageData.naturalHeight;\r\n      var aspectRatio = naturalWidth / naturalHeight;\r\n      var width = containerData.width,\r\n        height = containerData.height;\r\n\r\n      if (height * aspectRatio > width) {\r\n        if (viewMode === 3) {\r\n          width = height * aspectRatio;\r\n        } else {\r\n          height = width / aspectRatio;\r\n        }\r\n      } else if (viewMode === 3) {\r\n        height = width / aspectRatio;\r\n      } else {\r\n        width = height * aspectRatio;\r\n      }\r\n\r\n      var canvasData = {\r\n        aspectRatio: aspectRatio,\r\n        naturalWidth: naturalWidth,\r\n        naturalHeight: naturalHeight,\r\n        width: width,\r\n        height: height,\r\n        left: (containerData.width - width) / 2,\r\n        top: (containerData.height - height) / 2,\r\n        scale: width / naturalWidth,\r\n      };\r\n      canvasData.oldLeft = canvasData.left;\r\n      canvasData.oldTop = canvasData.top;\r\n      this.canvasData = canvasData;\r\n      this.limitCanvas(true, true);\r\n    },\r\n    limitCanvas: function limitCanvas() {\r\n      var sizeLimited =\r\n        arguments.length > 0 && arguments[0] !== undefined\r\n          ? arguments[0]\r\n          : false;\r\n      var positionLimited =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : false;\r\n      var options = this.options,\r\n        containerData = this.containerData,\r\n        canvasData = this.canvasData;\r\n      var viewMode = options.viewMode;\r\n      var containerWidth = containerData.width,\r\n        containerHeight = containerData.height;\r\n      var aspectRatio = canvasData.aspectRatio,\r\n        width = canvasData.width,\r\n        height = canvasData.height;\r\n\r\n      if (sizeLimited) {\r\n        var minCanvasWidth = Math.max(options.minCanvasWidth, 0) || 0;\r\n        var minCanvasHeight = Math.max(options.minCanvasHeight, 0) || 0;\r\n        var maxCanvasWidth =\r\n          Math.max(options.maxCanvasWidth, minCanvasWidth) || Infinity;\r\n        var maxCanvasHeight =\r\n          Math.max(options.maxCanvasHeight, minCanvasHeight) || Infinity;\r\n\r\n        if (viewMode > 1) {\r\n          minCanvasWidth = Math.max(minCanvasWidth, containerWidth);\r\n          minCanvasHeight = Math.max(minCanvasHeight, containerHeight);\r\n\r\n          if (viewMode === 3) {\r\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\r\n              minCanvasWidth = minCanvasHeight * aspectRatio;\r\n            } else {\r\n              minCanvasHeight = minCanvasWidth / aspectRatio;\r\n            }\r\n          }\r\n        }\r\n\r\n        var _getAdjustedSizes = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: minCanvasWidth,\r\n          height: minCanvasHeight,\r\n        });\r\n\r\n        minCanvasWidth = _getAdjustedSizes.width;\r\n        minCanvasHeight = _getAdjustedSizes.height;\r\n\r\n        var _getAdjustedSizes2 = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: maxCanvasWidth,\r\n          height: maxCanvasHeight,\r\n        });\r\n\r\n        maxCanvasWidth = _getAdjustedSizes2.width;\r\n        maxCanvasHeight = _getAdjustedSizes2.height;\r\n        canvasData.minWidth = minCanvasWidth;\r\n        canvasData.minHeight = minCanvasHeight;\r\n        canvasData.maxWidth = maxCanvasWidth;\r\n        canvasData.maxHeight = maxCanvasHeight;\r\n      }\r\n\r\n      if (positionLimited) {\r\n        var minLeft = -width;\r\n        var minTop = -height;\r\n        var maxLeft = containerWidth;\r\n        var maxTop = containerHeight;\r\n\r\n        if (viewMode > 1) {\r\n          var newLeft = containerWidth - width;\r\n          var newTop = containerHeight - height;\r\n          minLeft = Math.min(0, newLeft);\r\n          minTop = Math.min(0, newTop);\r\n          maxLeft = Math.max(0, newLeft);\r\n          maxTop = Math.max(0, newTop);\r\n        }\r\n\r\n        canvasData.minLeft = minLeft;\r\n        canvasData.minTop = minTop;\r\n        canvasData.maxLeft = maxLeft;\r\n        canvasData.maxTop = maxTop;\r\n      }\r\n    },\r\n    renderCanvas: function renderCanvas() {\r\n      var changed =\r\n        arguments.length > 0 && arguments[0] !== undefined\r\n          ? arguments[0]\r\n          : false;\r\n      var transformed =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : false;\r\n      var imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n\r\n      if (transformed) {\r\n        var _getRotatedSizes = getRotatedSizes({\r\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\r\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\r\n            degree: imageData.rotate || 0,\r\n          }),\r\n          naturalWidth = _getRotatedSizes.width,\r\n          naturalHeight = _getRotatedSizes.height;\r\n\r\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\r\n        var height =\r\n          canvasData.height * (naturalHeight / canvasData.naturalHeight);\r\n        canvasData.left -= (width - canvasData.width) / 2;\r\n        canvasData.top -= (height - canvasData.height) / 2;\r\n        canvasData.width = width;\r\n        canvasData.height = height;\r\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\r\n        canvasData.naturalWidth = naturalWidth;\r\n        canvasData.naturalHeight = naturalHeight;\r\n        this.limitCanvas(true, false);\r\n      }\r\n\r\n      if (\r\n        canvasData.width > canvasData.maxWidth ||\r\n        canvasData.width < canvasData.minWidth\r\n      ) {\r\n        canvasData.left = canvasData.oldLeft;\r\n      }\r\n\r\n      if (\r\n        canvasData.height > canvasData.maxHeight ||\r\n        canvasData.height < canvasData.minHeight\r\n      ) {\r\n        canvasData.top = canvasData.oldTop;\r\n      }\r\n\r\n      canvasData.width = Math.min(\r\n        Math.max(canvasData.width, canvasData.minWidth),\r\n        canvasData.maxWidth,\r\n      );\r\n      canvasData.height = Math.min(\r\n        Math.max(canvasData.height, canvasData.minHeight),\r\n        canvasData.maxHeight,\r\n      );\r\n      canvasData.scale = canvasData.width / canvasData.naturalWidth;\r\n      this.limitCanvas(false, true);\r\n      canvasData.left = Math.min(\r\n        Math.max(canvasData.left, canvasData.minLeft),\r\n        canvasData.maxLeft,\r\n      );\r\n      canvasData.top = Math.min(\r\n        Math.max(canvasData.top, canvasData.minTop),\r\n        canvasData.maxTop,\r\n      );\r\n\r\n      if (canvasData.left === canvasData.oldLeft) {\r\n        cropBoxData.left = cropBoxData.oldLeft;\r\n      }\r\n\r\n      if (canvasData.top === canvasData.oldTop) {\r\n        cropBoxData.top = cropBoxData.oldTop;\r\n      }\r\n\r\n      canvasData.oldLeft = canvasData.left;\r\n      canvasData.oldTop = canvasData.top;\r\n      setStyle(\r\n        this.canvas,\r\n        assign(\r\n          {\r\n            width: canvasData.width,\r\n            height: canvasData.height,\r\n          },\r\n          getTransforms({\r\n            translateX: canvasData.left,\r\n            translateY: canvasData.top,\r\n          }),\r\n        ),\r\n      );\r\n      this.renderImage();\r\n\r\n      if (changed) {\r\n        if (this.cropped) {\r\n          // Reinitialize the crop box when the canvas rotated or scaled.\r\n          if (transformed) {\r\n            this.initCropBox();\r\n          } else {\r\n            this.limitCropBox(true, true);\r\n          }\r\n\r\n          this.renderCropBox();\r\n        } else {\r\n          this.output();\r\n        }\r\n      }\r\n    },\r\n    renderImage: function renderImage() {\r\n      var imageData = this.imageData,\r\n        canvasData = this.canvasData;\r\n      var width =\r\n        imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\r\n      var height =\r\n        imageData.naturalHeight *\r\n        (canvasData.height / canvasData.naturalHeight);\r\n      assign(imageData, {\r\n        width: width,\r\n        height: height,\r\n        left: (canvasData.width - width) / 2,\r\n        top: (canvasData.height - height) / 2,\r\n      });\r\n      setStyle(\r\n        this.image,\r\n        assign(\r\n          {\r\n            width: imageData.width,\r\n            height: imageData.height,\r\n          },\r\n          getTransforms(\r\n            assign(\r\n              {\r\n                translateX: imageData.left,\r\n                translateY: imageData.top,\r\n              },\r\n              imageData,\r\n            ),\r\n          ),\r\n        ),\r\n      );\r\n    },\r\n    initCropBox: function initCropBox() {\r\n      var options = this.options,\r\n        canvasData = this.canvasData;\r\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\r\n      var width = canvasData.width,\r\n        height = canvasData.height;\r\n\r\n      if (aspectRatio) {\r\n        if (height * aspectRatio > width) {\r\n          height = width / aspectRatio;\r\n        } else {\r\n          width = height * aspectRatio;\r\n        }\r\n      }\r\n\r\n      var cropBoxData = {\r\n        width: width,\r\n        height: height,\r\n      };\r\n      this.cropBoxData = cropBoxData;\r\n      this.limitCropBox(true, true); // Initialize auto crop area\r\n\r\n      cropBoxData.width = Math.min(\r\n        Math.max(cropBoxData.width, cropBoxData.minWidth),\r\n        cropBoxData.maxWidth,\r\n      );\r\n      cropBoxData.height = Math.min(\r\n        Math.max(cropBoxData.height, cropBoxData.minHeight),\r\n        cropBoxData.maxHeight,\r\n      );\r\n      var autoCropArea = Number(options.autoCropArea) || 0.8; // The width/height of auto crop area must large than \"minWidth/Height\"\r\n\r\n      cropBoxData.width = Math.max(\r\n        cropBoxData.minWidth,\r\n        cropBoxData.width * autoCropArea,\r\n      );\r\n      cropBoxData.height = Math.max(\r\n        cropBoxData.minHeight,\r\n        cropBoxData.height * autoCropArea,\r\n      );\r\n      cropBoxData.left =\r\n        canvasData.left + (canvasData.width - cropBoxData.width) / 2;\r\n      cropBoxData.top =\r\n        canvasData.top + (canvasData.height - cropBoxData.height) / 2;\r\n      cropBoxData.oldLeft = cropBoxData.left;\r\n      cropBoxData.oldTop = cropBoxData.top;\r\n      cropBoxData.naturalWidth = cropBoxData.width / canvasData.scale;\r\n      cropBoxData.naturalHeight = cropBoxData.height / canvasData.scale;\r\n    },\r\n    limitCropBox: function limitCropBox() {\r\n      var sizeLimited =\r\n        arguments.length > 0 && arguments[0] !== undefined\r\n          ? arguments[0]\r\n          : false;\r\n      var positionLimited =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : false;\r\n      var options = this.options,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var aspectRatio = options.aspectRatio,\r\n        viewMode = options.viewMode;\r\n      var canvasWidth = canvasData.width,\r\n        canvasHeight = canvasData.height,\r\n        canvasLeft = canvasData.left,\r\n        canvasTop = canvasData.top;\r\n\r\n      if (sizeLimited) {\r\n        var minCropBoxWidth = Math.max(options.minCropBoxWidth, 0) || 0;\r\n        var minCropBoxHeight = Math.max(options.minCropBoxHeight, 0) || 0;\r\n        var maxCropBoxWidth =\r\n          Math.max(options.maxCropBoxWidth, minCropBoxWidth) || Infinity;\r\n        var maxCropBoxHeight =\r\n          Math.max(options.maxCropBoxHeight, minCropBoxHeight) || Infinity;\r\n\r\n        if (viewMode > 0) {\r\n          minCropBoxWidth = Math.min(canvasWidth, minCropBoxWidth);\r\n          minCropBoxHeight = Math.min(canvasHeight, minCropBoxHeight);\r\n          maxCropBoxWidth = Math.min(canvasWidth, maxCropBoxWidth);\r\n          maxCropBoxHeight = Math.min(canvasHeight, maxCropBoxHeight);\r\n        }\r\n\r\n        if (aspectRatio > 0) {\r\n          var _getAdjustedSizes3 = getAdjustedSizes({\r\n            aspectRatio: aspectRatio,\r\n            width: minCropBoxWidth,\r\n            height: minCropBoxHeight,\r\n          });\r\n\r\n          minCropBoxWidth = _getAdjustedSizes3.width;\r\n          minCropBoxHeight = _getAdjustedSizes3.height;\r\n\r\n          var _getAdjustedSizes4 = getAdjustedSizes({\r\n            aspectRatio: aspectRatio,\r\n            width: maxCropBoxWidth,\r\n            height: maxCropBoxHeight,\r\n          });\r\n\r\n          maxCropBoxWidth = _getAdjustedSizes4.width;\r\n          maxCropBoxHeight = _getAdjustedSizes4.height;\r\n        }\r\n\r\n        cropBoxData.minWidth = minCropBoxWidth;\r\n        cropBoxData.minHeight = minCropBoxHeight;\r\n        cropBoxData.maxWidth = maxCropBoxWidth;\r\n        cropBoxData.maxHeight = maxCropBoxHeight;\r\n      }\r\n\r\n      if (positionLimited) {\r\n        var minLeft = -Infinity;\r\n        var minTop = -Infinity;\r\n        var maxLeft = Infinity;\r\n        var maxTop = Infinity;\r\n\r\n        if (viewMode > 0) {\r\n          minLeft = canvasLeft;\r\n          minTop = canvasTop;\r\n          maxLeft = canvasLeft + canvasWidth - cropBoxData.width;\r\n          maxTop = canvasTop + canvasHeight - cropBoxData.height;\r\n        }\r\n\r\n        cropBoxData.minLeft = minLeft;\r\n        cropBoxData.minTop = minTop;\r\n        cropBoxData.maxLeft = maxLeft;\r\n        cropBoxData.maxTop = maxTop;\r\n      }\r\n    },\r\n    renderCropBox: function renderCropBox() {\r\n      var options = this.options,\r\n        containerData = this.containerData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n\r\n      if (\r\n        cropBoxData.width > cropBoxData.maxWidth ||\r\n        cropBoxData.width < cropBoxData.minWidth\r\n      ) {\r\n        cropBoxData.left = cropBoxData.oldLeft;\r\n      }\r\n\r\n      if (\r\n        cropBoxData.height > cropBoxData.maxHeight ||\r\n        cropBoxData.height < cropBoxData.minHeight\r\n      ) {\r\n        cropBoxData.top = cropBoxData.oldTop;\r\n      }\r\n\r\n      cropBoxData.width = Math.min(\r\n        Math.max(cropBoxData.width, cropBoxData.minWidth),\r\n        cropBoxData.maxWidth,\r\n      );\r\n      cropBoxData.height = Math.min(\r\n        Math.max(cropBoxData.height, cropBoxData.minHeight),\r\n        cropBoxData.maxHeight,\r\n      );\r\n      this.limitCropBox(false, true);\r\n      cropBoxData.left = Math.min(\r\n        Math.max(cropBoxData.left, cropBoxData.minLeft),\r\n        cropBoxData.maxLeft,\r\n      );\r\n      cropBoxData.top = Math.min(\r\n        Math.max(cropBoxData.top, cropBoxData.minTop),\r\n        cropBoxData.maxTop,\r\n      );\r\n      cropBoxData.oldLeft = cropBoxData.left;\r\n      cropBoxData.oldTop = cropBoxData.top;\r\n      cropBoxData.naturalWidth = cropBoxData.width / canvasData.scale;\r\n      cropBoxData.naturalHeight = cropBoxData.height / canvasData.scale;\r\n\r\n      if (options.movable && options.cropBoxMovable) {\r\n        // Turn to move the canvas when the crop box is not less than the container\r\n        setData(\r\n          this.face,\r\n          DATA_ACTION,\r\n          cropBoxData.width >= containerData.width &&\r\n            cropBoxData.height >= containerData.height\r\n            ? ACTION_MOVE\r\n            : ACTION_ALL,\r\n        );\r\n      }\r\n\r\n      setStyle(\r\n        this.cropBox,\r\n        assign(\r\n          {\r\n            width: cropBoxData.width,\r\n            height: cropBoxData.height,\r\n          },\r\n          getTransforms({\r\n            translateX: cropBoxData.left,\r\n            translateY: cropBoxData.top,\r\n          }),\r\n        ),\r\n      );\r\n\r\n      if (!this.disabled) {\r\n        this.output();\r\n      }\r\n    },\r\n    output: function output() {\r\n      this.preview();\r\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\r\n    },\r\n  };\r\n\r\n  var preview = {\r\n    initPreview: function initPreview() {\r\n      var element = this.element,\r\n        crossOrigin = this.crossOrigin;\r\n      var preview = this.options.preview;\r\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\r\n      var alt = element.alt || \"The image to preview\";\r\n      var image = document.createElement(\"img\");\r\n\r\n      if (crossOrigin) {\r\n        image.crossOrigin = crossOrigin;\r\n      }\r\n\r\n      image.src = url;\r\n      image.alt = alt;\r\n      this.viewBox.appendChild(image);\r\n      this.viewBoxImage = image;\r\n\r\n      if (!preview) {\r\n        return;\r\n      }\r\n\r\n      var previews = preview;\r\n\r\n      if (typeof preview === \"string\") {\r\n        previews = element.ownerDocument.querySelectorAll(preview);\r\n      } else if (preview.querySelector) {\r\n        previews = [preview];\r\n      }\r\n\r\n      this.previews = previews;\r\n      forEach(previews, function (el) {\r\n        var img = document.createElement(\"img\"); // Save the original size for recover\r\n\r\n        setData(el, DATA_PREVIEW, {\r\n          width: el.offsetWidth,\r\n          height: el.offsetHeight,\r\n          html: el.innerHTML,\r\n        });\r\n\r\n        if (crossOrigin) {\r\n          img.crossOrigin = crossOrigin;\r\n        }\r\n\r\n        img.src = url;\r\n        img.alt = alt;\r\n        /**\r\n         * Override img element styles\r\n         * Add `display:block` to avoid margin top issue\r\n         * Add `height:auto` to override `height` attribute on IE8\r\n         * (Occur only when margin-top <= -height)\r\n         */\r\n\r\n        img.style.cssText =\r\n          \"display:block;\" +\r\n          \"width:100%;\" +\r\n          \"height:auto;\" +\r\n          \"min-width:0!important;\" +\r\n          \"min-height:0!important;\" +\r\n          \"max-width:none!important;\" +\r\n          \"max-height:none!important;\" +\r\n          'image-orientation:0deg!important;\"';\r\n        el.innerHTML = \"\";\r\n        el.appendChild(img);\r\n      });\r\n    },\r\n    resetPreview: function resetPreview() {\r\n      forEach(this.previews, function (element) {\r\n        var data = getData(element, DATA_PREVIEW);\r\n        setStyle(element, {\r\n          width: data.width,\r\n          height: data.height,\r\n        });\r\n        element.innerHTML = data.html;\r\n        removeData(element, DATA_PREVIEW);\r\n      });\r\n    },\r\n    preview: function preview() {\r\n      var imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var cropBoxWidth = cropBoxData.width,\r\n        cropBoxHeight = cropBoxData.height;\r\n      var width = imageData.width,\r\n        height = imageData.height;\r\n      var left = cropBoxData.left - canvasData.left - imageData.left;\r\n      var top = cropBoxData.top - canvasData.top - imageData.top;\r\n\r\n      if (!this.cropped || this.disabled) {\r\n        return;\r\n      }\r\n\r\n      setStyle(\r\n        this.viewBoxImage,\r\n        assign(\r\n          {\r\n            width: width,\r\n            height: height,\r\n          },\r\n          getTransforms(\r\n            assign(\r\n              {\r\n                translateX: -left,\r\n                translateY: -top,\r\n              },\r\n              imageData,\r\n            ),\r\n          ),\r\n        ),\r\n      );\r\n      forEach(this.previews, function (element) {\r\n        var data = getData(element, DATA_PREVIEW);\r\n        var originalWidth = data.width;\r\n        var originalHeight = data.height;\r\n        var newWidth = originalWidth;\r\n        var newHeight = originalHeight;\r\n        var ratio = 1;\r\n\r\n        if (cropBoxWidth) {\r\n          ratio = originalWidth / cropBoxWidth;\r\n          newHeight = cropBoxHeight * ratio;\r\n        }\r\n\r\n        if (cropBoxHeight && newHeight > originalHeight) {\r\n          ratio = originalHeight / cropBoxHeight;\r\n          newWidth = cropBoxWidth * ratio;\r\n          newHeight = originalHeight;\r\n        }\r\n\r\n        setStyle(element, {\r\n          width: newWidth,\r\n          height: newHeight,\r\n        });\r\n        setStyle(\r\n          element.getElementsByTagName(\"img\")[0],\r\n          assign(\r\n            {\r\n              width: width * ratio,\r\n              height: height * ratio,\r\n            },\r\n            getTransforms(\r\n              assign(\r\n                {\r\n                  translateX: -left * ratio,\r\n                  translateY: -top * ratio,\r\n                },\r\n                imageData,\r\n              ),\r\n            ),\r\n          ),\r\n        );\r\n      });\r\n    },\r\n  };\r\n\r\n  var events = {\r\n    bind: function bind() {\r\n      var element = this.element,\r\n        options = this.options,\r\n        cropper = this.cropper;\r\n\r\n      if (isFunction(options.cropstart)) {\r\n        addListener(element, EVENT_CROP_START, options.cropstart);\r\n      }\r\n\r\n      if (isFunction(options.cropmove)) {\r\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\r\n      }\r\n\r\n      if (isFunction(options.cropend)) {\r\n        addListener(element, EVENT_CROP_END, options.cropend);\r\n      }\r\n\r\n      if (isFunction(options.crop)) {\r\n        addListener(element, EVENT_CROP, options.crop);\r\n      }\r\n\r\n      if (isFunction(options.zoom)) {\r\n        addListener(element, EVENT_ZOOM, options.zoom);\r\n      }\r\n\r\n      addListener(\r\n        cropper,\r\n        EVENT_POINTER_DOWN,\r\n        (this.onCropStart = this.cropStart.bind(this)),\r\n      );\r\n\r\n      if (options.zoomable && options.zoomOnWheel) {\r\n        addListener(\r\n          cropper,\r\n          EVENT_WHEEL,\r\n          (this.onWheel = this.wheel.bind(this)),\r\n          {\r\n            passive: false,\r\n            capture: true,\r\n          },\r\n        );\r\n      }\r\n\r\n      if (options.toggleDragModeOnDblclick) {\r\n        addListener(\r\n          cropper,\r\n          EVENT_DBLCLICK,\r\n          (this.onDblclick = this.dblclick.bind(this)),\r\n        );\r\n      }\r\n\r\n      addListener(\r\n        element.ownerDocument,\r\n        EVENT_POINTER_MOVE,\r\n        (this.onCropMove = this.cropMove.bind(this)),\r\n      );\r\n      addListener(\r\n        element.ownerDocument,\r\n        EVENT_POINTER_UP,\r\n        (this.onCropEnd = this.cropEnd.bind(this)),\r\n      );\r\n\r\n      if (options.responsive) {\r\n        addListener(\r\n          window,\r\n          EVENT_RESIZE,\r\n          (this.onResize = this.resize.bind(this)),\r\n        );\r\n      }\r\n    },\r\n    unbind: function unbind() {\r\n      var element = this.element,\r\n        options = this.options,\r\n        cropper = this.cropper;\r\n\r\n      if (isFunction(options.cropstart)) {\r\n        removeListener(element, EVENT_CROP_START, options.cropstart);\r\n      }\r\n\r\n      if (isFunction(options.cropmove)) {\r\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\r\n      }\r\n\r\n      if (isFunction(options.cropend)) {\r\n        removeListener(element, EVENT_CROP_END, options.cropend);\r\n      }\r\n\r\n      if (isFunction(options.crop)) {\r\n        removeListener(element, EVENT_CROP, options.crop);\r\n      }\r\n\r\n      if (isFunction(options.zoom)) {\r\n        removeListener(element, EVENT_ZOOM, options.zoom);\r\n      }\r\n\r\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\r\n\r\n      if (options.zoomable && options.zoomOnWheel) {\r\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\r\n          passive: false,\r\n          capture: true,\r\n        });\r\n      }\r\n\r\n      if (options.toggleDragModeOnDblclick) {\r\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\r\n      }\r\n\r\n      removeListener(\r\n        element.ownerDocument,\r\n        EVENT_POINTER_MOVE,\r\n        this.onCropMove,\r\n      );\r\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\r\n\r\n      if (options.responsive) {\r\n        removeListener(window, EVENT_RESIZE, this.onResize);\r\n      }\r\n    },\r\n  };\r\n\r\n  var handlers = {\r\n    resize: function resize() {\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n\r\n      var options = this.options,\r\n        container = this.container,\r\n        containerData = this.containerData;\r\n      var ratioX = container.offsetWidth / containerData.width;\r\n      var ratioY = container.offsetHeight / containerData.height;\r\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY; // Resize when width changed or height changed\r\n\r\n      if (ratio !== 1) {\r\n        var canvasData;\r\n        var cropBoxData;\r\n\r\n        if (options.restore) {\r\n          canvasData = this.getCanvasData();\r\n          cropBoxData = this.getCropBoxData();\r\n        }\r\n\r\n        this.render();\r\n\r\n        if (options.restore) {\r\n          this.setCanvasData(\r\n            forEach(canvasData, function (n, i) {\r\n              canvasData[i] = n * ratio;\r\n            }),\r\n          );\r\n          this.setCropBoxData(\r\n            forEach(cropBoxData, function (n, i) {\r\n              cropBoxData[i] = n * ratio;\r\n            }),\r\n          );\r\n        }\r\n      }\r\n    },\r\n    dblclick: function dblclick() {\r\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\r\n        return;\r\n      }\r\n\r\n      this.setDragMode(\r\n        hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP,\r\n      );\r\n    },\r\n    wheel: function wheel(event) {\r\n      var _this = this;\r\n\r\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\r\n      var delta = 1;\r\n\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n\r\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\r\n\r\n      if (this.wheeling) {\r\n        return;\r\n      }\r\n\r\n      this.wheeling = true;\r\n      setTimeout(function () {\r\n        _this.wheeling = false;\r\n      }, 50);\r\n\r\n      if (event.deltaY) {\r\n        delta = event.deltaY > 0 ? 1 : -1;\r\n      } else if (event.wheelDelta) {\r\n        delta = -event.wheelDelta / 120;\r\n      } else if (event.detail) {\r\n        delta = event.detail > 0 ? 1 : -1;\r\n      }\r\n\r\n      this.zoom(-delta * ratio, event);\r\n    },\r\n    cropStart: function cropStart(event) {\r\n      var buttons = event.buttons,\r\n        button = event.button;\r\n\r\n      if (\r\n        this.disabled || // Handle mouse event and pointer event and ignore touch event\r\n        ((event.type === \"mousedown\" ||\r\n          (event.type === \"pointerdown\" && event.pointerType === \"mouse\")) && // No primary button (Usually the left button)\r\n          ((isNumber(buttons) && buttons !== 1) ||\r\n            (isNumber(button) && button !== 0) || // Open context menu\r\n            event.ctrlKey))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      var options = this.options,\r\n        pointers = this.pointers;\r\n      var action;\r\n\r\n      if (event.changedTouches) {\r\n        // Handle touch event\r\n        forEach(event.changedTouches, function (touch) {\r\n          pointers[touch.identifier] = getPointer(touch);\r\n        });\r\n      } else {\r\n        // Handle mouse event and pointer event\r\n        pointers[event.pointerId || 0] = getPointer(event);\r\n      }\r\n\r\n      if (\r\n        Object.keys(pointers).length > 1 &&\r\n        options.zoomable &&\r\n        options.zoomOnTouch\r\n      ) {\r\n        action = ACTION_ZOOM;\r\n      } else {\r\n        action = getData(event.target, DATA_ACTION);\r\n      }\r\n\r\n      if (!REGEXP_ACTIONS.test(action)) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        dispatchEvent(this.element, EVENT_CROP_START, {\r\n          originalEvent: event,\r\n          action: action,\r\n        }) === false\r\n      ) {\r\n        return;\r\n      } // This line is required for preventing page zooming in iOS browsers\r\n\r\n      event.preventDefault();\r\n      this.action = action;\r\n      this.cropping = false;\r\n\r\n      if (action === ACTION_CROP) {\r\n        this.cropping = true;\r\n        addClass(this.dragBox, CLASS_MODAL);\r\n      }\r\n    },\r\n    cropMove: function cropMove(event) {\r\n      var action = this.action;\r\n\r\n      if (this.disabled || !action) {\r\n        return;\r\n      }\r\n\r\n      var pointers = this.pointers;\r\n      event.preventDefault();\r\n\r\n      if (\r\n        dispatchEvent(this.element, EVENT_CROP_MOVE, {\r\n          originalEvent: event,\r\n          action: action,\r\n        }) === false\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (event.changedTouches) {\r\n        forEach(event.changedTouches, function (touch) {\r\n          // The first parameter should not be undefined (#432)\r\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\r\n        });\r\n      } else {\r\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\r\n      }\r\n\r\n      this.change(event);\r\n    },\r\n    cropEnd: function cropEnd(event) {\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n\r\n      var action = this.action,\r\n        pointers = this.pointers;\r\n\r\n      if (event.changedTouches) {\r\n        forEach(event.changedTouches, function (touch) {\r\n          delete pointers[touch.identifier];\r\n        });\r\n      } else {\r\n        delete pointers[event.pointerId || 0];\r\n      }\r\n\r\n      if (!action) {\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n\r\n      if (!Object.keys(pointers).length) {\r\n        this.action = \"\";\r\n      }\r\n\r\n      if (this.cropping) {\r\n        this.cropping = false;\r\n        toggleClass(\r\n          this.dragBox,\r\n          CLASS_MODAL,\r\n          this.cropped && this.options.modal,\r\n        );\r\n      }\r\n\r\n      dispatchEvent(this.element, EVENT_CROP_END, {\r\n        originalEvent: event,\r\n        action: action,\r\n      });\r\n    },\r\n  };\r\n\r\n  var change = {\r\n    change: function change(event) {\r\n      var options = this.options,\r\n        canvasData = this.canvasData,\r\n        containerData = this.containerData,\r\n        cropBoxData = this.cropBoxData,\r\n        pointers = this.pointers;\r\n      var action = this.action;\r\n      var aspectRatio = options.aspectRatio;\r\n      var left = cropBoxData.left,\r\n        top = cropBoxData.top,\r\n        width = cropBoxData.width,\r\n        height = cropBoxData.height;\r\n      var right = left + width;\r\n      var bottom = top + height;\r\n      var minLeft = 0;\r\n      var minTop = 0;\r\n      var maxWidth = containerData.width;\r\n      var maxHeight = containerData.height;\r\n      var renderable = true; // Locking aspect ratio in \"free mode\" by holding shift key\r\n\r\n      if (!aspectRatio && event.shiftKey) {\r\n        aspectRatio = width && height ? width / height : 1;\r\n      }\r\n\r\n      if (options.viewMode > 0) {\r\n        minLeft = cropBoxData.minLeft;\r\n        minTop = cropBoxData.minTop;\r\n        maxWidth =\r\n          minLeft +\r\n          Math.min(\r\n            containerData.width,\r\n            canvasData.width,\r\n            canvasData.left + canvasData.width,\r\n          );\r\n        maxHeight =\r\n          minTop +\r\n          Math.min(\r\n            containerData.height,\r\n            canvasData.height,\r\n            canvasData.top + canvasData.height,\r\n          );\r\n      }\r\n\r\n      var pointer = pointers[Object.keys(pointers)[0]];\r\n      var range = {\r\n        x: pointer.endX - pointer.startX,\r\n        y: pointer.endY - pointer.startY,\r\n      };\r\n\r\n      var check = function check(side) {\r\n        switch (side) {\r\n          case ACTION_EAST:\r\n            if (right + range.x > maxWidth) {\r\n              range.x = maxWidth - right;\r\n            }\r\n\r\n            break;\r\n\r\n          case ACTION_WEST:\r\n            if (left + range.x < minLeft) {\r\n              range.x = minLeft - left;\r\n            }\r\n\r\n            break;\r\n\r\n          case ACTION_NORTH:\r\n            if (top + range.y < minTop) {\r\n              range.y = minTop - top;\r\n            }\r\n\r\n            break;\r\n\r\n          case ACTION_SOUTH:\r\n            if (bottom + range.y > maxHeight) {\r\n              range.y = maxHeight - bottom;\r\n            }\r\n\r\n            break;\r\n        }\r\n      };\r\n\r\n      switch (action) {\r\n        // Move crop box\r\n        case ACTION_ALL:\r\n          left += range.x;\r\n          top += range.y;\r\n          break;\r\n        // Resize crop box\r\n\r\n        case ACTION_EAST:\r\n          if (\r\n            range.x >= 0 &&\r\n            (right >= maxWidth ||\r\n              (aspectRatio && (top <= minTop || bottom >= maxHeight)))\r\n          ) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_EAST);\r\n          width += range.x;\r\n\r\n          if (width < 0) {\r\n            action = ACTION_WEST;\r\n            width = -width;\r\n            left -= width;\r\n          }\r\n\r\n          if (aspectRatio) {\r\n            height = width / aspectRatio;\r\n            top += (cropBoxData.height - height) / 2;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_NORTH:\r\n          if (\r\n            range.y <= 0 &&\r\n            (top <= minTop ||\r\n              (aspectRatio && (left <= minLeft || right >= maxWidth)))\r\n          ) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_NORTH);\r\n          height -= range.y;\r\n          top += range.y;\r\n\r\n          if (height < 0) {\r\n            action = ACTION_SOUTH;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n\r\n          if (aspectRatio) {\r\n            width = height * aspectRatio;\r\n            left += (cropBoxData.width - width) / 2;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_WEST:\r\n          if (\r\n            range.x <= 0 &&\r\n            (left <= minLeft ||\r\n              (aspectRatio && (top <= minTop || bottom >= maxHeight)))\r\n          ) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_WEST);\r\n          width -= range.x;\r\n          left += range.x;\r\n\r\n          if (width < 0) {\r\n            action = ACTION_EAST;\r\n            width = -width;\r\n            left -= width;\r\n          }\r\n\r\n          if (aspectRatio) {\r\n            height = width / aspectRatio;\r\n            top += (cropBoxData.height - height) / 2;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_SOUTH:\r\n          if (\r\n            range.y >= 0 &&\r\n            (bottom >= maxHeight ||\r\n              (aspectRatio && (left <= minLeft || right >= maxWidth)))\r\n          ) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_SOUTH);\r\n          height += range.y;\r\n\r\n          if (height < 0) {\r\n            action = ACTION_NORTH;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n\r\n          if (aspectRatio) {\r\n            width = height * aspectRatio;\r\n            left += (cropBoxData.width - width) / 2;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_NORTH_EAST:\r\n          if (aspectRatio) {\r\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n\r\n            check(ACTION_NORTH);\r\n            height -= range.y;\r\n            top += range.y;\r\n            width = height * aspectRatio;\r\n          } else {\r\n            check(ACTION_NORTH);\r\n            check(ACTION_EAST);\r\n\r\n            if (range.x >= 0) {\r\n              if (right < maxWidth) {\r\n                width += range.x;\r\n              } else if (range.y <= 0 && top <= minTop) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width += range.x;\r\n            }\r\n\r\n            if (range.y <= 0) {\r\n              if (top > minTop) {\r\n                height -= range.y;\r\n                top += range.y;\r\n              }\r\n            } else {\r\n              height -= range.y;\r\n              top += range.y;\r\n            }\r\n          }\r\n\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_SOUTH_WEST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_NORTH_WEST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_SOUTH_EAST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_NORTH_WEST:\r\n          if (aspectRatio) {\r\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n\r\n            check(ACTION_NORTH);\r\n            height -= range.y;\r\n            top += range.y;\r\n            width = height * aspectRatio;\r\n            left += cropBoxData.width - width;\r\n          } else {\r\n            check(ACTION_NORTH);\r\n            check(ACTION_WEST);\r\n\r\n            if (range.x <= 0) {\r\n              if (left > minLeft) {\r\n                width -= range.x;\r\n                left += range.x;\r\n              } else if (range.y <= 0 && top <= minTop) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width -= range.x;\r\n              left += range.x;\r\n            }\r\n\r\n            if (range.y <= 0) {\r\n              if (top > minTop) {\r\n                height -= range.y;\r\n                top += range.y;\r\n              }\r\n            } else {\r\n              height -= range.y;\r\n              top += range.y;\r\n            }\r\n          }\r\n\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_SOUTH_EAST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_NORTH_EAST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_SOUTH_WEST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_SOUTH_WEST:\r\n          if (aspectRatio) {\r\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n\r\n            check(ACTION_WEST);\r\n            width -= range.x;\r\n            left += range.x;\r\n            height = width / aspectRatio;\r\n          } else {\r\n            check(ACTION_SOUTH);\r\n            check(ACTION_WEST);\r\n\r\n            if (range.x <= 0) {\r\n              if (left > minLeft) {\r\n                width -= range.x;\r\n                left += range.x;\r\n              } else if (range.y >= 0 && bottom >= maxHeight) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width -= range.x;\r\n              left += range.x;\r\n            }\r\n\r\n            if (range.y >= 0) {\r\n              if (bottom < maxHeight) {\r\n                height += range.y;\r\n              }\r\n            } else {\r\n              height += range.y;\r\n            }\r\n          }\r\n\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_NORTH_EAST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_SOUTH_EAST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_NORTH_WEST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_SOUTH_EAST:\r\n          if (aspectRatio) {\r\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\r\n              renderable = false;\r\n              break;\r\n            }\r\n\r\n            check(ACTION_EAST);\r\n            width += range.x;\r\n            height = width / aspectRatio;\r\n          } else {\r\n            check(ACTION_SOUTH);\r\n            check(ACTION_EAST);\r\n\r\n            if (range.x >= 0) {\r\n              if (right < maxWidth) {\r\n                width += range.x;\r\n              } else if (range.y >= 0 && bottom >= maxHeight) {\r\n                renderable = false;\r\n              }\r\n            } else {\r\n              width += range.x;\r\n            }\r\n\r\n            if (range.y >= 0) {\r\n              if (bottom < maxHeight) {\r\n                height += range.y;\r\n              }\r\n            } else {\r\n              height += range.y;\r\n            }\r\n          }\r\n\r\n          if (width < 0 && height < 0) {\r\n            action = ACTION_NORTH_WEST;\r\n            height = -height;\r\n            width = -width;\r\n            top -= height;\r\n            left -= width;\r\n          } else if (width < 0) {\r\n            action = ACTION_SOUTH_WEST;\r\n            width = -width;\r\n            left -= width;\r\n          } else if (height < 0) {\r\n            action = ACTION_NORTH_EAST;\r\n            height = -height;\r\n            top -= height;\r\n          }\r\n\r\n          break;\r\n        // Move canvas\r\n\r\n        case ACTION_MOVE:\r\n          this.move(range.x, range.y);\r\n          renderable = false;\r\n          break;\r\n        // Zoom canvas\r\n\r\n        case ACTION_ZOOM:\r\n          this.zoom(getMaxZoomRatio(pointers), event);\r\n          renderable = false;\r\n          break;\r\n        // Create crop box\r\n\r\n        case ACTION_CROP: {\r\n          action = \"\";\r\n\r\n          if (range.x && range.y) {\r\n            var degreesX =\r\n              (Math.atan(Math.abs(range.x) / Math.abs(range.y)) * 180) /\r\n              Math.PI;\r\n\r\n            if (degreesX < 5) {\r\n              if (aspectRatio) {\r\n                action = range.y > 0 ? ACTION_SOUTH : ACTION_NORTH;\r\n              }\r\n            } else if (degreesX > 85) {\r\n              if (aspectRatio) {\r\n                action = range.y > 0 ? ACTION_EAST : ACTION_WEST;\r\n              }\r\n            } else if (range.x > 0) {\r\n              action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\r\n            } else {\r\n              action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\r\n            }\r\n          } else if (aspectRatio) {\r\n            if (Math.abs(range.x) > 1) {\r\n              action = range.x > 0 ? ACTION_EAST : ACTION_WEST;\r\n            } else if (Math.abs(range.y) > 1) {\r\n              action = range.y > 0 ? ACTION_SOUTH : ACTION_NORTH;\r\n            }\r\n          }\r\n\r\n          if (!action) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          var offset = getOffset(this.cropper);\r\n          left = pointer.startX - offset.left;\r\n          top = pointer.startY - offset.top;\r\n          width = cropBoxData.minWidth;\r\n          height = cropBoxData.minHeight;\r\n\r\n          if (range.x < 0) {\r\n            left -= width;\r\n          }\r\n\r\n          if (range.y < 0) {\r\n            top -= height;\r\n          } // Show the crop box if is hidden\r\n\r\n          if (!this.cropped) {\r\n            removeClass(this.cropBox, CLASS_HIDDEN);\r\n            this.cropped = true;\r\n\r\n            if (options.viewMode > 0) {\r\n              this.limitCropBox(true, true);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (renderable) {\r\n        cropBoxData.width = width;\r\n        cropBoxData.height = height;\r\n        cropBoxData.left = left;\r\n        cropBoxData.top = top;\r\n        this.action = action;\r\n        this.renderCropBox();\r\n      } // Override\r\n\r\n      forEach(pointers, function (p) {\r\n        p.startX = p.endX;\r\n        p.startY = p.endY;\r\n      });\r\n    },\r\n  };\r\n\r\n  var methods = {\r\n    // Show the crop box manually\r\n    crop: function crop() {\r\n      if (this.ready && !this.cropped && !this.disabled) {\r\n        this.cropped = true;\r\n        this.limitCropBox(true, true);\r\n\r\n        if (this.options.modal) {\r\n          addClass(this.dragBox, CLASS_MODAL);\r\n        }\r\n\r\n        removeClass(this.cropBox, CLASS_HIDDEN);\r\n        this.setCropBoxData(this.initialCropBoxData);\r\n      }\r\n\r\n      return this;\r\n    },\r\n    // Reset the image and crop box to their initial states\r\n    reset: function reset() {\r\n      if (this.ready && !this.disabled) {\r\n        this.imageData = assign({}, this.initialImageData);\r\n        this.canvasData = assign({}, this.initialCanvasData);\r\n        this.cropBoxData = assign({}, this.initialCropBoxData);\r\n        this.renderCanvas();\r\n\r\n        if (this.cropped) {\r\n          this.renderCropBox();\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n    // Clear the crop box\r\n    clear: function clear() {\r\n      if (this.cropped && !this.disabled) {\r\n        assign(this.cropBoxData, {\r\n          left: 0,\r\n          top: 0,\r\n          width: 0,\r\n          height: 0,\r\n        });\r\n        this.cropped = false;\r\n        this.renderCropBox();\r\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\r\n\r\n        this.renderCanvas();\r\n        removeClass(this.dragBox, CLASS_MODAL);\r\n        addClass(this.cropBox, CLASS_HIDDEN);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Replace the image's src and rebuild the cropper\r\n     * @param {string} url - The new URL.\r\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\r\n     * @returns {Cropper} this\r\n     */\r\n    replace: function replace(url) {\r\n      var hasSameSize =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : false;\r\n\r\n      if (!this.disabled && url) {\r\n        if (this.isImg) {\r\n          this.element.src = url;\r\n        }\r\n\r\n        if (hasSameSize) {\r\n          this.url = url;\r\n          this.image.src = url;\r\n\r\n          if (this.ready) {\r\n            this.viewBoxImage.src = url;\r\n            forEach(this.previews, function (element) {\r\n              element.getElementsByTagName(\"img\")[0].src = url;\r\n            });\r\n          }\r\n        } else {\r\n          if (this.isImg) {\r\n            this.replaced = true;\r\n          }\r\n\r\n          this.options.data = null;\r\n          this.uncreate();\r\n          this.load(url);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n    // Enable (unfreeze) the cropper\r\n    enable: function enable() {\r\n      if (this.ready && this.disabled) {\r\n        this.disabled = false;\r\n        removeClass(this.cropper, CLASS_DISABLED);\r\n      }\r\n\r\n      return this;\r\n    },\r\n    // Disable (freeze) the cropper\r\n    disable: function disable() {\r\n      if (this.ready && !this.disabled) {\r\n        this.disabled = true;\r\n        addClass(this.cropper, CLASS_DISABLED);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Destroy the cropper and remove the instance from the image\r\n     * @returns {Cropper} this\r\n     */\r\n    destroy: function destroy() {\r\n      var element = this.element;\r\n\r\n      if (!element[NAMESPACE]) {\r\n        return this;\r\n      }\r\n\r\n      element[NAMESPACE] = undefined;\r\n\r\n      if (this.isImg && this.replaced) {\r\n        element.src = this.originalUrl;\r\n      }\r\n\r\n      this.uncreate();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Move the canvas with relative offsets\r\n     * @param {number} offsetX - The relative offset distance on the x-axis.\r\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    move: function move(offsetX) {\r\n      var offsetY =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : offsetX;\r\n      var _this$canvasData = this.canvasData,\r\n        left = _this$canvasData.left,\r\n        top = _this$canvasData.top;\r\n      return this.moveTo(\r\n        isUndefined(offsetX) ? offsetX : left + Number(offsetX),\r\n        isUndefined(offsetY) ? offsetY : top + Number(offsetY),\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Move the canvas to an absolute point\r\n     * @param {number} x - The x-axis coordinate.\r\n     * @param {number} [y=x] - The y-axis coordinate.\r\n     * @returns {Cropper} this\r\n     */\r\n    moveTo: function moveTo(x) {\r\n      var y =\r\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\r\n      var canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var changed = false;\r\n      x = Number(x);\r\n      y = Number(y);\r\n\r\n      if (this.ready && !this.disabled && this.options.movable) {\r\n        if (isNumber(x)) {\r\n          cropBoxData.left -= canvasData.left - x;\r\n          canvasData.left = x;\r\n          changed = true;\r\n        }\r\n\r\n        if (isNumber(y)) {\r\n          cropBoxData.top -= canvasData.top - y;\r\n          canvasData.top = y;\r\n          changed = true;\r\n        }\r\n\r\n        if (changed) {\r\n          this.renderCanvas(true);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Zoom the canvas with a relative scale\r\n     * @param {number} scale - The target scale.\r\n     * @param {Event} _originalEvent - The original event if any.\r\n     * @returns {Cropper} this\r\n     */\r\n    zoom: function zoom(scale) {\r\n      var _originalEvent =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : null;\r\n\r\n      var canvasData = this.canvasData;\r\n      scale = Number(scale);\r\n\r\n      if (scale < 0) {\r\n        scale = 1 / (1 - scale);\r\n      } else {\r\n        scale = 1 + scale;\r\n      }\r\n\r\n      return this.zoomTo(\r\n        (canvasData.width * scale) / canvasData.naturalWidth,\r\n        null,\r\n        _originalEvent,\r\n      );\r\n    },\r\n\r\n    /**\r\n     * Zoom the canvas to an absolute scale\r\n     * @param {number} scale - The target scale.\r\n     * @param {Object} [center=null] - The center point coordinate.\r\n     * @param {Event} _originalEvent - The original event object if any.\r\n     * @returns {Cropper} this\r\n     */\r\n    zoomTo: function zoomTo(scale) {\r\n      var center =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : null;\r\n\r\n      var _originalEvent =\r\n        arguments.length > 2 && arguments[2] !== undefined\r\n          ? arguments[2]\r\n          : null;\r\n\r\n      var options = this.options,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var canvasWidth = canvasData.width,\r\n        canvasHeight = canvasData.height;\r\n      var cropBoxWidth = cropBoxData.width,\r\n        cropBoxHeight = cropBoxData.height;\r\n      scale = Number(scale);\r\n\r\n      if (scale >= 0 && this.ready && !this.disabled && options.zoomable) {\r\n        var newCanvasWidth = canvasData.naturalWidth * scale;\r\n        var newCanvasHeight = canvasData.naturalHeight * scale;\r\n\r\n        if (\r\n          options.viewMode > 1 &&\r\n          (newCanvasWidth < canvasData.minWidth ||\r\n            newCanvasWidth > canvasData.maxWidth ||\r\n            newCanvasHeight < canvasData.minHeight ||\r\n            newCanvasHeight < canvasData.minHeight)\r\n        ) {\r\n          return this;\r\n        }\r\n\r\n        var offsetCanvasWidth = newCanvasWidth - canvasWidth;\r\n        var offsetCanvasHeight = newCanvasHeight - canvasHeight;\r\n        var newCropBoxWidth = cropBoxData.naturalWidth * scale;\r\n        var newCropBoxHeight = cropBoxData.naturalHeight * scale;\r\n        var offsetCropBoxWidth = newCropBoxWidth - cropBoxWidth;\r\n        var offsetCropBoxHeight = newCropBoxHeight - cropBoxHeight;\r\n\r\n        if (\r\n          dispatchEvent(this.element, EVENT_ZOOM, {\r\n            scale: scale,\r\n            oldScale: canvasData.scale,\r\n            originalEvent: _originalEvent,\r\n          }) === false\r\n        ) {\r\n          return this;\r\n        }\r\n\r\n        if (_originalEvent) {\r\n          var pointers = this.pointers;\r\n          var offset = getOffset(this.cropper);\r\n          center =\r\n            pointers && Object.keys(pointers).length\r\n              ? getPointersCenter(pointers)\r\n              : {\r\n                  pageX: _originalEvent.pageX,\r\n                  pageY: _originalEvent.pageY,\r\n                }; // Zoom from the triggering point of the event\r\n\r\n          canvasData.left -=\r\n            offsetCanvasWidth *\r\n            ((center.pageX - offset.left - canvasData.left) / canvasWidth);\r\n          canvasData.top -=\r\n            offsetCanvasHeight *\r\n            ((center.pageY - offset.top - canvasData.top) / canvasHeight);\r\n          cropBoxData.left -=\r\n            offsetCropBoxWidth *\r\n            ((center.pageX - offset.left - cropBoxData.left) / cropBoxWidth);\r\n          cropBoxData.top -=\r\n            offsetCropBoxHeight *\r\n            ((center.pageY - offset.top - cropBoxData.top) / cropBoxHeight);\r\n        } else if (\r\n          isPlainObject(center) &&\r\n          isNumber(center.x) &&\r\n          isNumber(center.y)\r\n        ) {\r\n          // Zoom from the given pointer\r\n          canvasData.left -=\r\n            offsetCanvasWidth * ((center.x - canvasData.left) / canvasWidth);\r\n          canvasData.top -=\r\n            offsetCanvasHeight * ((center.y - canvasData.top) / canvasHeight);\r\n          cropBoxData.left -=\r\n            offsetCropBoxWidth * ((center.x - cropBoxData.left) / cropBoxWidth);\r\n          cropBoxData.top -=\r\n            offsetCropBoxHeight *\r\n            ((center.y - cropBoxData.top) / cropBoxHeight);\r\n        } else {\r\n          // Zoom from the center of the canvas\r\n          canvasData.left -= offsetCanvasWidth / 2;\r\n          canvasData.top -= offsetCanvasHeight / 2;\r\n          cropBoxData.left -= offsetCropBoxWidth / 2;\r\n          cropBoxData.top -= offsetCropBoxHeight / 2;\r\n        }\r\n\r\n        canvasData.width = newCanvasWidth;\r\n        canvasData.height = newCanvasHeight;\r\n        cropBoxData.width = newCropBoxWidth;\r\n        cropBoxData.height = newCropBoxHeight;\r\n        this.renderCanvas(true);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Rotate the canvas with a relative degree\r\n     * @param {number} degree - The rotate degree.\r\n     * @returns {Cropper} this\r\n     */\r\n    rotate: function rotate(degree) {\r\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\r\n    },\r\n\r\n    /**\r\n     * Rotate the canvas to an absolute degree\r\n     * @param {number} degree - The rotate degree.\r\n     * @returns {Cropper} this\r\n     */\r\n    rotateTo: function rotateTo(degree) {\r\n      degree = Number(degree);\r\n\r\n      if (\r\n        isNumber(degree) &&\r\n        this.ready &&\r\n        !this.disabled &&\r\n        this.options.rotatable\r\n      ) {\r\n        this.imageData.rotate = degree % 360;\r\n        this.renderCanvas(true, true);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Scale the image on the x-axis.\r\n     * @param {number} scaleX - The scale ratio on the x-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    scaleX: function scaleX(_scaleX) {\r\n      var scaleY = this.imageData.scaleY;\r\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\r\n    },\r\n\r\n    /**\r\n     * Scale the image on the y-axis.\r\n     * @param {number} scaleY - The scale ratio on the y-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    scaleY: function scaleY(_scaleY) {\r\n      var scaleX = this.imageData.scaleX;\r\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\r\n    },\r\n\r\n    /**\r\n     * Scale the image\r\n     * @param {number} scaleX - The scale ratio on the x-axis.\r\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\r\n     * @returns {Cropper} this\r\n     */\r\n    scale: function scale(scaleX) {\r\n      var scaleY =\r\n        arguments.length > 1 && arguments[1] !== undefined\r\n          ? arguments[1]\r\n          : scaleX;\r\n      var imageData = this.imageData;\r\n      var transformed = false;\r\n      scaleX = Number(scaleX);\r\n      scaleY = Number(scaleY);\r\n\r\n      if (this.ready && !this.disabled && this.options.scalable) {\r\n        if (isNumber(scaleX)) {\r\n          imageData.scaleX = scaleX;\r\n          transformed = true;\r\n        }\r\n\r\n        if (isNumber(scaleY)) {\r\n          imageData.scaleY = scaleY;\r\n          transformed = true;\r\n        }\r\n\r\n        if (transformed) {\r\n          this.renderCanvas(true, true);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Get the cropped area position and size data (base on the original image)\r\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\r\n     * @returns {Object} The result cropped data.\r\n     */\r\n    getData: function getData() {\r\n      var rounded =\r\n        arguments.length > 0 && arguments[0] !== undefined\r\n          ? arguments[0]\r\n          : false;\r\n      var options = this.options,\r\n        imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n      var data;\r\n\r\n      if (this.ready && this.cropped) {\r\n        data = {\r\n          x: cropBoxData.left - canvasData.left,\r\n          y: cropBoxData.top - canvasData.top,\r\n          width: cropBoxData.width,\r\n          height: cropBoxData.height,\r\n        };\r\n        var ratio = imageData.width / imageData.naturalWidth;\r\n        forEach(data, function (n, i) {\r\n          data[i] = n / ratio;\r\n        });\r\n\r\n        if (rounded) {\r\n          // In case rounding off leads to extra 1px in right or bottom border\r\n          // we should round the top-left corner and the dimension (#343).\r\n          var bottom = Math.round(data.y + data.height);\r\n          var right = Math.round(data.x + data.width);\r\n          data.x = Math.round(data.x);\r\n          data.y = Math.round(data.y);\r\n          data.width = right - data.x;\r\n          data.height = bottom - data.y;\r\n        }\r\n      } else {\r\n        data = {\r\n          x: 0,\r\n          y: 0,\r\n          width: 0,\r\n          height: 0,\r\n        };\r\n      }\r\n\r\n      if (options.rotatable) {\r\n        data.rotate = imageData.rotate || 0;\r\n      }\r\n\r\n      if (options.scalable) {\r\n        data.scaleX = imageData.scaleX || 1;\r\n        data.scaleY = imageData.scaleY || 1;\r\n      }\r\n\r\n      return data;\r\n    },\r\n\r\n    /**\r\n     * Set the cropped area position and size with new data\r\n     * @param {Object} data - The new data.\r\n     * @returns {Cropper} this\r\n     */\r\n    setData: function setData(data) {\r\n      var options = this.options,\r\n        imageData = this.imageData,\r\n        canvasData = this.canvasData;\r\n      var cropBoxData = {};\r\n\r\n      if (this.ready && !this.disabled && isPlainObject(data)) {\r\n        var transformed = false;\r\n\r\n        if (options.rotatable) {\r\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\r\n            imageData.rotate = data.rotate;\r\n            transformed = true;\r\n          }\r\n        }\r\n\r\n        if (options.scalable) {\r\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\r\n            imageData.scaleX = data.scaleX;\r\n            transformed = true;\r\n          }\r\n\r\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\r\n            imageData.scaleY = data.scaleY;\r\n            transformed = true;\r\n          }\r\n        }\r\n\r\n        if (transformed) {\r\n          this.renderCanvas(true, true);\r\n        }\r\n\r\n        var ratio = imageData.width / imageData.naturalWidth;\r\n\r\n        if (isNumber(data.x)) {\r\n          cropBoxData.left = data.x * ratio + canvasData.left;\r\n        }\r\n\r\n        if (isNumber(data.y)) {\r\n          cropBoxData.top = data.y * ratio + canvasData.top;\r\n        }\r\n\r\n        if (isNumber(data.width)) {\r\n          cropBoxData.width = data.width * ratio;\r\n        }\r\n\r\n        if (isNumber(data.height)) {\r\n          cropBoxData.height = data.height * ratio;\r\n        }\r\n\r\n        this.setCropBoxData(cropBoxData);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Get the container size data.\r\n     * @returns {Object} The result container data.\r\n     */\r\n    getContainerData: function getContainerData() {\r\n      return this.ready ? assign({}, this.containerData) : {};\r\n    },\r\n\r\n    /**\r\n     * Get the image position and size data.\r\n     * @returns {Object} The result image data.\r\n     */\r\n    getImageData: function getImageData() {\r\n      return this.sized ? assign({}, this.imageData) : {};\r\n    },\r\n\r\n    /**\r\n     * Get the canvas position and size data.\r\n     * @returns {Object} The result canvas data.\r\n     */\r\n    getCanvasData: function getCanvasData() {\r\n      var canvasData = this.canvasData;\r\n      var data = {};\r\n\r\n      if (this.ready) {\r\n        forEach(EXPORTED_DATA_KEY, function (n) {\r\n          data[n] = canvasData[n];\r\n        });\r\n      }\r\n\r\n      return data;\r\n    },\r\n\r\n    /**\r\n     * Set the canvas position and size with new data.\r\n     * @param {Object} data - The new canvas data.\r\n     * @returns {Cropper} this\r\n     */\r\n    setCanvasData: function setCanvasData(data) {\r\n      var canvasData = this.canvasData;\r\n      var aspectRatio = canvasData.aspectRatio;\r\n\r\n      if (this.ready && !this.disabled && isPlainObject(data)) {\r\n        if (isNumber(data.left)) {\r\n          canvasData.left = data.left;\r\n        }\r\n\r\n        if (isNumber(data.top)) {\r\n          canvasData.top = data.top;\r\n        }\r\n\r\n        if (isNumber(data.width)) {\r\n          canvasData.width = data.width;\r\n          canvasData.height = data.width / aspectRatio;\r\n        } else if (isNumber(data.height)) {\r\n          canvasData.height = data.height;\r\n          canvasData.width = data.height * aspectRatio;\r\n        }\r\n\r\n        this.renderCanvas(true);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Get the crop box position and size data.\r\n     * @returns {Object} The result crop box data.\r\n     */\r\n    getCropBoxData: function getCropBoxData() {\r\n      var cropBoxData = this.cropBoxData;\r\n      var data = {};\r\n\r\n      if (this.ready && this.cropped) {\r\n        forEach(EXPORTED_DATA_KEY, function (n) {\r\n          data[n] = cropBoxData[n];\r\n        });\r\n      }\r\n\r\n      return data;\r\n    },\r\n\r\n    /**\r\n     * Set the crop box position and size with new data.\r\n     * @param {Object} data - The new crop box data.\r\n     * @returns {Cropper} this\r\n     */\r\n    setCropBoxData: function setCropBoxData(data) {\r\n      var cropBoxData = this.cropBoxData;\r\n      var aspectRatio = this.options.aspectRatio;\r\n      var widthChanged;\r\n      var heightChanged;\r\n\r\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\r\n        if (isNumber(data.left)) {\r\n          cropBoxData.left = data.left;\r\n        }\r\n\r\n        if (isNumber(data.top)) {\r\n          cropBoxData.top = data.top;\r\n        }\r\n\r\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\r\n          widthChanged = true;\r\n          cropBoxData.width = data.width;\r\n        }\r\n\r\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\r\n          heightChanged = true;\r\n          cropBoxData.height = data.height;\r\n        }\r\n\r\n        if (aspectRatio) {\r\n          if (widthChanged) {\r\n            cropBoxData.height = cropBoxData.width / aspectRatio;\r\n          } else if (heightChanged) {\r\n            cropBoxData.width = cropBoxData.height * aspectRatio;\r\n          }\r\n        }\r\n\r\n        this.renderCropBox();\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Get a canvas drawn the cropped image.\r\n     * @param {Object} [options={}] - The config options.\r\n     * @returns {HTMLCanvasElement} - The result canvas.\r\n     */\r\n    getCroppedCanvas: function getCroppedCanvas() {\r\n      var options =\r\n        arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      if (!this.ready || !window.HTMLCanvasElement) {\r\n        return null;\r\n      }\r\n\r\n      var canvasData = this.canvasData;\r\n      var source = getSourceCanvas(\r\n        this.image,\r\n        this.imageData,\r\n        canvasData,\r\n        options,\r\n      ); // Returns the source canvas if it is not cropped.\r\n\r\n      if (!this.cropped) {\r\n        return source;\r\n      }\r\n\r\n      var _this$getData = this.getData(),\r\n        initialX = _this$getData.x,\r\n        initialY = _this$getData.y,\r\n        initialWidth = _this$getData.width,\r\n        initialHeight = _this$getData.height;\r\n\r\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\r\n\r\n      if (ratio !== 1) {\r\n        initialX *= ratio;\r\n        initialY *= ratio;\r\n        initialWidth *= ratio;\r\n        initialHeight *= ratio;\r\n      }\r\n\r\n      var aspectRatio = initialWidth / initialHeight;\r\n      var maxSizes = getAdjustedSizes({\r\n        aspectRatio: aspectRatio,\r\n        width: options.maxWidth || Infinity,\r\n        height: options.maxHeight || Infinity,\r\n      });\r\n      var minSizes = getAdjustedSizes(\r\n        {\r\n          aspectRatio: aspectRatio,\r\n          width: options.minWidth || 0,\r\n          height: options.minHeight || 0,\r\n        },\r\n        \"cover\",\r\n      );\r\n\r\n      var _getAdjustedSizes = getAdjustedSizes({\r\n          aspectRatio: aspectRatio,\r\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\r\n          height:\r\n            options.height || (ratio !== 1 ? source.height : initialHeight),\r\n        }),\r\n        width = _getAdjustedSizes.width,\r\n        height = _getAdjustedSizes.height;\r\n\r\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\r\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\r\n      var canvas = document.createElement(\"canvas\");\r\n      var context = canvas.getContext(\"2d\");\r\n      canvas.width = normalizeDecimalNumber(width);\r\n      canvas.height = normalizeDecimalNumber(height);\r\n      context.fillStyle = options.fillColor || \"transparent\";\r\n      context.fillRect(0, 0, width, height);\r\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\r\n        imageSmoothingEnabled =\r\n          _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\r\n        imageSmoothingQuality = options.imageSmoothingQuality;\r\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\r\n\r\n      if (imageSmoothingQuality) {\r\n        context.imageSmoothingQuality = imageSmoothingQuality;\r\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\r\n\r\n      var sourceWidth = source.width;\r\n      var sourceHeight = source.height; // Source canvas parameters\r\n\r\n      var srcX = initialX;\r\n      var srcY = initialY;\r\n      var srcWidth;\r\n      var srcHeight; // Destination canvas parameters\r\n\r\n      var dstX;\r\n      var dstY;\r\n      var dstWidth;\r\n      var dstHeight;\r\n\r\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\r\n        srcX = 0;\r\n        srcWidth = 0;\r\n        dstX = 0;\r\n        dstWidth = 0;\r\n      } else if (srcX <= 0) {\r\n        dstX = -srcX;\r\n        srcX = 0;\r\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\r\n        dstWidth = srcWidth;\r\n      } else if (srcX <= sourceWidth) {\r\n        dstX = 0;\r\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\r\n        dstWidth = srcWidth;\r\n      }\r\n\r\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\r\n        srcY = 0;\r\n        srcHeight = 0;\r\n        dstY = 0;\r\n        dstHeight = 0;\r\n      } else if (srcY <= 0) {\r\n        dstY = -srcY;\r\n        srcY = 0;\r\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\r\n        dstHeight = srcHeight;\r\n      } else if (srcY <= sourceHeight) {\r\n        dstY = 0;\r\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\r\n        dstHeight = srcHeight;\r\n      }\r\n\r\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\r\n\r\n      if (dstWidth > 0 && dstHeight > 0) {\r\n        var scale = width / initialWidth;\r\n        params.push(\r\n          dstX * scale,\r\n          dstY * scale,\r\n          dstWidth * scale,\r\n          dstHeight * scale,\r\n        );\r\n      } // All the numerical parameters should be integer for `drawImage`\r\n      // https://github.com/fengyuanchen/cropper/issues/476\r\n\r\n      context.drawImage.apply(\r\n        context,\r\n        [source].concat(\r\n          _toConsumableArray(\r\n            params.map(function (param) {\r\n              return Math.floor(normalizeDecimalNumber(param));\r\n            }),\r\n          ),\r\n        ),\r\n      );\r\n      return canvas;\r\n    },\r\n\r\n    /**\r\n     * Change the aspect ratio of the crop box.\r\n     * @param {number} aspectRatio - The new aspect ratio.\r\n     * @returns {Cropper} this\r\n     */\r\n    setAspectRatio: function setAspectRatio(aspectRatio) {\r\n      var options = this.options;\r\n\r\n      if (!this.disabled && !isUndefined(aspectRatio)) {\r\n        // 0 -> NaN\r\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\r\n\r\n        if (this.ready) {\r\n          this.initCropBox();\r\n\r\n          if (this.cropped) {\r\n            this.renderCropBox();\r\n          }\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Change the drag mode.\r\n     * @param {string} mode - The new drag mode.\r\n     * @returns {Cropper} this\r\n     */\r\n    setDragMode: function setDragMode(mode) {\r\n      var options = this.options,\r\n        dragBox = this.dragBox,\r\n        face = this.face;\r\n\r\n      if (this.ready && !this.disabled) {\r\n        var croppable = mode === DRAG_MODE_CROP;\r\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\r\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\r\n        options.dragMode = mode;\r\n        setData(dragBox, DATA_ACTION, mode);\r\n        toggleClass(dragBox, CLASS_CROP, croppable);\r\n        toggleClass(dragBox, CLASS_MOVE, movable);\r\n\r\n        if (!options.cropBoxMovable) {\r\n          // Sync drag mode to crop box when it is not movable\r\n          setData(face, DATA_ACTION, mode);\r\n          toggleClass(face, CLASS_CROP, croppable);\r\n          toggleClass(face, CLASS_MOVE, movable);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n  };\r\n\r\n  var AnotherCropper = WINDOW.Cropper;\r\n\r\n  var Cropper = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Create a new Cropper.\r\n     * @param {Element} element - The target element for cropping.\r\n     * @param {Object} [options={}] - The configuration options.\r\n     */\r\n    function Cropper(element) {\r\n      var options =\r\n        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n      _classCallCheck(this, Cropper);\r\n\r\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\r\n        throw new Error(\r\n          \"The first argument is required and must be an <img> or <canvas> element.\",\r\n        );\r\n      }\r\n\r\n      this.element = element;\r\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\r\n      this.cropped = false;\r\n      this.disabled = false;\r\n      this.pointers = {};\r\n      this.ready = false;\r\n      this.reloading = false;\r\n      this.replaced = false;\r\n      this.sized = false;\r\n      this.sizing = false;\r\n      this.init();\r\n    }\r\n\r\n    _createClass(\r\n      Cropper,\r\n      [\r\n        {\r\n          key: \"init\",\r\n          value: function init() {\r\n            var element = this.element;\r\n            var tagName = element.tagName.toLowerCase();\r\n            var url;\r\n\r\n            if (element[NAMESPACE]) {\r\n              return;\r\n            }\r\n\r\n            element[NAMESPACE] = this;\r\n\r\n            if (tagName === \"img\") {\r\n              this.isImg = true; // e.g.: \"img/picture.jpg\"\r\n\r\n              url = element.getAttribute(\"src\") || \"\";\r\n              this.originalUrl = url; // Stop when it's a blank image\r\n\r\n              if (!url) {\r\n                return;\r\n              } // e.g.: \"https://example.com/img/picture.jpg\"\r\n\r\n              url = element.src;\r\n            } else if (tagName === \"canvas\" && window.HTMLCanvasElement) {\r\n              url = element.toDataURL();\r\n            }\r\n\r\n            this.load(url);\r\n          },\r\n        },\r\n        {\r\n          key: \"load\",\r\n          value: function load(url) {\r\n            var _this = this;\r\n\r\n            if (!url) {\r\n              return;\r\n            }\r\n\r\n            this.url = url;\r\n            this.imageData = {};\r\n            var element = this.element,\r\n              options = this.options;\r\n\r\n            if (!options.rotatable && !options.scalable) {\r\n              options.checkOrientation = false;\r\n            } // Only IE10+ supports Typed Arrays\r\n\r\n            if (!options.checkOrientation || !window.ArrayBuffer) {\r\n              this.clone();\r\n              return;\r\n            } // Detect the mime type of the image directly if it is a Data URL\r\n\r\n            if (REGEXP_DATA_URL.test(url)) {\r\n              // Read ArrayBuffer from Data URL of JPEG images directly for better performance\r\n              if (REGEXP_DATA_URL_JPEG.test(url)) {\r\n                this.read(dataURLToArrayBuffer(url));\r\n              } else {\r\n                // Only a JPEG image may contains Exif Orientation information,\r\n                // the rest types of Data URLs are not necessary to check orientation at all.\r\n                this.clone();\r\n              }\r\n\r\n              return;\r\n            } // 1. Detect the mime type of the image by a XMLHttpRequest.\r\n            // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\r\n\r\n            var xhr = new XMLHttpRequest();\r\n            var clone = this.clone.bind(this);\r\n            this.reloading = true;\r\n            this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\r\n            // http, https, data, chrome, chrome-extension.\r\n            // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\r\n            // in some browsers as IE11 and Safari.\r\n\r\n            xhr.onabort = clone;\r\n            xhr.onerror = clone;\r\n            xhr.ontimeout = clone;\r\n\r\n            xhr.onprogress = function () {\r\n              // Abort the request directly if it not a JPEG image for better performance\r\n              if (xhr.getResponseHeader(\"content-type\") !== MIME_TYPE_JPEG) {\r\n                xhr.abort();\r\n              }\r\n            };\r\n\r\n            xhr.onload = function () {\r\n              _this.read(xhr.response);\r\n            };\r\n\r\n            xhr.onloadend = function () {\r\n              _this.reloading = false;\r\n              _this.xhr = null;\r\n            }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\r\n\r\n            if (\r\n              options.checkCrossOrigin &&\r\n              isCrossOriginURL(url) &&\r\n              element.crossOrigin\r\n            ) {\r\n              url = addTimestamp(url);\r\n            } // The third parameter is required for avoiding side-effect (#682)\r\n\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.responseType = \"arraybuffer\";\r\n            xhr.withCredentials = element.crossOrigin === \"use-credentials\";\r\n            xhr.send();\r\n          },\r\n        },\r\n        {\r\n          key: \"read\",\r\n          value: function read(arrayBuffer) {\r\n            var options = this.options,\r\n              imageData = this.imageData; // Reset the orientation value to its default value 1\r\n            // as some iOS browsers will render image with its orientation\r\n\r\n            var orientation = resetAndGetOrientation(arrayBuffer);\r\n            var rotate = 0;\r\n            var scaleX = 1;\r\n            var scaleY = 1;\r\n\r\n            if (orientation > 1) {\r\n              // Generate a new URL which has the default orientation value\r\n              this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\r\n\r\n              var _parseOrientation = parseOrientation(orientation);\r\n\r\n              rotate = _parseOrientation.rotate;\r\n              scaleX = _parseOrientation.scaleX;\r\n              scaleY = _parseOrientation.scaleY;\r\n            }\r\n\r\n            if (options.rotatable) {\r\n              imageData.rotate = rotate;\r\n            }\r\n\r\n            if (options.scalable) {\r\n              imageData.scaleX = scaleX;\r\n              imageData.scaleY = scaleY;\r\n            }\r\n\r\n            this.clone();\r\n          },\r\n        },\r\n        {\r\n          key: \"clone\",\r\n          value: function clone() {\r\n            var element = this.element,\r\n              url = this.url;\r\n            var crossOrigin = element.crossOrigin;\r\n            var crossOriginUrl = url;\r\n\r\n            if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\r\n              if (!crossOrigin) {\r\n                crossOrigin = \"anonymous\";\r\n              } // Bust cache when there is not a \"crossOrigin\" property (#519)\r\n\r\n              crossOriginUrl = addTimestamp(url);\r\n            }\r\n\r\n            this.crossOrigin = crossOrigin;\r\n            this.crossOriginUrl = crossOriginUrl;\r\n            var image = document.createElement(\"img\");\r\n\r\n            if (crossOrigin) {\r\n              image.crossOrigin = crossOrigin;\r\n            }\r\n\r\n            image.src = crossOriginUrl || url;\r\n            image.alt = element.alt || \"The image to crop\";\r\n            this.image = image;\r\n            image.onload = this.start.bind(this);\r\n            image.onerror = this.stop.bind(this);\r\n            addClass(image, CLASS_HIDE);\r\n            element.parentNode.insertBefore(image, element.nextSibling);\r\n          },\r\n        },\r\n        {\r\n          key: \"start\",\r\n          value: function start() {\r\n            var _this2 = this;\r\n\r\n            var image = this.image;\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\r\n            // such as Safari for iOS, Chrome for iOS, and in-app browsers.\r\n\r\n            var isIOSWebKit =\r\n              WINDOW.navigator &&\r\n              /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(\r\n                WINDOW.navigator.userAgent,\r\n              );\r\n\r\n            var done = function done(naturalWidth, naturalHeight) {\r\n              assign(_this2.imageData, {\r\n                naturalWidth: naturalWidth,\r\n                naturalHeight: naturalHeight,\r\n                aspectRatio: naturalWidth / naturalHeight,\r\n              }); // Store the `initialImageData` here for avoiding side effect (jquery-cropper#19)\r\n\r\n              _this2.initialImageData = assign({}, _this2.imageData);\r\n              _this2.sizing = false;\r\n              _this2.sized = true;\r\n\r\n              _this2.build();\r\n            }; // Most modern browsers (excepts iOS WebKit)\r\n\r\n            if (image.naturalWidth && !isIOSWebKit) {\r\n              done(image.naturalWidth, image.naturalHeight);\r\n              return;\r\n            }\r\n\r\n            var sizingImage = document.createElement(\"img\");\r\n            var body = document.body || document.documentElement;\r\n            this.sizingImage = sizingImage;\r\n\r\n            sizingImage.onload = function () {\r\n              done(sizingImage.width, sizingImage.height);\r\n\r\n              if (!isIOSWebKit) {\r\n                body.removeChild(sizingImage);\r\n              }\r\n            };\r\n\r\n            sizingImage.src = image.src; // iOS WebKit will convert the image automatically\r\n            // with its orientation once append it into DOM (#279)\r\n\r\n            if (!isIOSWebKit) {\r\n              sizingImage.style.cssText =\r\n                \"left:0;\" +\r\n                \"max-height:none!important;\" +\r\n                \"max-width:none!important;\" +\r\n                \"min-height:0!important;\" +\r\n                \"min-width:0!important;\" +\r\n                \"opacity:0;\" +\r\n                \"position:absolute;\" +\r\n                \"top:0;\" +\r\n                \"z-index:-1;\";\r\n              body.appendChild(sizingImage);\r\n            }\r\n          },\r\n        },\r\n        {\r\n          key: \"stop\",\r\n          value: function stop() {\r\n            var image = this.image;\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            image.parentNode.removeChild(image);\r\n            this.image = null;\r\n          },\r\n        },\r\n        {\r\n          key: \"build\",\r\n          value: function build() {\r\n            if (!this.sized || this.ready) {\r\n              return;\r\n            }\r\n\r\n            var element = this.element,\r\n              options = this.options,\r\n              image = this.image; // Create cropper elements\r\n\r\n            var container = element.parentNode;\r\n            var template = document.createElement(\"div\");\r\n            template.innerHTML = TEMPLATE;\r\n            var cropper = template.querySelector(\r\n              \".\".concat(NAMESPACE, \"-container\"),\r\n            );\r\n            var canvas = cropper.querySelector(\r\n              \".\".concat(NAMESPACE, \"-canvas\"),\r\n            );\r\n            var dragBox = cropper.querySelector(\r\n              \".\".concat(NAMESPACE, \"-drag-box\"),\r\n            );\r\n            var cropBox = cropper.querySelector(\r\n              \".\".concat(NAMESPACE, \"-crop-box\"),\r\n            );\r\n            var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\r\n            this.container = container;\r\n            this.cropper = cropper;\r\n            this.canvas = canvas;\r\n            this.dragBox = dragBox;\r\n            this.cropBox = cropBox;\r\n            this.viewBox = cropper.querySelector(\r\n              \".\".concat(NAMESPACE, \"-view-box\"),\r\n            );\r\n            this.face = face;\r\n            canvas.appendChild(image); // Hide the original image\r\n\r\n            addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\r\n\r\n            container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\r\n\r\n            if (!this.isImg) {\r\n              removeClass(image, CLASS_HIDE);\r\n            }\r\n\r\n            this.initPreview();\r\n            this.bind();\r\n            options.initialAspectRatio =\r\n              Math.max(0, options.initialAspectRatio) || NaN;\r\n            options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\r\n            options.viewMode =\r\n              Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\r\n            addClass(cropBox, CLASS_HIDDEN);\r\n\r\n            if (!options.guides) {\r\n              addClass(\r\n                cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")),\r\n                CLASS_HIDDEN,\r\n              );\r\n            }\r\n\r\n            if (!options.center) {\r\n              addClass(\r\n                cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")),\r\n                CLASS_HIDDEN,\r\n              );\r\n            }\r\n\r\n            if (options.background) {\r\n              addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\r\n            }\r\n\r\n            if (!options.highlight) {\r\n              addClass(face, CLASS_INVISIBLE);\r\n            }\r\n\r\n            if (options.cropBoxMovable) {\r\n              addClass(face, CLASS_MOVE);\r\n              setData(face, DATA_ACTION, ACTION_ALL);\r\n            }\r\n\r\n            if (!options.cropBoxResizable) {\r\n              addClass(\r\n                cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")),\r\n                CLASS_HIDDEN,\r\n              );\r\n              addClass(\r\n                cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")),\r\n                CLASS_HIDDEN,\r\n              );\r\n            }\r\n\r\n            this.render();\r\n            this.ready = true;\r\n            this.setDragMode(options.dragMode);\r\n\r\n            if (options.autoCrop) {\r\n              this.crop();\r\n            }\r\n\r\n            this.setData(options.data);\r\n\r\n            if (isFunction(options.ready)) {\r\n              addListener(element, EVENT_READY, options.ready, {\r\n                once: true,\r\n              });\r\n            }\r\n\r\n            dispatchEvent(element, EVENT_READY);\r\n          },\r\n        },\r\n        {\r\n          key: \"unbuild\",\r\n          value: function unbuild() {\r\n            if (!this.ready) {\r\n              return;\r\n            }\r\n\r\n            this.ready = false;\r\n            this.unbind();\r\n            this.resetPreview();\r\n            this.cropper.parentNode.removeChild(this.cropper);\r\n            removeClass(this.element, CLASS_HIDDEN);\r\n          },\r\n        },\r\n        {\r\n          key: \"uncreate\",\r\n          value: function uncreate() {\r\n            if (this.ready) {\r\n              this.unbuild();\r\n              this.ready = false;\r\n              this.cropped = false;\r\n            } else if (this.sizing) {\r\n              this.sizingImage.onload = null;\r\n              this.sizing = false;\r\n              this.sized = false;\r\n            } else if (this.reloading) {\r\n              this.xhr.onabort = null;\r\n              this.xhr.abort();\r\n            } else if (this.image) {\r\n              this.stop();\r\n            }\r\n          },\r\n          /**\r\n           * Get the no conflict cropper class.\r\n           * @returns {Cropper} The cropper class.\r\n           */\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          key: \"noConflict\",\r\n          value: function noConflict() {\r\n            window.Cropper = AnotherCropper;\r\n            return Cropper;\r\n          },\r\n          /**\r\n           * Change the default options.\r\n           * @param {Object} options - The new default options.\r\n           */\r\n        },\r\n        {\r\n          key: \"setDefaults\",\r\n          value: function setDefaults(options) {\r\n            assign(DEFAULTS, isPlainObject(options) && options);\r\n          },\r\n        },\r\n      ],\r\n    );\r\n\r\n    return Cropper;\r\n  })();\r\n\r\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\r\n\r\n  return Cropper;\r\n});\r\n"],"sourceRoot":""}