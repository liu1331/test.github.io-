{"version":3,"sources":["pages/Home/components/BetsList/TopEventDecorator/components/Christmas/styles.module.scss","pages/Home/components/BetsList/TopEventDecorator/styles.module.scss","pages/Home/components/BetsList/BottomEventDecorator/components/Christmas/styles.module.scss","pages/Home/components/BetsList/BottomEventDecorator/styles.module.scss","pages/Home/components/BetsList/desktop.module.scss","pages/Home/components/BetsList/mobile.module.scss","pages/Home/components/BetsList/style.module.scss","pages/Home/components/BetsList/TopEventDecorator/components/index.ts","pages/Home/components/BetsList/TopEventDecorator/components/Christmas/index.tsx","pages/Home/components/BetsList/TopEventDecorator/index.tsx","pages/Home/components/BetsList/BottomEventDecorator/components/index.ts","pages/Home/components/BetsList/BottomEventDecorator/components/Christmas/index.tsx","pages/Home/components/BetsList/BottomEventDecorator/index.tsx","pages/Home/components/BetsList/renderTable.tsx","pages/Home/components/BetsList/component.tsx","assets/logos/christmas/bottomSnow.svg","assets/logos/christmas/sliderSnow.png"],"names":["module","exports","decoratorComponents","christmas","src","snowURL","alt","className","css","img","TopEventDecorator","activeEvent","useWhiteTheme","Component","root","BottomEventDecorator","avatarStyles","width","height","wait","throttle","f","getTextColor","profit","BetsRow","sectionRef","useRef","newBet","useWindowSize","isMobile","useState","betsList","setBetsList","pushHistoryTo","useModalLocation","handleOpenData","user_name","searchParams","userName","useLayoutEffect","chatPipeFunctions","homePageAllBetsListener","data","action","bets","slice","reverse","bet","bet_amt","coin","game","id","payout","profile_picture_url","current","unshift","length","table","querySelector","children","forEach","index","onclick","userLink","querySelectorAll","textContent","generateCoinUrl","betsData","Betprofit","style","color","Number","getAvatar","betProfit","error","track","errors","chatSocket","send","type","tableValues","isUsd","cssM","tableCellWrapper","onClick","nameWrapper","clsx","gameType","cssD","capitalize","variant","dataCellWrapper","contentWrapper","description","coinContainer","betSize","chip","profitLose","circle","userLogo","avatar","coinWrapper","toFixed","grow","renderValuesCreator","coinsManager","showInUSD","betsBlock","ref","tableWrapper","body","rows","map","i","coinPriceState","amount","price","profitResult","values","replaceNumbers","key","classes","td"],"mappings":"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","file":"static/js/58.08e4d0ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__1ucIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__3_9qB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__2XKde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__33sOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"tableCell\":\"desktop_tableCell__2W0JW\",\"tableCellWrapper\":\"desktop_tableCellWrapper__3gVP_\",\"circle\":\"desktop_circle__3avKy\",\"gameLogo\":\"desktop_gameLogo__3u61A\",\"capitalize\":\"desktop_capitalize__2Detr\",\"gameType\":\"desktop_gameType__2T-xG\",\"userLogo\":\"desktop_userLogo__2IYuf\",\"userName\":\"desktop_userName__mwRZx\",\"description\":\"desktop_description__3lV5Z\",\"betSize\":\"desktop_betSize__15zIm\",\"lastCell\":\"desktop_lastCell__3nixp\",\"chip\":\"desktop_chip__2dDid\",\"grow\":\"desktop_grow__39TCG\",\"coinWrapper\":\"desktop_coinWrapper__a5N7z\",\"coin\":\"desktop_coin__1wXwZ\",\"profit\":\"desktop_profit__3ljIT\",\"profitLose\":\"desktop_profitLose__HZxdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"mobile_root__KjOQS\",\"tableCell\":\"mobile_tableCell__1ad5m\",\"tableCellWrapper\":\"mobile_tableCellWrapper__ieEwP\",\"dataCellWrapper\":\"mobile_dataCellWrapper__2fKAr\",\"circleWrapper\":\"mobile_circleWrapper__2Yfqj\",\"nameWrapper\":\"mobile_nameWrapper__24bCD\",\"contentWrapper\":\"mobile_contentWrapper__21o0O\",\"coinWrapper\":\"mobile_coinWrapper__3TcAv\",\"coin\":\"mobile_coin__1vxhe\",\"circle\":\"mobile_circle__DGUtL\",\"gameType\":\"mobile_gameType__w18Vh\",\"userName\":\"mobile_userName__2nlU7\",\"description\":\"mobile_description__Msjmn\",\"coinContainer\":\"mobile_coinContainer__3f5hI\",\"betSize\":\"mobile_betSize__qOErA\",\"chip\":\"mobile_chip__110QJ\",\"grow\":\"mobile_grow__19MSO\",\"profit\":\"mobile_profit__1S4Qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"betsBlock\":\"style_betsBlock__1qk9z\",\"tableWrapper\":\"style_tableWrapper__1YR78\",\"root\":\"style_root__2UY9T\",\"td\":\"style_td__3ruYT\"};","import { Christmas } from \"./Christmas\";\r\n\r\nexport const decoratorComponents = {\r\n  christmas: Christmas,\r\n};\r\n","import React from \"react\";\r\nimport snowURL from \"assets/logos/christmas/sliderSnow.png\";\r\nimport css from \"./styles.module.scss\";\r\n\r\nexport const Christmas = () => {\r\n  return <img src={snowURL} alt=\"snow\" className={css.img} />;\r\n};\r\n","import React from \"react\";\r\nimport { useWhiteTheme } from \"providers\";\r\n\r\nimport { decoratorComponents } from \"./components\";\r\nimport css from \"./styles.module.scss\";\r\n\r\nexport const TopEventDecorator = () => {\r\n  const { activeEvent } = useWhiteTheme();\r\n\r\n  if (!activeEvent) {\r\n    return null;\r\n  }\r\n\r\n  const Component = decoratorComponents[activeEvent];\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <Component />\r\n    </div>\r\n  );\r\n};\r\n","import { Christmas } from \"./Christmas\";\r\n\r\nexport const decoratorComponents = {\r\n  christmas: Christmas,\r\n};\r\n","import React from \"react\";\r\nimport snowURL from \"assets/logos/christmas/bottomSnow.svg\";\r\nimport css from \"./styles.module.scss\";\r\n\r\nexport const Christmas = () => {\r\n  return <img src={snowURL} alt=\"snow\" className={css.img} />;\r\n};\r\n","import React from \"react\";\r\nimport { useWhiteTheme } from \"providers\";\r\n\r\nimport { decoratorComponents } from \"./components\";\r\nimport css from \"./styles.module.scss\";\r\n\r\nexport const BottomEventDecorator = () => {\r\n  const { activeEvent } = useWhiteTheme();\r\n\r\n  if (!activeEvent) {\r\n    return null;\r\n  }\r\n\r\n  const Component = decoratorComponents[activeEvent];\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <Component />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Avatar, Chip, GetCoinImg, Typography } from \"components\";\r\n\r\nimport cssD from \"./desktop.module.scss\";\r\nimport cssM from \"./mobile.module.scss\";\r\n\r\nconst avatarStyles = { width: 28, height: 28 };\r\n\r\nexport const renderValuesCreator = (\r\n  handleOpenData: (user_name: string) => void,\r\n  isMobile?: boolean,\r\n  isUsd?: boolean,\r\n) => {\r\n  return (\r\n    user_name: string,\r\n    game: string,\r\n    coin: string,\r\n    bet_amt: string | number,\r\n    payout: string,\r\n    profit: string | number,\r\n    profile_picture_url?: string,\r\n  ) => {\r\n    if (!isMobile) {\r\n      return [\r\n        <div className={cssD.tableCellWrapper}>\r\n          <Typography\r\n            className={clsx(cssD.gameType, cssD.capitalize)}\r\n            variant=\"subtitle1\">\r\n            {game}\r\n          </Typography>\r\n        </div>,\r\n\r\n        <div\r\n          className={cssD.tableCellWrapper}\r\n          onClick={() => handleOpenData(user_name)}>\r\n          <div className={clsx(cssD.circle, cssD.userLogo)}>\r\n            <Avatar\r\n              userName={user_name}\r\n              style={avatarStyles}\r\n              avatar={profile_picture_url}\r\n            />\r\n          </div>\r\n          <Typography className={cssD.userName} variant=\"subtitle1\">\r\n            {user_name}\r\n          </Typography>\r\n        </div>,\r\n\r\n        <div className={cssD.tableCellWrapper}>\r\n          <Typography className={cssD.description} variant=\"subtitle2\">\r\n            BET\r\n          </Typography>\r\n          <div className={cssD.coinWrapper}>\r\n            <GetCoinImg coin={coin} className={cssD.coin} />\r\n          </div>\r\n          <Typography className={cssD.betSize} variant=\"subtitle1\">\r\n            {isUsd ? \"$\" : null}\r\n            {bet_amt}\r\n          </Typography>\r\n        </div>,\r\n\r\n        <div className={cssD.tableCellWrapper}>\r\n          <Typography className={cssD.description} variant=\"subtitle2\">\r\n            PAYOUT\r\n          </Typography>\r\n          <Chip className={cssD.chip}>{Number(payout).toFixed(2) + \"x\"}</Chip>\r\n\r\n          <div className={cssD.grow} />\r\n\r\n          <Typography\r\n            className={`${cssD.profit} ${\r\n              Number(profit) < 0 ? cssD.profitLose : \"\"\r\n            }`}\r\n            variant=\"subtitle1\">\r\n            {isUsd ? \"$\" : null}\r\n            {profit}\r\n          </Typography>\r\n        </div>,\r\n      ];\r\n    }\r\n\r\n    return [\r\n      <div\r\n        className={cssM.tableCellWrapper}\r\n        onClick={() => handleOpenData(user_name)}>\r\n        <div className={cssM.nameWrapper}>\r\n          <Typography\r\n            className={clsx(cssM.gameType, cssD.capitalize)}\r\n            variant=\"subtitle1\">\r\n            {game}\r\n          </Typography>\r\n          <Typography className={cssM.userName} variant=\"subtitle1\">\r\n            {user_name}\r\n          </Typography>\r\n        </div>\r\n      </div>,\r\n\r\n      <div className={cssM.tableCellWrapper}>\r\n        <div className={cssM.dataCellWrapper}>\r\n          <div className={cssM.contentWrapper}>\r\n            <Typography className={cssM.description} variant=\"subtitle2\">\r\n              BET\r\n            </Typography>\r\n            <div className={cssM.coinContainer}>\r\n              <GetCoinImg className={cssM.coin} coin={coin} />\r\n              <Typography className={cssM.betSize} variant=\"subtitle1\">\r\n                {isUsd ? \"$\" : null}\r\n                {bet_amt}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div className={cssM.contentWrapper}>\r\n            <Typography className={cssM.description} variant=\"subtitle2\">\r\n              PAYOUT\r\n            </Typography>\r\n            <Chip className={cssM.chip}>{payout.slice(0, 3) + \"x\"}</Chip>\r\n\r\n            <Typography\r\n              className={`${cssM.profit} ${\r\n                Number(profit) < 0 ? cssD.profitLose : \"\"\r\n              }`}\r\n              variant=\"subtitle1\">\r\n              {isUsd ? \"$\" : null}\r\n              {profit}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n    ];\r\n  };\r\n};\r\n","//@ts-nocheck\r\nimport React, { useState, useRef, useLayoutEffect } from \"react\";\r\nimport { throttle } from \"utils/lodash\";\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  chatPipeFunctions,\r\n  Table,\r\n  Scrollbar,\r\n  generateCoinUrl,\r\n} from \"components\";\r\nimport { useWindowSize } from \"providers\";\r\nimport { coinsManager, useModalLocation } from \"hooks\";\r\nimport { chatSocket, replaceNumbers, track } from \"utils\";\r\n\r\nimport { TopEventDecorator } from \"./TopEventDecorator\";\r\nimport { BottomEventDecorator } from \"./BottomEventDecorator\";\r\nimport { renderValuesCreator } from \"./renderTable\";\r\nimport css from \"./style.module.scss\";\r\nimport { BetType } from \"./types\";\r\nimport { getAvatar } from \"components/Avatar\";\r\n\r\nconst wait = throttle((f: () => void) => {\r\n  f();\r\n}, 300);\r\n\r\nconst betsLength = 10;\r\nconst subsidiaryRed = \"#dd5389\";\r\nconst subsidiaryGreen = \"#bcef90\";\r\nconst getTextColor = (profit: number) => {\r\n  return profit < 0 ? subsidiaryRed : subsidiaryGreen;\r\n};\r\n\r\nconst BetsRow = () => {\r\n  const sectionRef = useRef<HTMLElement | null>(null);\r\n  const newBet = useRef<BetType[]>([]);\r\n  const { width, isMobile } = useWindowSize();\r\n  const [betsList, setBetsList] = useState<BetType[]>([]);\r\n\r\n  const { pushHistoryTo } = useModalLocation(\"profile\");\r\n  const handleOpenData = (user_name: string) => {\r\n    pushHistoryTo({ searchParams: { userName: user_name } });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const listener = (data) => {\r\n      switch (data.action) {\r\n        case \"all_bets\":\r\n          const bets = data.bets.slice(-betsLength).reverse();\r\n          setBetsList(bets);\r\n          break;\r\n\r\n        case \"new_bet_received\":\r\n          const bet = {\r\n            bet_amt: data.bet_amt,\r\n            coin: data.coin,\r\n            game: data.game,\r\n            id: data.id,\r\n            payout: data.payout,\r\n            profile_picture_url: data.profile_picture_url,\r\n            profit: data.profit,\r\n            user_name: data.user_name,\r\n          };\r\n\r\n          const updateTable = () => {\r\n            try {\r\n              newBet.current.unshift(bet);\r\n              if (newBet.current.length >= betsLength)\r\n                newBet.current.length = betsLength;\r\n              const table = sectionRef.current?.querySelector(\"tbody\");\r\n              if (table) {\r\n                const { children } = table as HTMLElement;\r\n                const tableElements = [...children];\r\n                tableElements.forEach(({ children }, index) => {\r\n                  const bet = newBet.current[index];\r\n                  if (!bet) return;\r\n\r\n                  const {\r\n                    bet_amt,\r\n                    coin,\r\n                    game,\r\n                    payout,\r\n                    profile_picture_url,\r\n                    profit,\r\n                    user_name,\r\n                  } = bet;\r\n                  if (!isMobile) {\r\n                    children[0].querySelector(\"h6\").textContent = game;\r\n\r\n                    children[1].onclick = () => handleOpenData(user_name);\r\n\r\n                    children[1].querySelector(\"img\").src = getAvatar(\r\n                      user_name,\r\n                      profile_picture_url,\r\n                    );\r\n\r\n                    children[1].querySelector(\"h6\").textContent = user_name;\r\n\r\n                    children[2].querySelector(\"img\").src =\r\n                      generateCoinUrl(coin);\r\n\r\n                    children[2].querySelectorAll(\"h6\")[1].textContent = bet_amt;\r\n\r\n                    children[3].querySelector(\"span\").textContent = `${\r\n                      payout.slice(0, 3) + \"x\"\r\n                    }`;\r\n\r\n                    const betProfit = children[3].querySelectorAll(\"h6\")[1];\r\n                    betProfit.textContent = profit;\r\n                    betProfit.style.color = getTextColor(Number(profit));\r\n                  } else {\r\n                    children[0].onclick = () => handleOpenData(user_name);\r\n                    const userLink = children[0].querySelectorAll(\"h6\");\r\n\r\n                    userLink[0].textContent = game;\r\n                    userLink[1].textContent = user_name;\r\n\r\n                    children[1].querySelector(\"img\").src =\r\n                      generateCoinUrl(coin);\r\n\r\n                    const betsData = children[1].querySelectorAll(\"h6\");\r\n                    betsData[1].textContent = bet_amt;\r\n\r\n                    children[1].querySelector(\"span\").textContent = `${\r\n                      payout.slice(0, 3) + \"x\"\r\n                    }`;\r\n\r\n                    const Betprofit = betsData[3];\r\n                    Betprofit.textContent = profit;\r\n                    Betprofit.style.color = getTextColor(Number(profit));\r\n                  }\r\n                });\r\n              }\r\n            } catch (error) {\r\n              track()?.errors(error);\r\n            }\r\n          };\r\n          wait(updateTable);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    chatPipeFunctions.homePageAllBetsListener = listener;\r\n    chatSocket.send({ type: \"get_all_bets\" });\r\n\r\n    return () => {\r\n      chatPipeFunctions.homePageAllBetsListener = () => null;\r\n    };\r\n  }, [width, isMobile]);\r\n\r\n  const tableValues = renderValuesCreator(\r\n    handleOpenData,\r\n    isMobile,\r\n    coinsManager.showInUSD,\r\n  );\r\n\r\n  if (betsList.length >= 10) {\r\n    betsList.length = 10;\r\n  }\r\n\r\n  return (\r\n    <section className={css.betsBlock} ref={sectionRef}>\r\n      <TopEventDecorator />\r\n      <Scrollbar>\r\n        <div className={css.tableWrapper}>\r\n          <Table\r\n            root={{\r\n              className: css.root,\r\n            }}\r\n            body={{\r\n              rows: betsList.map(\r\n                (\r\n                  {\r\n                    bet_amt,\r\n                    coin,\r\n                    game,\r\n                    id,\r\n                    payout,\r\n                    profit,\r\n                    user_name,\r\n                    profile_picture_url,\r\n                  },\r\n                  i,\r\n                ) => {\r\n                  const { showInUSD, coinPriceState } = coinsManager;\r\n\r\n                  const amount = showInUSD\r\n                    ? (\r\n                        Number(bet_amt) * Number(coinPriceState[coin]?.price)\r\n                      ).toFixed(8)\r\n                    : bet_amt;\r\n\r\n                  const profitResult = showInUSD\r\n                    ? (\r\n                        Number(profit) * Number(coinPriceState[coin]?.price)\r\n                      ).toFixed(8)\r\n                    : profit;\r\n\r\n                  return {\r\n                    values: tableValues(\r\n                      user_name,\r\n                      game,\r\n                      coin,\r\n                      replaceNumbers(amount),\r\n                      payout,\r\n                      replaceNumbers(profitResult),\r\n                      profile_picture_url,\r\n                    ),\r\n                    key: id,\r\n                  };\r\n                },\r\n              ),\r\n\r\n              classes: {\r\n                td: clsx(css.td),\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Scrollbar>\r\n      <BottomEventDecorator />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BetsRow;\r\n","export default __webpack_public_path__ + \"static/media/bottomSnow.269f2625.svg\";","export default __webpack_public_path__ + \"static/media/sliderSnow.406f4ba2.png\";"],"sourceRoot":""}