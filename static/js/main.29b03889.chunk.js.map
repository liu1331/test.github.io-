{"version":3,"sources":["utils/checkModalIsAuthorizedOnly.ts","hooks/useModalLocation.ts","routing/routes.ts","components/AppRouter/AppRouter.tsx","components/Navbar/Navbar.tsx","App.tsx","redux/store.tsx","index.tsx","redux/reducers/BasketReducer/BasketOrderType.ts","redux/reducers/BasketReducer/BasketReducer.tsx","redux/reducers/ProductContentReducer/ProductType.ts","redux/reducers/ProductContentReducer/ProductContentReducer.tsx","redux/reducers/allActionCreators.tsx","hooks/useAC.tsx","types/discounts.ts"],"names":["checkModalIsAuthorizedOnly","modalName","isAuthorizedOnly","token","localStorage","getItem","error","console","log","then","obj","isAuthorizedOnlyModalList","list","getModalPath","path","search","searchParams","pushValue","name","value","key","useModalLocation","params","useParams","location","useLocation","useHistory","push","goBack","replace","back","e","stopPropagation","close","state","background","undefined","pushHistoryTo","props","pathname","split","includes","hash","locationState","RoutePath","ProductContent","lazy","Basket","routes","exact","component","BASKET","PRODUCT_CONTENT","defaultLocation","AppRouter","useMemo","isModal","filter","val","map","i","Component","render","history","match","fallback","Navbar","router","Header","justify","className","align","theme","mode","selectable","Item","onClick","icon","HomeOutlined","style","fontSize","color","AccountBookFilled","title","ShoppingOutlined","App","useActionCreators","setOrders","setTotalPriceAction","useEffect","orders","json","JSON","parse","length","Reducers","combineReducers","ProductContentReducer","BasketReducer","store","createStore","applyMiddleware","thunk","AppComponent","basename","rootElement","document","getElementById","hasChildNodes","hydrate","BasketActionName","InitalState","totalPrice","action","type","SET_ORDER","order","Number","SET_ORDERS","SET_TOTAL_PRICE","newTotalPrice","reduce","prev","curr","REMOVE_ORDER","productName","CHANGE_ORDER_VALUE_ACTION","countValue","BasketActionCreators","setOrder","removeOrder","cahngeValueOrdeAction","localStorageOrders","dispatch","setItem","stringify","jsonTotalPrice","acceptOrders","clear","deleteOrderThunk","jsonOrders","splice","changeValueOrder","ProductActionName","InitialState","products","SET_PRODUCTS","PUSH_PRODUCT","product","inBasket","ProductActionCreactors","setProducts","getProductsThunk","response","img","price","discount","DiscountName","ON_3_KG","pushProduct","allActionCreators","useDispatch","bindActionCreators"],"mappings":"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","file":"static/js/main.29b03889.chunk.js","sourcesContent":["import { ParamKeys } from \"routing/modalRoutes\";\r\n\r\nexport const checkModalIsAuthorizedOnly = async (\r\n  modalName: ParamKeys | undefined,\r\n) => {\r\n  let isAuthorizedOnly = false;\r\n  let token: string | null = null;\r\n  try {\r\n    token = localStorage.getItem(\"token\");\r\n  } catch (error) {\r\n   console.log(error);\r\n\r\n  }\r\n  const list = await import(\"routing/modalRoutes\").then(\r\n    (obj) => obj.isAuthorizedOnlyModalList,\r\n  );\r\n  if (modalName) {\r\n    isAuthorizedOnly = list[modalName];\r\n  }\r\n\r\n  return token ? isAuthorizedOnly && !token : isAuthorizedOnly;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { IModalParams, ModalParams, ParamKeys } from \"routing/modalRoutes\";\r\nimport { checkModalIsAuthorizedOnly } from \"utils/checkModalIsAuthorizedOnly\";\r\n\r\ninterface SearchValue<T> {\r\n  name: string;\r\n  value: T;\r\n}\r\nexport interface IPushHistoryTo {\r\n  path?: string;\r\n  search?: SearchValue<ParamKeys>;\r\n  searchParams?: Record<string, string>;\r\n  locationState?: unknown;\r\n}\r\nexport const getModalPath = ({\r\n  path,\r\n  search,\r\n  searchParams,\r\n}: Omit<IPushHistoryTo, \"locationState\">) => {\r\n  let pushValue = \"\";\r\n  if (path) {\r\n    pushValue = path;\r\n  }\r\n  if (search) {\r\n    pushValue = `/${search.name}/${search.value}`;\r\n  }\r\n  if (searchParams) {\r\n    for (let key in searchParams) {\r\n      pushValue += `/${searchParams[key]}`;\r\n    }\r\n  }\r\n  return pushValue;\r\n};\r\n\r\nexport function useModalLocation<T extends ParamKeys>(\r\n  modalName = \"login\" as T,\r\n): {\r\n  params: IModalParams[T];\r\n  back: (e?: Event) => void;\r\n  close: (e?: Event) => void;\r\n  pushHistoryTo: (props: IPushHistoryTo) => void;\r\n  location: any;\r\n} {\r\n  const params = useParams<typeof ModalParams[typeof modalName]>();\r\n  const location: any = useLocation();\r\n\r\n  const { push, goBack, replace } = useHistory();\r\n\r\n  const back = (e?: Event) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n    goBack();\r\n  };\r\n  const close = (e?: Event) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n    if (location.state && location.state.background) {\r\n      replace({ ...location.state.background });\r\n    } else {\r\n      push(`/`, undefined);\r\n    }\r\n  };\r\n  const pushHistoryTo = async (props: IPushHistoryTo = {}) => {\r\n    if (await checkModalIsAuthorizedOnly(modalName)) return;\r\n    let background =\r\n      location.state && location.state.background\r\n        ? location.state.background\r\n        : location;\r\n    if (background.pathname.split(\"/\").includes(\"page\")) {\r\n      background = { hash: \"\", pathname: \"/\", search: \"\", state: undefined };\r\n    }\r\n    replace(\r\n      getModalPath({ search: { name: \"page\", value: modalName }, ...props }),\r\n      {\r\n        background: props.locationState || background,\r\n      },\r\n    );\r\n  };\r\n\r\n  return {\r\n    params,\r\n    back,\r\n    close,\r\n    pushHistoryTo,\r\n    location: location.state?.background || location,\r\n  };\r\n}\r\n","import React, { lazy,Suspense,ReactFragment,LazyExoticComponent } from \"react\";\r\nimport { RouteProps } from \"react-router-dom\";\r\n// import Basket from \"../pages/Basket\";\r\n// import ProductContent from \"../pages/ProductContent\";\r\nconst ProductContent = lazy(()=> import(\"../pages/ProductContent\"))\r\nconst Basket = lazy(()=> import(\"../pages/Basket\"))\r\n\r\n\r\n\r\nexport interface RouteType {\r\n    path?: string | string[];\r\n    exact?: boolean;\r\n    component?:any;\r\n    themePath?: string;\r\n  }\r\n\r\nexport enum RoutePath{\r\n    BASKET= '/basket',\r\n    PRODUCT_CONTENT='/productContent'\r\n\r\n}\r\n\r\nexport const routes:RouteType[] = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    component: ProductContent,\r\n  },\r\n    {path: RoutePath.BASKET, component: Basket, exact: true},\r\n    {path: \"/test.github.io-\"+RoutePath.BASKET, component: Basket, exact: true},\r\n    {path: RoutePath.PRODUCT_CONTENT, component: ProductContent, exact: true},\r\n]","import React, { Suspense, useMemo } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { RoutePath, routes } from \"../../routing/routes\";\r\nimport Modals from \"components/Modals\";\r\n\r\nconst defaultLocation = {\r\n  pathname: \"/\",\r\n  search: \"\",\r\n  hash: \"\",\r\n  state: {\r\n    hash: \"\",\r\n    pathname: \"/\",\r\n    search: \"\",\r\n    state: undefined,\r\n  },\r\n};\r\nconst AppRouter = () => {\r\n  const location = useLocation<{ background?: any }>();\r\n\r\n  const { background, isModal } = useMemo(() => {\r\n    const paths = location.pathname.split(\"/\").filter((val: string) => val);\r\n    const isModal = paths.includes(\"page\");\r\n    let background =\r\n      location.state && location.state.background && isModal\r\n        ? location.state.background\r\n        : defaultLocation;\r\n\r\n    let backgroundPaths = [];\r\n    if (background) {\r\n      background = isModal ? background : location;\r\n      backgroundPaths = background.pathname\r\n        .split(\"/\")\r\n        .filter((val: string) => val);\r\n    }\r\n\r\n    return { background, isModal };\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Switch location={background}> */}\r\n      <Switch>\r\n        {routes.map(({ path, exact, component: Component }, i) => {\r\n          return (\r\n            <Route\r\n              key={`@customRoutes/${i}_${path}`}\r\n              path={path}\r\n              exact={exact}\r\n              render={({ history, location, match }) => {\r\n                console.log(location);\r\n                console.log(history);\r\n\r\n                return (\r\n                  <Suspense fallback={null}>\r\n                    <Component />\r\n                  </Suspense>\r\n                );\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Switch>\r\n      {/* <Switch>\r\n        <Suspense fallback={null}>\r\n          <Modals\r\n            isOpen={isModal}\r\n            background={background}\r\n            location={location}\r\n          />\r\n        </Suspense>\r\n      </Switch> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import {\r\n  HomeOutlined,\r\n  ShoppingOutlined,\r\n  AccountBookFilled,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu, Row } from \"antd\";\r\nimport { useModalLocation } from \"hooks/useModalLocation\";\r\nimport React, { FC } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { RoutePath } from \"../../routing/routes\";\r\n\r\nconst Navbar: FC = () => {\r\n  const router = useHistory();\r\n  const { pushHistoryTo } = useModalLocation(\"bet-data\");\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <Row justify=\"space-between\" className=\"container\" align=\"middle\">\r\n        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n          <Menu.Item\r\n            onClick={() => router.push(RoutePath.PRODUCT_CONTENT)}\r\n            icon={\r\n              <HomeOutlined\r\n                style={{ fontSize: \"2em\", color: \"antiquewhite\" }}\r\n              />\r\n            }\r\n            key={1}\r\n          ></Menu.Item>\r\n        </Menu>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n          <Menu.Item\r\n            onClick={() => pushHistoryTo({})}\r\n            icon={\r\n              <AccountBookFilled\r\n                className=\"Basket_icon\"\r\n                style={{ fontSize: \"2em\", color: \"gold\" }}\r\n                title=\"1\"\r\n              />\r\n            }\r\n            key={2}\r\n          ></Menu.Item>\r\n\r\n          <Menu.Item\r\n            onClick={() => router.push(RoutePath.BASKET)}\r\n            icon={\r\n              <ShoppingOutlined\r\n                className=\"Basket_icon\"\r\n                style={{ fontSize: \"2em\", color: \"gold\" }}\r\n                title=\"1\"\r\n              />\r\n            }\r\n            key={3}\r\n          ></Menu.Item>\r\n        </Menu>\r\n      </Row>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { FC } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport AppRouter from \"./components/AppRouter/AppRouter\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { useActionCreators } from \"./hooks/useAC\";\r\nimport { IOrder } from \"./types/order\";\r\n\r\nconst App: FC = () => {\r\n  const { setOrders, setTotalPriceAction } = useActionCreators();\r\n  useEffect(() => {\r\n    const orders = localStorage.getItem(\"orders\") || \"[]\";\r\n    const json = JSON.parse(orders) as IOrder[];\r\n    if (json.length > 0) {\r\n      setOrders(json);\r\n      setTotalPriceAction();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n\r\n      <AppRouter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { BasketReducer } from \"./reducers/BasketReducer/BasketReducer\";\r\nimport ProductContentReducer from \"./reducers/ProductContentReducer/ProductContentReducer\";\r\n\r\nconst Reducers = combineReducers({\r\n    ProductContent: ProductContentReducer,\r\n    Basket: BasketReducer\r\n})\r\n\r\nconst store = createStore(Reducers, applyMiddleware(thunk))\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { hydrate, render } from \"react-dom\";\r\n\r\nconst AppComponent = () => {\r\n  return (\r\n    <Router basename=\"https://liu1331.github.io/test.github.io-/\">\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  );\r\n};\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement) {\r\n  if (rootElement.hasChildNodes()) {\r\n    hydrate(<AppComponent />, rootElement);\r\n  } else {\r\n    render(<AppComponent />, rootElement);\r\n  }\r\n}\r\n// ReactDOM.render(\r\n\r\n//   document.getElementById(\"root\")\r\n// );\r\n","import { IOrder } from './../../../types/order';\r\nexport interface IBasketState{\r\n    orders: IOrder[],\r\n    totalPrice: number\r\n}\r\n\r\nexport enum BasketActionName{\r\n    SET_ORDER= \"SET_ORDER\",\r\n    SET_ORDERS= \"SET_ORDERS\",\r\n    SET_TOTAL_PRICE= \"SET_TOTAL_PRICE\",\r\n    REMOVE_ORDER= \"REMOVE_ORDER\",\r\n    CHANGE_ORDER_VALUE_ACTION= \"CHANGE_ORDER_VALUE_ACTION\",\r\n}\r\n\r\nexport interface SetOrderAction{\r\n    type: BasketActionName.SET_ORDER\r\n    order: IOrder\r\n}\r\nexport interface SetOrdersAction{\r\n    type: BasketActionName.SET_ORDERS\r\n    orders: IOrder[]\r\n}\r\nexport interface removeOrder{\r\n    type: BasketActionName.REMOVE_ORDER\r\n    order: IOrder\r\n}\r\nexport interface setTotalPrice{\r\n    type: BasketActionName.SET_TOTAL_PRICE\r\n\r\n}\r\nexport interface changeOrderValueAction{\r\n    type: BasketActionName.CHANGE_ORDER_VALUE_ACTION;\r\n    productName:string;\r\n    countValue: number;\r\n    totalPrice: number\r\n\r\n}\r\n\r\n\r\nexport type BasketActions = SetOrderAction | SetOrdersAction | removeOrder | setTotalPrice | changeOrderValueAction","import { IOrder } from \"../../../types/order\"\r\nimport { AppDispatch } from \"../../store\";\r\nimport { BasketActionName, BasketActions, IBasketState } from \"./BasketOrderType\"\r\n\r\nconst InitalState: IBasketState = {\r\n    orders: [],\r\n    totalPrice: 0\r\n}\r\n\r\nexport function BasketReducer(state = InitalState, action: BasketActions) {\r\n    switch (action.type) {\r\n\r\n        case BasketActionName.SET_ORDER:\r\n            return { ...state, orders: [...state.orders, action.order], totalPrice: Number(state.totalPrice) + Number(action.order.totalPrice) }\r\n\r\n            break;\r\n        case BasketActionName.SET_ORDERS:\r\n\r\n            return { ...state, orders: [...action.orders] }\r\n        case BasketActionName.SET_TOTAL_PRICE:\r\n        const newTotalPrice = state.orders.reduce(function (prev, curr) {\r\n            return prev + curr.totalPrice\r\n    }, 0)\r\n\r\n        return {...state, totalPrice:newTotalPrice }\r\n        case BasketActionName.REMOVE_ORDER:\r\n            return {\r\n                ...state,\r\n                orders: state.orders.filter((order) => order.productName != action.order.productName), totalPrice: Number(state.totalPrice) - Number(action.order.totalPrice)\r\n            }\r\n        case BasketActionName.CHANGE_ORDER_VALUE_ACTION:\r\n            return {\r\n                ...state,\r\n                orders: state.orders.map((order)=>{\r\n                    if (order.productName ===action.productName){\r\n                        return {...order, countValue: action.countValue, totalPrice: action.totalPrice}\r\n                    }else{\r\n                        return {...order}\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const BasketActionCreators = {\r\n    setOrder: (order: IOrder): BasketActions => ({ type: BasketActionName.SET_ORDER, order }),\r\n    setOrders: (orders: IOrder[]): BasketActions => ({ type: BasketActionName.SET_ORDERS, orders }),\r\n    removeOrder: (order: IOrder): BasketActions => ({ type: BasketActionName.REMOVE_ORDER, order }),\r\n    setTotalPriceAction: (): BasketActions => ({ type: BasketActionName.SET_TOTAL_PRICE }),\r\n    cahngeValueOrdeAction: (productName:string, totalPrice:number, countValue:number): BasketActions => ({ type: BasketActionName.CHANGE_ORDER_VALUE_ACTION, productName, totalPrice, countValue }),\r\n\r\n    localStorageOrders: (order: IOrder) => (dispatch: AppDispatch) => {\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n        const json = JSON.parse(orders) as IOrder[];\r\n\r\n        json.push(order)\r\n        dispatch(BasketActionCreators.setOrder(order))\r\n        localStorage.setItem('orders', JSON.stringify(json))\r\n        const totalPrice = localStorage.getItem('totalPrice') || '0';\r\n        const jsonTotalPrice = JSON.parse(totalPrice);\r\n        localStorage.setItem('totalPrice', JSON.stringify(Number(jsonTotalPrice) + Number(order.totalPrice)))\r\n        dispatch(BasketActionCreators.setTotalPriceAction())\r\n\r\n    },\r\n    acceptOrders: () => (dispatch: AppDispatch) => {\r\n        //axios\r\n        localStorage.clear();\r\n        dispatch(BasketActionCreators.setOrders([]));\r\n    },\r\n    deleteOrderThunk: (order: IOrder) => (dispatch: AppDispatch) => {\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n\r\n        const jsonOrders = JSON.parse(orders) as IOrder[];\r\n        for (let i = 0; i < jsonOrders.length; i++) {\r\n            if (jsonOrders[i].productName === order.productName) {\r\n                jsonOrders.splice(i, 1);\r\n            }\r\n        }\r\n        localStorage.setItem('orders', JSON.stringify(jsonOrders))\r\n        dispatch(BasketActionCreators.removeOrder(order))\r\n        const totalPrice = localStorage.getItem('totalPrice') || '0';\r\n        const jsonTotalPrice = JSON.parse(totalPrice);\r\n        localStorage.setItem('totalPrice', JSON.stringify(Number(jsonTotalPrice) - Number(order.totalPrice)))\r\n        dispatch(BasketActionCreators.setTotalPriceAction())\r\n    },\r\n    changeValueOrder:(productName:string, totalPrice:number, countValue:number)=>(dispatch: AppDispatch)=>{\r\n        const orders = localStorage.getItem('orders') || '[]';\r\n        const jsonOrders = JSON.parse(orders) as IOrder[];\r\n        for (let i = 0; i < jsonOrders.length; i++) {\r\n            if (jsonOrders[i].productName === productName) {\r\n                jsonOrders[i].countValue = countValue;\r\n                jsonOrders[i].totalPrice = totalPrice;\r\n            }\r\n        }\r\n        localStorage.setItem('orders', JSON.stringify(jsonOrders))\r\n        localStorage.setItem('totalPrice', JSON.stringify(jsonOrders.reduce(function(prev, curr) { return prev + curr.totalPrice},0)))\r\n        dispatch(BasketActionCreators.setOrders(jsonOrders));\r\n        dispatch( BasketActionCreators.setTotalPriceAction())\r\n\r\n    }\r\n\r\n\r\n}","import { IProduct } from '../../../types/product';\r\n\r\n\r\nexport interface IProductState{\r\n    products: IProduct[],\r\n    // totalProductsPrice: number\r\n}\r\n\r\nexport interface IPushProduct{\r\n    productName: string;\r\n    totalPrice: number;\r\n    inBasket:boolean;\r\n\r\n}\r\n\r\nexport enum ProductActionName{\r\n    SET_PRODUCTS = \"SET_PRODUCTS\",\r\n    PUSH_PRODUCT = \"SET_PRODUCT\"\r\n}\r\n\r\nexport interface SetProducts{\r\n    type: ProductActionName.SET_PRODUCTS;\r\n    products: IProduct[]\r\n\r\n}\r\nexport interface pushProduct{\r\n    type: ProductActionName.PUSH_PRODUCT;\r\n    product: IProduct\r\n\r\n}\r\n\r\n\r\nexport type ProductAction = SetProducts | pushProduct\r\n","import axios from \"axios\";\r\nimport { DiscountName } from \"../../../types/discounts\";\r\nimport { IProduct } from \"../../../types/product\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { IProductState, ProductAction, ProductActionName } from \"./ProductType\";\r\n\r\n\r\n\r\nconst InitialState:IProductState = {\r\n    products: [],\r\n    // totalProductsPrice: 0\r\n\r\n}\r\n\r\nexport default function ProductContentReducer(state= InitialState, action:ProductAction ){\r\n\r\n    // debugger\r\n    switch (action.type) {\r\n        case ProductActionName.SET_PRODUCTS:\r\n            return {...state, products: [...action.products]}\r\n            break;\r\n        case ProductActionName.PUSH_PRODUCT:\r\n\r\n\r\n\r\n            return {\r\n                ...state,\r\n                products: state.products.map((e) => {\r\n                    if (e.productName === action.product.productName) {\r\n                        return { ...e, inBasket: e.inBasket = action.product.inBasket};\r\n                    };\r\n                    return e;\r\n                }),\r\n                // totalProductsPrice: Number(state.totalProductsPrice) + Number(action.product.totalPrice)\r\n            }\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nexport const ProductActionCreactors ={\r\n    setProducts:(products:IProduct[]):ProductAction =>({type:ProductActionName.SET_PRODUCTS, products}),\r\n    getProductsThunk:()=>(dispatch: AppDispatch)=>{\r\n        // axios.get<IProduct[]>().then((response)=>{\r\n        //    dispatch(ProductActionCreactors.setProducts(response.data))\r\n        // });\r\n        const response = [\r\n            {productName:\"Банан\",\r\n                img:\"https://ambassador-city-jomtien.ru/uploads/posts/2014-06/1402862895_banana2.jpg\",\r\n                price:10, inBasket:false, discount:''},\r\n            {productName:\"Яблоко\",\r\n                img:\"https://img3.zakaz.ua/upload.version_1.0.4f1f0c8dc6cf9362a789bf80d070ccf6.1350x1350.jpeg\",\r\n                price:8, inBasket:false, discount:''},\r\n            {productName:\"Папайя\",\r\n                img:\"https://img3.zakaz.ua/src.1607469352.ad72436478c_2020-12-09_Aliona/src.1607469352.SNCPSG10.obj.0.1.jpg.oe.jpg.pf.jpg.1350nowm.jpg.1350x.jpg\",\r\n                price:10, inBasket:false, discount: DiscountName.ON_3_KG}\r\n        ];\r\n        dispatch(ProductActionCreactors.setProducts(response));\r\n\r\n    },\r\n    pushProduct:(product:IProduct):ProductAction=>({type: ProductActionName.PUSH_PRODUCT, product}) //axios\r\n}","import { BasketActionCreators } from \"./BasketReducer/BasketReducer\";\r\nimport { ProductActionCreactors } from \"./ProductContentReducer/ProductContentReducer\";\r\n\r\n\r\nexport const allActionCreators = {\r\n    ...ProductActionCreactors,\r\n    ...BasketActionCreators\r\n}","import { allActionCreators } from '../redux/reducers/allActionCreators';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nexport const useActionCreators = () =>{\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators, dispatch);\r\n}","export enum DiscountName{\r\n    ON_3_KG='ON_3_KG',\r\n    ON_2_KG='ON_2_KG'\r\n}"],"sourceRoot":""}