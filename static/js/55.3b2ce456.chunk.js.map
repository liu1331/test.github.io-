{"version":3,"sources":["pages/Blackjack/Controller/components/Button/style.module.scss","pages/Blackjack/Controller/components/ButtonGroup/style.module.scss","pages/Blackjack/Controller/components/Input/style.module.scss","pages/Blackjack/Controller/components/ControlPanel/style.module.scss","pages/Blackjack/Controller/style.module.scss","pages/Blackjack/GameScene/style.module.scss","pages/Blackjack/page.module.scss","components/HotKeys/Listener/index.ts","pages/Blackjack/Controller/components/Button/index.tsx","pages/Blackjack/Controller/components/ButtonGroup/index.tsx","pages/Blackjack/Controller/components/Input/index.tsx","pages/Blackjack/Controller/components/ControlPanel/index.tsx","pages/Blackjack/Controller/hooks/useLatestGameSession.ts","pages/Blackjack/Controller/index.tsx","pages/Blackjack/Controller/hooks/useGameSession.ts","pages/Blackjack/Controller/hooks/useGameConfig.ts","pages/Blackjack/GameScene/index.tsx","pages/Blackjack/page.tsx","pages/Blackjack/index.tsx"],"names":["module","exports","ActiveKeys","useHotKeyListener","callbacks","useHotKeys","isHotkeyActive","isHotKeysPaused","useEffect","keyDownListenerIgnore","event","isKeyboardEvent","target","tagName","toLowerCase","code","preventDefault","keyListener","key","callbackKeyA","callbackKeyS","callbackSpace","callbackKeyQ","callbackKeyW","callbackKeyE","callbackKeyR","callbackKeyT","callbackKeyY","callbackKeyD","window","addEventListener","removeEventListener","Button","label","variant","onClick","disabled","className","css","button","icon","ButtonGroup","setRelativeAmount","minBtnText","maxBtnText","doubleBtnText","halfBtnText","openWarning","children","Input","props","wrapper","classes","root","buttonsWrapper","ControlPanel","betButtonClick","hitButtonClick","splitButtonClick","standButtonClick","doubleButtonClick","insuranceButtonClick","rejectInsuranceButtonClick","isFetch","intl","useGetLocale","useState","isWarningOpen","setIsWarningOpen","useCoins","coinsList","selectedCoin","showInUSD","coinsPrices","useBlackjackControl","controlState","controlDispatch","USDMode","setUSDMode","isInit","setInit","isUSDCurrent","setIsUSDCurrent","setBetAmount","amount","type","actions","SET_BET_AMOUNT","bet_amount","setBetAmountHandler","useCallback","targetValue","value","replace","Number","isNaN","isFinite","gamePhase","GamePhases","HOLD","coin","config","coinsConfig","find","currency","minimum_bet","bet","bet_amt","price","toFixed","coinOptions","useMemo","map","balance","image","setProportionalAmount","proportional","currentBet","coinConfig","item","Math","min","maximum_bet","length","includes","warningModal","Warning","warning","isOpen","callBack","onClose","currencyBlock","selectWrapper","options","select","onChange","coinsManager","changeSelectedCoin","betButton","formatMessage","id","inputWrapper","onBlur","convertedBalance","clsx","buttonsWrapperDisabled","insuranceWrapper","insuranceWrapperDisabled","insuranceButtonsWrapper","isCheckedUnfinishedSession","Controller","liveStatsIsOpen","liveStatsHandleClose","useLocalStorage","token","useSeed","clientSeed","rotateClientSeed","updateNonce","language","useLocale","betAmount","actualBet","playEffect","useSoundSystemControl","controlFunctions","getSoundEffectNames","gamePathNames","BLACKJACK","cardDealing","loss","pokerDealFiveCards01","pokerDealFiveCards05","pokerDealFiveCards09","pokerDealFiveCards10","win","hitSoundEffectList","useFetch","playFetch","playFetchLoading","loading","hitFetch","hitFetchLoading","standFetch","standFetchLoading","doubleFetch","doubleFetchLoading","splitFetch","splitFetchLoading","acceptInsuranceFetch","acceptInsuranceFetchLoading","rejectInsuranceFetch","rejectInsuranceFetchLoading","start","a","reqParams","locale","client_seed","seed","variables","error","data","notifyBarManager","timeOut","message","success","newCoinValue","SET_ACTUAL_BET","actual_bet","GAME_START","status","isSetManually","liveStatsManager","addBet","profit","coinValueUpdate","hit","round","between","GAME_HIT","split","GAME_SPLIT","stand","GAME_STAND","acceptInsurance","INSURANCE_ACCEPT","rejectInsurance","INSURANCE_REJECT","double","GAME_DOUBLE","useGameSession","setClientSeed","searchSessionFetch","searchSession","session_exists","SET_GAME_SESSION","useLatestGameSession","fetchConfiguration","coins","forEach","push","ceil","toString","maximum_profit","SET_COINS_CONFIG","useGameConfig","LiveStats","handleClose","GameScene","ref","useRef","deck","src","draggable","alt","NOT_START","deckRef","React","memo","BettingInformation","lazy","LazyComponentLoader","BlackjackPage","isSoundOpen","setIsSoundOpen","hotKeysIsOpen","setHotKeyIsOpen","setLiveStatsIsOpen","betInfoIsOpen","setBetInfoIsOpen","SoundModal","HotKeys","blackjack","hrSmall","optionsWrapper","OptionsButton","withSound","soundOnClick","liveStatOnclick","hotKeysOnClick","bettingInformationOnClick","hrBig","statisticsWrapper","game","withFairness","Blackjack","Helmet","name","content","http-equiv","Seed","gameName"],"mappings":"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","file":"static/js/55.3b2ce456.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2yMWD\",\"icon\":\"style_icon__2Bgqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__5gyiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"blackjack\":\"style_blackjack__3gKfX\",\"wrapper\":\"style_wrapper__3nE0a\",\"root\":\"style_root__3NPIq\",\"disabled\":\"style_disabled__2j8Yn\",\"buttonsWrapper\":\"style_buttonsWrapper__2iw06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"blackjack\":\"style_blackjack__2SmFL\",\"root\":\"style_root__3uXtP\",\"currencyBlock\":\"style_currencyBlock__r-2Y8\",\"selectWrapper\":\"style_selectWrapper__38aji\",\"inputWrapper\":\"style_inputWrapper__2VMu8\",\"buttonsWrapper\":\"style_buttonsWrapper__1fMCY\",\"buttonsWrapperDisabled\":\"style_buttonsWrapperDisabled__95zSl\",\"betButton\":\"style_betButton__1S6Be\",\"warning\":\"style_warning__3f730\",\"insuranceWrapper\":\"style_insuranceWrapper__1jVn5\",\"insuranceWrapperDisabled\":\"style_insuranceWrapperDisabled__LYuy8\",\"insuranceButtonsWrapper\":\"style_insuranceButtonsWrapper__3HPoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__3uxk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__2iwkC\",\"deck\":\"style_deck__3Tojc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"page_root__3gdV2\",\"optionsWrapper\":\"page_optionsWrapper__35Ny1\",\"hrSmall\":\"page_hrSmall__O5UKY\",\"hrBig\":\"page_hrBig__2iBLG\",\"statisticsWrapper\":\"page_statisticsWrapper__2ll6k\"};","import { useEffect } from \"react\";\r\nimport { isKeyboardEvent } from \"utils/guards\";\r\nimport { useHotKeys } from \"../Provider\";\r\n\r\nenum ActiveKeys {\r\n  KeyA,\r\n  KeyS,\r\n  Space,\r\n  KeyQ,\r\n  KeyW,\r\n  KeyE,\r\n  KeyR,\r\n  KeyT,\r\n  KeyY,\r\n  KeyD,\r\n}\r\n\r\nexport interface HotKeysCallbacks {\r\n  callbackKeyA?: () => void;\r\n  callbackKeyS?: () => void;\r\n  callbackSpace?: () => void;\r\n  callbackKeyQ?: () => void;\r\n  callbackKeyW?: () => void;\r\n  callbackKeyE?: () => void;\r\n  callbackKeyR?: () => void;\r\n  callbackKeyT?: () => void;\r\n  callbackKeyY?: () => void;\r\n  callbackKeyD?: () => void;\r\n}\r\n\r\nexport const useHotKeyListener = (callbacks: HotKeysCallbacks) => {\r\n  const { isHotkeyActive, isHotKeysPaused } = useHotKeys();\r\n\r\n  useEffect(() => {\r\n    const keyDownListenerIgnore = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    const keyListener = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n        const {\r\n          callbackKeyA,\r\n          callbackKeyS,\r\n          callbackSpace,\r\n          callbackKeyQ,\r\n          callbackKeyW,\r\n          callbackKeyE,\r\n          callbackKeyR,\r\n          callbackKeyT,\r\n          callbackKeyY,\r\n          callbackKeyD,\r\n        } = callbacks;\r\n        switch (key) {\r\n          case \"KeyA\":\r\n            if (callbackKeyA) callbackKeyA();\r\n            break;\r\n          case \"KeyS\":\r\n            if (callbackKeyS) callbackKeyS();\r\n            break;\r\n          case \"Space\":\r\n            if (callbackSpace) callbackSpace();\r\n            break;\r\n          case \"KeyQ\":\r\n            if (callbackKeyQ) callbackKeyQ();\r\n            break;\r\n          case \"KeyW\":\r\n            if (callbackKeyW) callbackKeyW();\r\n            break;\r\n          case \"KeyE\":\r\n            if (callbackKeyE) callbackKeyE();\r\n            break;\r\n          case \"KeyR\":\r\n            if (callbackKeyR) callbackKeyR();\r\n            break;\r\n          case \"KeyT\":\r\n            if (callbackKeyT) callbackKeyT();\r\n            break;\r\n          case \"KeyY\":\r\n            if (callbackKeyY) callbackKeyY();\r\n            break;\r\n          case \"KeyD\":\r\n            if (callbackKeyD) callbackKeyD();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", keyDownListenerIgnore);\r\n    window.addEventListener(\"keyup\", keyListener);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyDownListenerIgnore);\r\n      window.removeEventListener(\"keyup\", keyListener);\r\n    };\r\n  }, [isHotkeyActive, isHotKeysPaused, callbacks]);\r\n};\r\n","import React from \"react\";\r\nimport css from \"./style.module.scss\";\r\nimport { Icon } from \"components\";\r\nimport { IconVariantKeys } from \"components/Icon/config\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  variant?: IconVariantKeys;\r\n  disabled?: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Button = ({ label, variant, onClick, disabled }: Props) => {\r\n  return (\r\n    <button className={css.button} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n      {variant ? <Icon className={css.icon} variant={variant} /> : null}\r\n    </button>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Button } from \"components\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  setRelativeAmount: (proportion: \"double\" | \"half\" | \"max\" | \"min\") => void;\r\n  minBtnText: string;\r\n  maxBtnText: string;\r\n  doubleBtnText: string;\r\n  halfBtnText: string;\r\n  openWarning: () => void;\r\n}\r\n\r\nexport const ButtonGroup: FC<Props> = ({\r\n  setRelativeAmount,\r\n  minBtnText,\r\n  maxBtnText,\r\n  doubleBtnText,\r\n  halfBtnText,\r\n  openWarning,\r\n  children,\r\n}) => {\r\n  return (\r\n    <>\r\n      {children}\r\n      <Button className={css.button} onClick={() => setRelativeAmount(\"min\")}>\r\n        <span>{minBtnText}</span>\r\n      </Button>\r\n      <Button className={css.button} onClick={() => setRelativeAmount(\"half\")}>\r\n        <span>{halfBtnText}</span>\r\n      </Button>\r\n      <Button\r\n        className={css.button}\r\n        onClick={() => setRelativeAmount(\"double\")}>\r\n        <span>{doubleBtnText}</span>\r\n      </Button>\r\n      <Button className={css.button} onClick={openWarning}>\r\n        <span>{maxBtnText}</span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Input as InputBase, InputProps } from \"components\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const Input: FC<InputProps> = ({ children, ...props }) => {\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <InputBase\r\n        {...props}\r\n        classes={{\r\n          root: css.root,\r\n          disabled: css.disabled,\r\n        }}\r\n      />\r\n      <div className={css.buttonsWrapper}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  useMemo,\r\n  useCallback,\r\n  ChangeEventHandler,\r\n  FC,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Button as BetButton, Select } from \"components\";\r\n\r\nimport { useHotKeyListener } from \"components/HotKeys/Listener\";\r\nimport Warning from \"components/Warning\";\r\n\r\nimport { useBlackjackControl, GamePhases, actions } from \"../Reducer\";\r\nimport { Button, Input, ButtonGroup } from \"../\";\r\nimport css from \"./style.module.scss\";\r\nimport { coinsManager, useCoins } from \"hooks\";\r\n\r\ninterface Props {\r\n  betButtonClick: () => void;\r\n  hitButtonClick: () => void;\r\n  splitButtonClick: () => void;\r\n  standButtonClick: () => void;\r\n  doubleButtonClick: () => void;\r\n  insuranceButtonClick: () => void;\r\n  rejectInsuranceButtonClick: () => void;\r\n  isFetch: boolean;\r\n}\r\n\r\nexport const ControlPanel: FC<Props> = ({\r\n  betButtonClick,\r\n  hitButtonClick,\r\n  splitButtonClick,\r\n  standButtonClick,\r\n  doubleButtonClick,\r\n  insuranceButtonClick,\r\n  rejectInsuranceButtonClick,\r\n  isFetch,\r\n}) => {\r\n  const intl = useGetLocale();\r\n  const [isWarningOpen, setIsWarningOpen] = useState(false);\r\n  const { coinsList, selectedCoin, showInUSD, coinsPrices } = useCoins();\r\n  const { controlState, controlDispatch } = useBlackjackControl();\r\n  const [USDMode, setUSDMode] = useState<boolean>(false);\r\n  const [isInit, setInit] = useState(false);\r\n  const [isUSDCurrent, setIsUSDCurrent] = useState(false);\r\n\r\n  const setBetAmount = (amount: string) => {\r\n    controlDispatch({\r\n      type: actions.SET_BET_AMOUNT,\r\n      bet_amount: amount,\r\n    });\r\n  };\r\n\r\n  const setBetAmountHandler = useCallback<ChangeEventHandler<HTMLInputElement>>(\r\n    (event) => {\r\n      const targetValue = event.target.value.replace(\"$\", \"\");\r\n      const amount = Number(targetValue);\r\n      if (isNaN(amount) || !isFinite(amount)) return;\r\n      setBetAmount(targetValue);\r\n    },\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (controlState.gamePhase !== GamePhases.HOLD) {\r\n      setUSDMode(showInUSD && selectedCoin?.coin !== \"GEM\");\r\n    }\r\n  }, [selectedCoin, controlState.gamePhase, showInUSD]);\r\n\r\n  useEffect(() => {\r\n    const config = controlState.coinsConfig.find(\r\n      (currency) => currency.coin === selectedCoin?.coin,\r\n    );\r\n    if (!selectedCoin || !config) {\r\n      return;\r\n    }\r\n    if (!isInit) {\r\n      controlDispatch({\r\n        type: actions.SET_BET_AMOUNT,\r\n        bet_amount: config.minimum_bet,\r\n      });\r\n      setInit(true);\r\n      setIsUSDCurrent(showInUSD);\r\n      return;\r\n    }\r\n\r\n    if (controlState.gamePhase !== GamePhases.HOLD) {\r\n      if (isUSDCurrent === showInUSD) return;\r\n      if (selectedCoin.coin === \"GEM\") {\r\n        setIsUSDCurrent(showInUSD);\r\n        return;\r\n      }\r\n      let bet: string;\r\n      if (showInUSD) {\r\n        bet = (\r\n          Number(controlState.bet_amt) *\r\n          Number(coinsPrices[selectedCoin.coin]?.price)\r\n        ).toFixed(8);\r\n      } else {\r\n        bet = (\r\n          Number(controlState.bet_amt) /\r\n          Number(coinsPrices[selectedCoin.coin]?.price)\r\n        ).toFixed(8);\r\n      }\r\n      controlDispatch({\r\n        type: actions.SET_BET_AMOUNT,\r\n        bet_amount:\r\n          Number(config.minimum_bet) > Number(bet) ? config.minimum_bet : bet,\r\n      });\r\n      setIsUSDCurrent(showInUSD);\r\n    }\r\n  }, [controlState.gamePhase, controlState.coinsConfig]);\r\n\r\n  const coinOptions = useMemo(\r\n    () =>\r\n      coinsList.map((currency) => {\r\n        if (currency.coin === selectedCoin?.coin) {\r\n          let balance = selectedCoin.balance;\r\n          if (showInUSD && selectedCoin.coin !== \"GEM\") {\r\n            balance =\r\n              \"$\" +\r\n              (\r\n                Number(selectedCoin.balance) *\r\n                Number(coinsPrices[selectedCoin.coin]?.price)\r\n              ).toFixed(8);\r\n          }\r\n          return {\r\n            value: currency.coin,\r\n            label: balance,\r\n            icon: currency.image,\r\n          };\r\n        }\r\n        return {\r\n          value: currency.coin,\r\n          label: currency.balance,\r\n          icon: currency.image,\r\n        };\r\n      }),\r\n    [coinsList, selectedCoin, showInUSD, coinsPrices],\r\n  );\r\n\r\n  const setProportionalAmount = (\r\n    proportional: \"quarter\" | \"half\" | \"max\" | \"min\" | \"double\",\r\n  ) => {\r\n    if (controlState.gamePhase === GamePhases.HOLD) return;\r\n    const currentBet = Number(controlState.bet_amt);\r\n    switch (proportional) {\r\n      case \"quarter\":\r\n        return setBetAmount((currentBet / 4).toFixed(8));\r\n      case \"half\":\r\n        return setBetAmount((currentBet / 2).toFixed(8));\r\n      case \"double\":\r\n        return setBetAmount((currentBet * 2).toFixed(8));\r\n      case \"min\": {\r\n        const coinConfig = controlState.coinsConfig.find(\r\n          (item) => item.coin === selectedCoin?.coin,\r\n        );\r\n        return setBetAmount(coinConfig ? coinConfig.minimum_bet : \"0.00000000\");\r\n      }\r\n      case \"max\": {\r\n        const coinConfig = controlState.coinsConfig.find(\r\n          (item) => item.coin === selectedCoin?.coin,\r\n        );\r\n        const coin = coinsList.find((item) => item.coin === selectedCoin?.coin);\r\n        let balance = coin?.balance || 0;\r\n        if (showInUSD && coin && coin.coin !== \"GEM\") {\r\n          balance =\r\n            Number(coin.balance) * Number(coinsPrices[coin.coin]?.price);\r\n        }\r\n        return setBetAmount(\r\n          Math.min(\r\n            Number(coinConfig?.maximum_bet) || 0,\r\n            Number(balance) || 0,\r\n          ).toFixed(8),\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const betAmountOnBlur = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => {\r\n    const convertedBalance =\r\n      showInUSD && selectedCoin && selectedCoin?.coin !== \"GEM\"\r\n        ? Number(selectedCoin?.price) * Number(selectedCoin?.balance)\r\n        : Number(selectedCoin?.balance);\r\n    if (Number(value) > convertedBalance) {\r\n      setProportionalAmount(\"min\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (coinsList.length > 0) setProportionalAmount(\"min\");\r\n  }, [selectedCoin?.coin]);\r\n\r\n  const hotKeyBetHandler = () => {\r\n    if (controlState.gamePhase !== GamePhases.HOLD && !isFetch) {\r\n      betButtonClick();\r\n    }\r\n  };\r\n\r\n  const hotKeyHitHandler = () => {\r\n    if (!isFetch && controlState.actions.includes(\"Hit\")) {\r\n      hitButtonClick();\r\n    }\r\n  };\r\n\r\n  const hotKeyStandHandler = () => {\r\n    if (!isFetch && controlState.actions.includes(\"Stand\")) {\r\n      standButtonClick();\r\n    }\r\n  };\r\n\r\n  const hotKeySplitHandler = () => {\r\n    if (!isFetch && controlState.actions.includes(\"Split\")) {\r\n      splitButtonClick();\r\n    }\r\n  };\r\n\r\n  const hotKeyDoubleHitHandler = () => {\r\n    if (!isFetch && controlState.actions.includes(\"Double\")) {\r\n      doubleButtonClick();\r\n    }\r\n  };\r\n\r\n  const hotKeyAcceptInsuranceHandler = () => {\r\n    if (!isFetch && controlState.actions.includes(\"Insurance\")) {\r\n      insuranceButtonClick();\r\n    }\r\n  };\r\n\r\n  const hotKeyRejectInsuranceHandler = () => {\r\n    if (!isFetch && controlState.actions.includes(\"Insurance\")) {\r\n      rejectInsuranceButtonClick();\r\n    }\r\n  };\r\n\r\n  useHotKeyListener({\r\n    callbackSpace: hotKeyBetHandler,\r\n    callbackKeyQ: hotKeyHitHandler,\r\n    callbackKeyW: hotKeyStandHandler,\r\n    callbackKeyE: hotKeySplitHandler,\r\n    callbackKeyR: hotKeyDoubleHitHandler,\r\n    callbackKeyT: hotKeyAcceptInsuranceHandler,\r\n    callbackKeyY: hotKeyRejectInsuranceHandler,\r\n    callbackKeyA: () => setProportionalAmount(\"half\"),\r\n    callbackKeyS: () => setProportionalAmount(\"double\"),\r\n    callbackKeyD: () => setProportionalAmount(\"min\"),\r\n  });\r\n\r\n  const insuranceReject = () => {\r\n    rejectInsuranceButtonClick();\r\n  };\r\n\r\n  const warningModal = (\r\n    <Warning\r\n      className={css.warning}\r\n      isOpen={isWarningOpen}\r\n      callBack={() => setProportionalAmount(\"max\")}\r\n      onClose={() => setIsWarningOpen(false)}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={css.currencyBlock}>\r\n        <div className={css.selectWrapper}>\r\n          <Select\r\n            options={coinOptions}\r\n            className={css.select}\r\n            value={selectedCoin?.coin ? selectedCoin.coin : \"\"}\r\n            onChange={(value) => {\r\n              if (typeof value !== \"string\") {\r\n                return;\r\n              }\r\n              const coin = coinsList.find(\r\n                (currency) => currency.coin === value,\r\n              );\r\n              if (coin) coinsManager.changeSelectedCoin(coin.coin);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <BetButton\r\n          disabled={controlState.gamePhase === GamePhases.HOLD || isFetch}\r\n          onClick={betButtonClick}\r\n          className={css.betButton}>\r\n          {intl.formatMessage({ id: \"blackjack.buttons.bet\" })}\r\n        </BetButton>\r\n\r\n        <div className={css.inputWrapper}>\r\n          <Input\r\n            label={intl.formatMessage({ id: \"blackjack.labels.amount\" })}\r\n            value={USDMode ? `$${controlState.bet_amt}` : controlState.bet_amt}\r\n            onChange={setBetAmountHandler}\r\n            onBlur={betAmountOnBlur}>\r\n            <ButtonGroup\r\n              setRelativeAmount={setProportionalAmount}\r\n              minBtnText={intl.formatMessage({ id: \"blackjack.labels.min\" })}\r\n              maxBtnText={intl.formatMessage({ id: \"blackjack.labels.max\" })}\r\n              halfBtnText={intl.formatMessage({ id: \"blackjack.labels.half\" })}\r\n              doubleBtnText={intl.formatMessage({\r\n                id: \"blackjack.labels.double\",\r\n              })}\r\n              openWarning={() => setIsWarningOpen(true)}>\r\n              {warningModal}\r\n            </ButtonGroup>\r\n          </Input>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={clsx(css.buttonsWrapper, {\r\n          [css.buttonsWrapperDisabled]:\r\n            controlState.actions.includes(\"Insurance\"),\r\n        })}>\r\n        <Button\r\n          label={intl.formatMessage({ id: \"blackjack.buttons.hit\" })}\r\n          variant=\"hit\"\r\n          disabled={isFetch || !controlState.actions.includes(\"Hit\")}\r\n          onClick={hitButtonClick}\r\n        />\r\n        <Button\r\n          label={intl.formatMessage({ id: \"blackjack.buttons.stand\" })}\r\n          variant=\"stand\"\r\n          disabled={isFetch || !controlState.actions.includes(\"Stand\")}\r\n          onClick={standButtonClick}\r\n        />\r\n        <Button\r\n          label={intl.formatMessage({ id: \"blackjack.buttons.split\" })}\r\n          variant=\"split\"\r\n          disabled={isFetch || !controlState.actions.includes(\"Split\")}\r\n          onClick={splitButtonClick}\r\n        />\r\n        <Button\r\n          label={intl.formatMessage({ id: \"blackjack.buttons.double\" })}\r\n          variant=\"double\"\r\n          disabled={isFetch || !controlState.actions.includes(\"Double\")}\r\n          onClick={doubleButtonClick}\r\n        />\r\n      </div>\r\n      <div\r\n        className={clsx(css.insuranceWrapper, {\r\n          [css.insuranceWrapperDisabled]:\r\n            !controlState.actions.includes(\"Insurance\"),\r\n        })}>\r\n        <span>\r\n          {intl.formatMessage({ id: \"blackjack.labels.insurance_question\" })}\r\n        </span>\r\n        <div className={css.insuranceButtonsWrapper}>\r\n          <Button\r\n            label={intl.formatMessage({ id: \"blackjack.buttons.insurance\" })}\r\n            disabled={isFetch}\r\n            onClick={insuranceButtonClick}\r\n          />\r\n          <Button\r\n            label={intl.formatMessage({ id: \"blackjack.buttons.no\" })}\r\n            disabled={isFetch}\r\n            onClick={insuranceReject}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useCallback, Dispatch } from \"react\";\r\n\r\nimport { coinsManager, useCoins, useFetch, useLocalStorage } from \"hooks\";\r\nimport { useLocale, useSeed } from \"providers\";\r\n\r\nimport {\r\n  BlackjackControlActions,\r\n  actions,\r\n  GameSessionsData,\r\n} from \"../components/Reducer\";\r\n\r\ninterface SearchSessionResponse extends GameSessionsData {\r\n  message: string;\r\n  session_exists: boolean;\r\n  coin: string;\r\n  client_seed: string;\r\n  success: boolean;\r\n}\r\n\r\nlet isCheckedUnfinishedSession = false;\r\n\r\nexport const useLatestGameSession = (\r\n  controlDispatch: Dispatch<BlackjackControlActions>,\r\n) => {\r\n  const [token] = useLocalStorage(\"token\");\r\n  const { locale } = useLocale();\r\n  const { setClientSeed } = useSeed();\r\n  const { coinsList } = useCoins();\r\n\r\n  const [searchSessionFetch] =\r\n    useFetch<SearchSessionResponse>(\"blackjack/session\");\r\n\r\n  const searchSession = async () => {\r\n    if (\r\n      !locale ||\r\n      !token ||\r\n      isCheckedUnfinishedSession ||\r\n      coinsList.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n    isCheckedUnfinishedSession = true;\r\n\r\n    const reqParams = {\r\n      token: token,\r\n      language: locale,\r\n    };\r\n\r\n    const { data } = await searchSessionFetch({ variables: reqParams });\r\n    if (data?.success && data?.session_exists) {\r\n      setClientSeed({\r\n        seed: data.client_seed,\r\n        isSetManually: false,\r\n      });\r\n      controlDispatch({\r\n        type: actions.SET_GAME_SESSION,\r\n        data: data,\r\n        seed: data.client_seed,\r\n      });\r\n      const coin = coinsList.find((currency) => currency.coin === data.coin);\r\n      if (coin) coinsManager.changeSelectedCoin(coin.coin);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchSession();\r\n  }, [token, coinsList]);\r\n};\r\n","import React, { FC } from \"react\";\r\nimport LiveStats from \"components/LiveStats\";\r\n\r\nimport { ControlPanel } from \"./components\";\r\nimport { useBlackjackControl } from \"./components/Reducer\";\r\nimport { useGameSession, useGameConfig, useLatestGameSession } from \"./hooks\";\r\nimport css from \"./style.module.scss\";\r\ninterface Props {\r\n  liveStatsIsOpen: boolean;\r\n  liveStatsHandleClose: () => void;\r\n}\r\n\r\nconst Controller: FC<Props> = ({ liveStatsIsOpen, liveStatsHandleClose }) => {\r\n  const { controlState, controlDispatch } = useBlackjackControl();\r\n\r\n  const {\r\n    start,\r\n    hit,\r\n    split,\r\n    stand,\r\n    double,\r\n    acceptInsurance,\r\n    rejectInsurance,\r\n    isFetch,\r\n  } = useGameSession(controlState, controlDispatch);\r\n  useLatestGameSession(controlDispatch);\r\n  useGameConfig(controlDispatch);\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <LiveStats isOpen={liveStatsIsOpen} handleClose={liveStatsHandleClose} />\r\n      <ControlPanel\r\n        betButtonClick={start}\r\n        hitButtonClick={hit}\r\n        splitButtonClick={split}\r\n        standButtonClick={stand}\r\n        doubleButtonClick={double}\r\n        insuranceButtonClick={acceptInsurance}\r\n        rejectInsuranceButtonClick={rejectInsurance}\r\n        isFetch={isFetch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { BlackjackControlProvider } from \"./components/Reducer\";\r\nexport default Controller;\r\n","import { Dispatch } from \"react\";\r\n\r\nimport { between } from \"utils\";\r\nimport { coinsManager, useCoins, useFetch, useLocalStorage } from \"hooks\";\r\nimport { useSeed, useLocale } from \"providers\";\r\nimport { notifyBarManager } from \"components\";\r\nimport {\r\n  BlackjackControlActions,\r\n  BlackjackControlState,\r\n  actions,\r\n  GameActionData,\r\n} from \"../components/Reducer\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport { liveStatsManager } from \"components/LiveStats/eventEmitter/emitter\";\r\n\r\ninterface ActionFetchResponse extends GameActionData {\r\n  message: string;\r\n  success: boolean;\r\n  win: number;\r\n  payout: number;\r\n  coin: string;\r\n  balance: string;\r\n  profit: number;\r\n}\r\n\r\ninterface SplitFetchResponse extends GameActionData {\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\nexport const useGameSession = (\r\n  controlState: BlackjackControlState,\r\n  controlDispatch: Dispatch<BlackjackControlActions>,\r\n) => {\r\n  const [token] = useLocalStorage(\"token\");\r\n  const { clientSeed, rotateClientSeed, updateNonce } = useSeed();\r\n  const { selectedCoin, showInUSD } = useCoins();\r\n  const language = useLocale();\r\n\r\n  const { bet_amt: betAmount, actualBet } = controlState;\r\n\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const {\r\n    cardDealing,\r\n    loss,\r\n    pokerDealFiveCards01,\r\n    pokerDealFiveCards05,\r\n    pokerDealFiveCards09,\r\n    pokerDealFiveCards10,\r\n    win,\r\n  } = getSoundEffectNames(gamePathNames.BLACKJACK);\r\n  const hitSoundEffectList = [\r\n    pokerDealFiveCards01,\r\n    pokerDealFiveCards05,\r\n    pokerDealFiveCards09,\r\n    pokerDealFiveCards10,\r\n  ];\r\n  const [playFetch, { loading: playFetchLoading }] =\r\n    useFetch<ActionFetchResponse>(\"blackjack/play\");\r\n  const [hitFetch, { loading: hitFetchLoading }] =\r\n    useFetch<ActionFetchResponse>(\"blackjack/hit\");\r\n  const [standFetch, { loading: standFetchLoading }] =\r\n    useFetch<ActionFetchResponse>(\"blackjack/stand\");\r\n  const [doubleFetch, { loading: doubleFetchLoading }] =\r\n    useFetch<ActionFetchResponse>(\"blackjack/double\");\r\n  const [splitFetch, { loading: splitFetchLoading }] =\r\n    useFetch<SplitFetchResponse>(\"blackjack/split\");\r\n  const [acceptInsuranceFetch, { loading: acceptInsuranceFetchLoading }] =\r\n    useFetch<ActionFetchResponse>(\"blackjack/insurance\");\r\n  const [rejectInsuranceFetch, { loading: rejectInsuranceFetchLoading }] =\r\n    useFetch<ActionFetchResponse>(\"blackjack/no-insurance\");\r\n\r\n  const start = async () => {\r\n    if (!clientSeed || !selectedCoin) return;\r\n    let bet_amt = betAmount;\r\n    if (showInUSD && selectedCoin.coin !== \"GEM\") {\r\n      bet_amt = (Number(betAmount) / Number(selectedCoin?.price)).toFixed(8);\r\n    }\r\n    const reqParams = {\r\n      language: language.locale,\r\n      bet_amt: bet_amt,\r\n      coin: selectedCoin.coin,\r\n      token: token,\r\n      client_seed: clientSeed?.seed,\r\n    };\r\n    const { error, data } = await playFetch({ variables: reqParams });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    playEffect(cardDealing);\r\n    const newCoinValue = data.balance;\r\n\r\n    controlDispatch({\r\n      type: actions.SET_ACTUAL_BET,\r\n      actual_bet: betAmount,\r\n    });\r\n    controlDispatch({\r\n      type: actions.GAME_START,\r\n      data: data,\r\n      seed: clientSeed?.seed || \"\",\r\n    });\r\n\r\n    if (data.status === \"win\" || data.status === \"loss\") {\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n\r\n      liveStatsManager.addBet({\r\n        profit: Number(data.profit),\r\n        amount: Number(actualBet),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n    coinsManager.coinValueUpdate(newCoinValue, selectedCoin.coin);\r\n  };\r\n\r\n  const hit = async () => {\r\n    const { error, data } = await hitFetch({\r\n      variables: {\r\n        token: token,\r\n        language: language.locale,\r\n      },\r\n    });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    playEffect(\r\n      hitSoundEffectList[Math.round(between(0, hitSoundEffectList.length - 1))],\r\n    );\r\n    controlDispatch({\r\n      type: actions.GAME_HIT,\r\n      data: data,\r\n    });\r\n    if (data.status === \"win\" || data.status === \"loss\") {\r\n      data.status === \"win\" ? playEffect(win) : playEffect(loss);\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n      liveStatsManager.addBet({\r\n        profit: Number(data.profit),\r\n        amount: Number(actualBet),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n    if (data.balance) {\r\n      coinsManager.coinValueUpdate(data.balance, data.coin);\r\n    }\r\n  };\r\n\r\n  const split = async () => {\r\n    const { error, data } = await splitFetch({\r\n      variables: {\r\n        token: token,\r\n        language: language.locale,\r\n      },\r\n    });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    controlDispatch({\r\n      type: actions.GAME_SPLIT,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const stand = async () => {\r\n    const { error, data } = await standFetch({\r\n      variables: {\r\n        token: token,\r\n        language: language.locale,\r\n      },\r\n    });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    controlDispatch({\r\n      type: actions.GAME_STAND,\r\n      data: data,\r\n    });\r\n    if (data.status === \"win\" || data.status === \"loss\") {\r\n      data.status === \"win\" ? playEffect(win) : playEffect(loss);\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n      liveStatsManager.addBet({\r\n        profit: Number(data.profit),\r\n        amount: Number(actualBet),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n    if (data.balance) {\r\n      coinsManager.coinValueUpdate(data.balance, data.coin);\r\n    }\r\n  };\r\n\r\n  const acceptInsurance = async () => {\r\n    const { error, data } = await acceptInsuranceFetch({\r\n      variables: {\r\n        token: token,\r\n        language: language.locale,\r\n      },\r\n    });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    controlDispatch({\r\n      type: actions.INSURANCE_ACCEPT,\r\n      data: data,\r\n    });\r\n    if (data.status === \"win\" || data.status === \"loss\") {\r\n      data.status === \"win\" ? playEffect(win) : playEffect(loss);\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n      liveStatsManager.addBet({\r\n        profit: Number(data.profit),\r\n        amount: Number(actualBet),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n    if (data.balance) {\r\n      coinsManager.coinValueUpdate(data.balance, data.coin);\r\n    }\r\n  };\r\n\r\n  const rejectInsurance = async () => {\r\n    const { error, data } = await rejectInsuranceFetch({\r\n      variables: {\r\n        token: token,\r\n        language: language.locale,\r\n      },\r\n    });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    controlDispatch({\r\n      type: actions.INSURANCE_REJECT,\r\n      data: data,\r\n    });\r\n    if (data.status === \"win\" || data.status === \"loss\") {\r\n      data.status === \"win\" ? playEffect(win) : playEffect(loss);\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n      liveStatsManager.addBet({\r\n        profit: Number(data.profit),\r\n        amount: Number(actualBet),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n    if (data.balance) {\r\n      coinsManager.coinValueUpdate(data.balance, data.coin);\r\n    }\r\n  };\r\n\r\n  const double = async () => {\r\n    const reqParams = {\r\n      token: token,\r\n      language: language.locale,\r\n    };\r\n    const { error, data } = await doubleFetch({ variables: reqParams });\r\n    if (error) {\r\n      notifyBarManager.error({\r\n        timeOut: 4000,\r\n        message: error,\r\n      });\r\n    }\r\n    if (!data?.success) return;\r\n    controlDispatch({\r\n      type: actions.GAME_DOUBLE,\r\n      data: data,\r\n    });\r\n    if (data.status === \"win\" || data.status === \"loss\") {\r\n      data.status === \"win\" ? playEffect(win) : playEffect(loss);\r\n      if (clientSeed && !clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n      liveStatsManager.addBet({\r\n        profit: Number(data.profit),\r\n        amount: Number(actualBet),\r\n        coin: data.coin,\r\n      });\r\n    }\r\n    if (data.balance) {\r\n      coinsManager.coinValueUpdate(data.balance, data.coin);\r\n    }\r\n  };\r\n\r\n  return {\r\n    start,\r\n    hit,\r\n    split,\r\n    stand,\r\n    double,\r\n    acceptInsurance,\r\n    rejectInsurance,\r\n    isFetch:\r\n      playFetchLoading ||\r\n      hitFetchLoading ||\r\n      splitFetchLoading ||\r\n      standFetchLoading ||\r\n      doubleFetchLoading ||\r\n      acceptInsuranceFetchLoading ||\r\n      rejectInsuranceFetchLoading,\r\n  };\r\n};\r\n","import { useEffect, Dispatch } from \"react\";\r\n\r\nimport { useCoins, useFetch } from \"hooks\";\r\n\r\nimport {\r\n  BlackjackControlActions,\r\n  CoinConfig,\r\n  actions,\r\n} from \"../components/Reducer\";\r\n\r\ninterface ConfigurationFetch {\r\n  coins: CoinConfig[];\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\nconst calculateMinCeil = (value: string, price: string) => {\r\n  return (+(\r\n    Math.ceil(Number(value) * Number(price) * 100000000) / 100000000\r\n  )).toFixed(8);\r\n};\r\n\r\nexport const useGameConfig = (\r\n  controlDispatch: Dispatch<BlackjackControlActions>,\r\n) => {\r\n  const [fetchConfiguration, { data }] = useFetch<ConfigurationFetch>(\r\n    \"blackjack/get-configuration\",\r\n  );\r\n  const { showInUSD, coinsPrices } = useCoins([\"showInUSD\", \"coinsPrices\"]);\r\n\r\n  useEffect(() => {\r\n    fetchConfiguration();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data?.success) {\r\n      let coins = data.coins;\r\n      if (showInUSD) {\r\n        coins = [];\r\n        data.coins.forEach((item) => {\r\n          if (item.coin !== \"GEM\") {\r\n            coins.push({\r\n              coin: item.coin,\r\n              minimum_bet: calculateMinCeil(\r\n                item.minimum_bet,\r\n                coinsPrices[item.coin]?.price,\r\n              ),\r\n              maximum_bet: (\r\n                Number(item.maximum_bet) * Number(coinsPrices[item.coin]?.price)\r\n              ).toString(),\r\n              maximum_profit: (\r\n                Number(item.maximum_profit) *\r\n                Number(coinsPrices[item.coin]?.price)\r\n              ).toString(),\r\n            });\r\n          } else {\r\n            coins.push(item);\r\n          }\r\n        });\r\n      }\r\n      controlDispatch({\r\n        type: actions.SET_COINS_CONFIG,\r\n        config: coins,\r\n      });\r\n    }\r\n  }, [data, showInUSD, coinsPrices]);\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport css from \"./style.module.scss\";\r\nimport { Game, SplashScreen } from \"./components\";\r\nimport deck from \"assets/blackjack/deck.png\";\r\nimport {\r\n  useBlackjackControl,\r\n  GamePhases,\r\n} from \"../Controller/components/Reducer\";\r\n\r\nexport interface DeckPos {\r\n  Y: number;\r\n  X: number;\r\n}\r\n\r\nconst initDeckPos: DeckPos = {\r\n  Y: 0,\r\n  X: 0,\r\n};\r\n\r\nconst GameScene = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const { controlState } = useBlackjackControl();\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={css.deck} ref={ref}>\r\n        <img src={deck} draggable={false} alt=\"deck\" />\r\n      </div>\r\n      {controlState.gamePhase === GamePhases.NOT_START ? (\r\n        <SplashScreen />\r\n      ) : (\r\n        <Game deckRef={ref} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(GameScene);\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Statistics } from \"components\";\r\nimport { useLocalStorage } from \"hooks\";\r\n\r\nimport OptionsButton from \"components/OptionsButton\";\r\nimport { HotKeysModal } from \"components/HotKeys\";\r\nimport LazyComponentLoader from \"config/LazyComponentLoader\";\r\n\r\nimport Controller, { BlackjackControlProvider } from \"./Controller\";\r\nimport GameScene from \"./GameScene\";\r\nimport css from \"./page.module.scss\";\r\nimport { SoundModals } from \"components/SoundModal\";\r\n\r\nconst BettingInformation = React.lazy(() =>\r\n  LazyComponentLoader(import(\"pages/ModalPages/pages/BettingInformation\")),\r\n);\r\n\r\nconst BlackjackPage = () => {\r\n  const [isSoundOpen, setIsSoundOpen] = useState(false);\r\n  const [hotKeysIsOpen, setHotKeyIsOpen] = useState(false);\r\n  const [liveStatsIsOpen, setLiveStatsIsOpen] = useState(false);\r\n  const [betInfoIsOpen, setBetInfoIsOpen] = useState(false);\r\n  const handleSoundClose = () => {\r\n    setIsSoundOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <BlackjackControlProvider>\r\n        <SoundModals isOpen={isSoundOpen} onClose={handleSoundClose} />\r\n        <HotKeysModal\r\n          isOpen={hotKeysIsOpen}\r\n          onClose={() => setHotKeyIsOpen(false)}\r\n          blackjack\r\n        />\r\n        <GameScene />\r\n        <div className={css.hrSmall} />\r\n        <div className={css.optionsWrapper}>\r\n          <OptionsButton\r\n            withSound\r\n            soundOnClick={() => setIsSoundOpen(!isSoundOpen)}\r\n            liveStatOnclick={() => setLiveStatsIsOpen(true)}\r\n            hotKeysOnClick={() => setHotKeyIsOpen(true)}\r\n            bettingInformationOnClick={() => setBetInfoIsOpen(true)}\r\n          />\r\n        </div>\r\n        <div className={css.hrBig} />\r\n        <Controller\r\n          liveStatsHandleClose={() => setLiveStatsIsOpen(false)}\r\n          liveStatsIsOpen={liveStatsIsOpen}\r\n        />\r\n      </BlackjackControlProvider>\r\n      <div className={css.statisticsWrapper}>\r\n        <BettingInformation\r\n          game=\"blackjack\"\r\n          isOpen={betInfoIsOpen}\r\n          onClose={() => setBetInfoIsOpen(false)}\r\n        />\r\n        <Statistics withFairness />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlackjackPage;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport \"config/themes/_blackjack.scss\";\r\nimport SeedProvider from \"providers/Seed\";\r\nimport BlackjackPage from \"./page\";\r\n\r\nconst Blackjack = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>BlackJack | Crypto Gambling Casino</title>\r\n        <meta name=\"title\" content=\"Play Bitcoin BlackJack - Pasino.com\" />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Do you love card games? BlackJack 21 is the right game for you. Play BlackJack on pasino with Bitcoin and many other cryptocurrencies.\"\r\n        />\r\n        <meta name=\"keywords\" content=\"Play BlackJack, Bitcoin BlackJack, \" />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        <meta name=\"language\" content=\"English\" />\r\n      </Helmet>\r\n      <SeedProvider gameName=\"blackjack\">\r\n        <BlackjackPage />\r\n      </SeedProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blackjack;\r\n"],"sourceRoot":""}