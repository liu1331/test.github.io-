{"version":3,"sources":["pages/Roulette/components/ControlPanel/components/Control/components/Bet/style.module.scss","pages/Roulette/components/RoulettePanel/components/Cell/style.module.scss","pages/Roulette/components/RoulettePanel/components/ButtonsPanel/style.module.scss","pages/Roulette/components/RoulettePanel/components/History/animation/SmallCellAnimation/style.module.scss","pages/Roulette/components/RoulettePanel/components/History/animation/BigCellAnimation/style.module.scss","pages/Roulette/components/RoulettePanel/components/History/style.module.scss","pages/Roulette/components/RoulettePanel/style.module.scss","pages/Roulette/components/ControlPanel/components/Options/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Manual/components/ChipInput/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Manual/components/BetInput/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Manual/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Operations/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Limits/NumberOfBets/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Limits/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Limits/StopOn/style.module.scss","pages/Roulette/components/ControlPanel/components/Control/components/Input/style.module.scss","games/Roulette/style.module.scss","pages/Roulette/components/RouletteGamePanel/style.module.scss","pages/Roulette/page.module.scss","components/HotKeys/Listener/index.ts","pages/Roulette/components/Reducer/index.ts","pages/Roulette/components/Reducer/reducer/config.ts","assets/icons/navigate-before.svg","pages/Roulette/components/RoulettePanel/components/Cell/index.tsx","utils/abrNum.ts","pages/Roulette/components/RoulettePanel/components/ButtonsPanel/index.tsx","pages/Roulette/components/RoulettePanel/components/CellsPanel/index.tsx","pages/Roulette/components/RoulettePanel/components/History/animation/SmallCellAnimation/index.tsx","pages/Roulette/components/RoulettePanel/components/History/animation/BigCellAnimation/index.tsx","pages/Roulette/components/RoulettePanel/components/History/index.tsx","pages/Roulette/components/RoulettePanel/components/Chip/index.tsx","pages/Roulette/components/Reducer/reducer/state.ts","pages/Roulette/components/Reducer/reducer/extentions/isChipBetDisable.ts","pages/Roulette/components/Reducer/reducer/extentions/chipPriceCalculate.ts","pages/Roulette/components/Reducer/reducer/reducer.ts","pages/Roulette/components/Reducer/reducer/extentions/changeBet.ts","pages/Roulette/components/Reducer/reducer/extentions/findMinChipValue.ts","pages/Roulette/components/Reducer/Provider.tsx","pages/Roulette/components/Reducer/reducer/extentions/getSelectedCoinLimits.ts","pages/Roulette/components/ControlPanel/components/Control/components/Bet/createBetTable.ts","pages/Roulette/components/ControlPanel/components/Control/components/Bet/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Bet/useButtonText.ts","pages/Roulette/components/Reducer/reducer/extentions/autoMode/index.ts","pages/Roulette/components/Reducer/Context.tsx","pages/Roulette/components/Reducer/reducer/extentions/autoMode/baseBetValues.ts","pages/Roulette/components/Reducer/reducer/extentions/autoMode/changeBetValue.ts","pages/Roulette/components/Reducer/reducer/extentions/calculateTotalAmount.ts","pages/Roulette/components/RoulettePanel/components/CellsPanel/style.module.scss","games/Roulette/game/style.module.scss","pages/Roulette/components/RoulettePanel/index.tsx","pages/Roulette/components/ControlPanel/components/Options/Modals/index.tsx","pages/Roulette/components/ControlPanel/components/Options/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Manual/components/ChipInput/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Manual/components/BetInput/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Manual/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Operations/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Limits/NumberOfBets/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Limits/StopOn/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Auto/components/Limits/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Auto/index.tsx","pages/Roulette/components/ControlPanel/components/Control/components/Input/index.tsx","pages/Roulette/components/ControlPanel/components/Control/index.tsx","pages/Roulette/components/ControlPanel/index.tsx","games/Roulette/game/modules/entities/Roulette.ts","games/Roulette/game/Main.ts","games/Roulette/game/data/config.ts","games/Roulette/game/render.tsx","games/Roulette/index.tsx","pages/Roulette/components/RouletteGamePanel/index.tsx","pages/Roulette/page.tsx","pages/Roulette/components/Reducer/reducer/extentions/autoMode/calculateTotalAmount.ts","pages/Roulette/components/Reducer/reducer/extentions/autoMode/playAuto.ts"],"names":["module","exports","ActiveKeys","useHotKeyListener","callbacks","useHotKeys","isHotkeyActive","isHotKeysPaused","useEffect","keyDownListenerIgnore","event","isKeyboardEvent","target","tagName","toLowerCase","code","preventDefault","keyListener","key","callbackKeyA","callbackKeyS","callbackSpace","callbackKeyQ","callbackKeyW","callbackKeyE","callbackKeyR","callbackKeyT","callbackKeyY","callbackKeyD","window","addEventListener","removeEventListener","useRouletteControl","useContext","Context","rouletteEndAnimationMethods","roulettePlayAnimations","setStopAnimation","setStartAnimation","setFinishAnimation","value","seriesValues","pricesAmount","amountToPrice","1","10","100","1000","10000","100000","1000000","10000000","100000000","1000000000","10000000000","100000000000","1000000000000","multiplyCoefficientValue","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","d","SvgNavigateBefore","_ref","svgRef","title","titleId","props","focusable","width","height","viewBox","ref","id","ForwardRef","getPulledValue","incomeNumber","afterDot","number","decPlaces","Math","pow","abbrev","usedLetter","size","round","Number","toFixed","letter","abbrNum","returnValue","floor","name","padEnd","String","replaceNumbers","getColor","isWhiteTheme","color","Cell","text","isWin","hover","pulled","rotated","disabled","className","pulledValue","isWhiteThemeActive","useWhiteTheme","state","clsx","css","root","winCell","autoPanel","isStarted","price","chip","ControlPanel","isColored","onHover","seriesTypes","dispatch","playEffect","useSoundSystemControl","controlFunctions","chipPlacementLowPitch","getSoundEffectNames","gamePathNames","ROULETTE","chipPull","useCallback","type","pullSeries","series","takePull","takeSeries","getIsPulled","cellPanel","betAmount","controlPanel","cells","top","cellCenter","cellUnit","onMouseOver","onMouseLeave","blur","onClick","onContextMenu","left","cellLeft","right","cellRight","ButtonsPanel","fromTo","start","end","isBlur","push","cellNumber","evenOdd","isOdd","filter","cell","colored","isRed","entries","map","onHoverList","leftPanel","centerPanel","rightPanel","CellsPanel","rootWidth","setIsDesktop","isDesktop","panelRef","useRef","chipPlacementHighPitch","current","offsetHeight","hoverRow","rowNumber","pullNumber","takeNumber","style","transform","offsetWidth","opacity","rootPanel","betPanel","winNumber","zeroCell","isHovered","Fragment","rowCell","SmallCellAnimation","rootAnm","animation","BigCellAnimation","prev","next","setIsAnimation","bigCell","oldAnimation","newAnimation","mobileCell","onAnimationEnd","History","isRouletteHidden","useState","history","setHistory","actualValue","setActualValue","useWindowSize","isAnimation","isRouletteAnimationPlay","reversed","slice","playLittleCellsAnimation","historyPosition","abs","rouletteCellCss","rouletteCellSize","marginLeft","leftSide","rouletteMobileSwipeWidth","calcMobilePosition","mobilePosition","bigCellWrapper","smallCellWrapper","smallCell","disable","v","colors","Chip","x","y","textAnchor","fontSize","createCell","noFirst","result","initialRouletteState","totalAmount","chipPrice","selectedChip","lastProfitValue","limits","limitsList","0","reduce","controlState","isOpen","values","onWin","betPercent","variant","onLoss","expected","numberOfBets","stopOnLoss","stopOnProfit","real","profit","isChipBetDisable","chipValue","maxBet","balance","totalBetAmount","isAuto","min","chipPriceCalculate","rouletteReducer","action","stopAuto","clearRouletteAutoModeTimeouts","forEach","actualCoinLimit","maximum_bet","coinsManager","selectedCoin","isDisable","calculateWithMultiplier","takePullNumberCell","takePullSeriesCell","changeCellValue","clearBet","changeBetValue","defaultChip","minimum","index","amount","findMinChipValue","limit","minimum_bet","noStats","coin","liveStatsManager","addBet","operation","expectedValue","RouletteControl","children","useReducer","useCoins","a","fetchBase","data","coins","getCoinsConfiguration","actualCoin","find","clearSetInfoAboutWin","clearTimeout","Provider","createBetTable","cellTable","acm","bet_amt","calcNumbers","panelTable","calcPanel","createTimeouts","clearTimeouts","pushTimeout","isNoStats","Bet","intl","useGetLocale","useSeed","rotateClientSeed","updateNonce","clientSeed","buttonText","useMemo","formatMessage","useButtonText","ballSpinLong","winning","loss","win","handleSetIsAuto","play","betTable","variables","bet_table","client_seed","seed","error","notifyBarManager","message","timeOut","undefined","success","outcome","coinValueUpdate","isSetManually","bet","localStorage","getItem","setRouletteBaseBet","JSON","stringify","rouletteAutoMode","startRouletteAutoMode","isChecked","off","on","switchHandleChange","classes","switch","toggle","switchToggle","track","switchTrack","button","defaultValue","React","createContext","rouletteBaseBet","percent","percentValue","calculateListAmount","list","setValue","setCellAmount","difference","calculatedAmount","calculateCellAmount","totalBet","chipCellsAmount","calculateTotalAmount","cellAmount","panelAmount","ceil","firstValue","secondValue","first","second","NaN","RoulettePanel","isLoaded","useDocumentLoaded","setRootWidth","cellRootRef","setWidth","node","useLayoutEffect","BettingInformation","lazy","LazyComponentLoader","Modals","setState","SoundModal","sound","onClose","LiveStats","handleClose","liveStats","HotKeys","hotKeys","game","betInfo","Options","optionsState","setOptionsState","numberShuffle","reloadButton","Icon","ReloadIcon","OptionsButton","withSound","soundOnClick","liveStatOnclick","hotKeysOnClick","bettingInformationOnClick","line","prices","ChipInput","chipBoxRef","blocked","setBlocked","scroll","direction","box","scrollValue","chipSize","scrollLeft","maxLeftScroll","scrollWidth","scrollTo","behavior","scrollToLeft","buttonDisable","arrow","chipBox","chipSelected","chipDisable","rightArrow","BetInput","divideBet","multiplyBet","Buttons","buttons","Button","leftButton","rightButton","startAdornment","position","coinImg","input","errorCoin","placeholder","endAdornment","Manual","isLoad","rootRef","rootGridStyle","gridTemplateColumns","Operations","changeOnOption","handleChangeOnWin","handleChangeOnLoss","onChange","Input","RouletteInput","NumberOfBets","handleChange","StopOn","handleOnChange","handleOnBlur","onBlur","label","inputRoot","Limits","Auto","InputBase","Control","angles","Roulette","scene","ball","layer","circlePath","circleFollower","finishPath","finishTween","finishFollower","rouletteCellNumber","animationStepState","finish","default","isReady","t","vec","Phaser","Vector2","add","container","rouletteBoxSize","circle","ballSize","setOrigin","radius","Curves","Path","Ellipse","tweens","targets","ease","duration","repeat","dots","lineTo","onComplete","f","positions","getPoint","checkPositionX","checkPositionY","restart","setPosition","path","pathGraphics","graphics","lineStyle","draw","calcAngle","calcActiveAngle","angle","anglePosition","setAngle","Main","config","entities","fpsDomObject","roulette","document","querySelector","fps","loop","actualFps","innerHTML","createCirclePath","createFinishPath","checkPath","setFinishValue","showFps","Scene","AUTO","parent","dom","createContainer","audio","disableWebAudio","disableContextMenu","transparent","Game","memo","crashGame","gameConfig","destroy","rouletteRoot","src","alt","img","RouletteGame","mobile","arm","RouletteGamePanel","swapRef","mobileGamePosition","rouletteGameBlockPadding","RoulettePage","item","gameBlock","gameCell","gameFooter","statisticsWrapper","withFairness","response","activeOperation","parse"],"mappings":"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","file":"static/js/3.44adb454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__354xH\",\"button\":\"style_button__fsBLN\",\"switch\":\"style_switch__dtHKm\",\"switchTrack\":\"style_switchTrack__3A9av\",\"switchToggle\":\"style_switchToggle__2QNZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellPanelMargin\":\"20\",\"rouletteCellGap\":\"5\",\"rouletteCellSize\":\"50\",\"root\":\"style_root__14w0U\",\"red\":\"style_red__3JHPt\",\"black\":\"style_black__1hp_-\",\"lightBlack\":\"style_lightBlack__3_XvL\",\"transparent\":\"style_transparent__27qQ0\",\"green\":\"style_green__3-PeW\",\"hover_red\":\"style_hover_red__eRu56\",\"hover_black\":\"style_hover_black__J8gq1\",\"hover_lightBlack\":\"style_hover_lightBlack__UDL3H\",\"hover_green\":\"style_hover_green__2H3Pd\",\"hover_transparent\":\"style_hover_transparent__2EZC0\",\"winCell\":\"style_winCell__20zYX\",\"text\":\"style_text__21ddH\",\"rotated\":\"style_rotated__2udUP\",\"disabled\":\"style_disabled__2qEC6\",\"chip\":\"style_chip__1-CCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"cellPanelMargin\":\"20\",\"rouletteCellGap\":\"5\",\"rouletteCellSize\":\"50\",\"root\":\"style_root__2ywmt\",\"cells\":\"style_cells__2YgLx\",\"cellUnit\":\"style_cellUnit__1IJrB\",\"cellCenter\":\"style_cellCenter__1kN_1\",\"cellLeft\":\"style_cellLeft__1rj7t\",\"cellRight\":\"style_cellRight__25_Qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellPanelMargin\":\"20\",\"rouletteCellGap\":\"5\",\"rouletteCellSize\":\"50\",\"rootAnm\":\"style_rootAnm__Fu9aw\",\"cell\":\"style_cell__2cS1o\",\"animation\":\"style_animation__2flsd\",\"move\":\"style_move__3Z1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellPanelMargin\":\"20\",\"rouletteCellGap\":\"5\",\"rouletteCellSize\":\"50\",\"root\":\"style_root__7LfjA\",\"bigCell\":\"style_bigCell__Zotst\",\"oldAnimation\":\"style_oldAnimation__36e9A\",\"old\":\"style_old__2CuNM\",\"newAnimation\":\"style_newAnimation__2Mv8B\",\"new\":\"style_new__15JNq\",\"mobileCell\":\"style_mobileCell__3gSy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellPanelMargin\":\"20\",\"rouletteCellGap\":\"5\",\"rouletteCellSize\":\"50\",\"rouletteBoxSize\":\"270\",\"img\":\"style_img__3cY81\",\"rouletteRoot\":\"style_rouletteRoot__QXY1s\",\"roulette\":\"style_roulette__1Z61U\",\"root\":\"style_root__3X08G\",\"mobilePosition\":\"style_mobilePosition__2gvuj\",\"bigCellWrapper\":\"style_bigCellWrapper__3Mjf2\",\"bigCell\":\"style_bigCell__3uP2E\",\"smallCellWrapper\":\"style_smallCellWrapper__2Yvjf\",\"smallCell\":\"style_smallCell__3RgLh\",\"disable\":\"style_disable__vatcF\",\"mobileCell\":\"style_mobileCell__18ktZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__Gs9rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"rouletteMobileSwipeWidth\":\"490\",\"rouletteGameBlockPadding\":\"30\",\"root\":\"style_root__1SQ9I\",\"item\":\"style_item__1N0M7\",\"gameBlock\":\"style_gameBlock__1HKHy\",\"statisticsWrapper\":\"style_statisticsWrapper__1943L\",\"gameWrapper\":\"style_gameWrapper__1kTst\",\"gameCell\":\"style_gameCell__37of8\",\"gameFooter\":\"style_gameFooter__1hEy2\",\"reloadButton\":\"style_reloadButton__1ANQ7\",\"line\":\"style_line__1yU6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__ywC2k\",\"chipBox\":\"style_chipBox__1mJ5k\",\"rightArrow\":\"style_rightArrow__-RfZG\",\"arrow\":\"style_arrow__fqN3q\",\"button\":\"style_button__2aVye\",\"buttonDisable\":\"style_buttonDisable__ipylR\",\"chip\":\"style_chip__3pGsS\",\"chipSelected\":\"style_chipSelected__3z1es\",\"chipDisable\":\"style_chipDisable__3fGg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__2wBIX\",\"input\":\"style_input__1Smcl\",\"buttons\":\"style_buttons__28ZXa\",\"coinImg\":\"style_coinImg__3gIs0\",\"errorCoin\":\"style_errorCoin___Dogg\",\"button\":\"style_button__1DP0w\",\"leftButton\":\"style_leftButton__1-sbx\",\"rightButton\":\"style_rightButton__2kY-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__1L9rh\",\"title\":\"style_title__1Y4Cx\",\"coin\":\"style_coin__2Nteu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2DOQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"input\":\"style_input__1n9wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__RhqDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__2iiQx\",\"inputRoot\":\"style_inputRoot__3itGz\",\"input\":\"style_input__3pZf3\",\"coin\":\"style_coin__29pFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__1CCQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2_MtC\",\"mobile\":\"style_mobile__HHZnu\",\"img\":\"style_img__1qMqy\",\"arm\":\"style_arm__1Ia_I\",\"fps\":\"style_fps__3WjD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"rouletteMobileSwipeWidth\":\"490\",\"rouletteGameBlockPadding\":\"30\",\"root\":\"style_root__1OAZt\",\"item\":\"style_item__Cor11\",\"gameBlock\":\"style_gameBlock__1md75\",\"statisticsWrapper\":\"style_statisticsWrapper__3GJ-K\",\"gameWrapper\":\"style_gameWrapper__GDMgM\",\"gameCell\":\"style_gameCell__3F1Ef\",\"gameFooter\":\"style_gameFooter__pTGiK\",\"mobileGamePosition\":\"style_mobileGamePosition__19W4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"rouletteMobileSwipeWidth\":\"490\",\"rouletteGameBlockPadding\":\"30\",\"root\":\"page_root__1kX_P\",\"item\":\"page_item__xgsif\",\"gameBlock\":\"page_gameBlock__1xXl6\",\"statisticsWrapper\":\"page_statisticsWrapper__1e7OL\",\"gameWrapper\":\"page_gameWrapper__1nNv4\",\"gameCell\":\"page_gameCell__1eo9J\",\"gameFooter\":\"page_gameFooter__3zpyM\"};","import { useEffect } from \"react\";\r\nimport { isKeyboardEvent } from \"utils/guards\";\r\nimport { useHotKeys } from \"../Provider\";\r\n\r\nenum ActiveKeys {\r\n  KeyA,\r\n  KeyS,\r\n  Space,\r\n  KeyQ,\r\n  KeyW,\r\n  KeyE,\r\n  KeyR,\r\n  KeyT,\r\n  KeyY,\r\n  KeyD,\r\n}\r\n\r\nexport interface HotKeysCallbacks {\r\n  callbackKeyA?: () => void;\r\n  callbackKeyS?: () => void;\r\n  callbackSpace?: () => void;\r\n  callbackKeyQ?: () => void;\r\n  callbackKeyW?: () => void;\r\n  callbackKeyE?: () => void;\r\n  callbackKeyR?: () => void;\r\n  callbackKeyT?: () => void;\r\n  callbackKeyY?: () => void;\r\n  callbackKeyD?: () => void;\r\n}\r\n\r\nexport const useHotKeyListener = (callbacks: HotKeysCallbacks) => {\r\n  const { isHotkeyActive, isHotKeysPaused } = useHotKeys();\r\n\r\n  useEffect(() => {\r\n    const keyDownListenerIgnore = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    const keyListener = (event: Event | KeyboardEvent) => {\r\n      if (\r\n        !isKeyboardEvent(event) ||\r\n        !isHotkeyActive ||\r\n        isHotKeysPaused ||\r\n        //@ts-ignore\r\n        event.target.tagName.toLowerCase() !== \"body\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const key = event.code;\r\n      if (key in ActiveKeys) {\r\n        event.preventDefault();\r\n        const {\r\n          callbackKeyA,\r\n          callbackKeyS,\r\n          callbackSpace,\r\n          callbackKeyQ,\r\n          callbackKeyW,\r\n          callbackKeyE,\r\n          callbackKeyR,\r\n          callbackKeyT,\r\n          callbackKeyY,\r\n          callbackKeyD,\r\n        } = callbacks;\r\n        switch (key) {\r\n          case \"KeyA\":\r\n            if (callbackKeyA) callbackKeyA();\r\n            break;\r\n          case \"KeyS\":\r\n            if (callbackKeyS) callbackKeyS();\r\n            break;\r\n          case \"Space\":\r\n            if (callbackSpace) callbackSpace();\r\n            break;\r\n          case \"KeyQ\":\r\n            if (callbackKeyQ) callbackKeyQ();\r\n            break;\r\n          case \"KeyW\":\r\n            if (callbackKeyW) callbackKeyW();\r\n            break;\r\n          case \"KeyE\":\r\n            if (callbackKeyE) callbackKeyE();\r\n            break;\r\n          case \"KeyR\":\r\n            if (callbackKeyR) callbackKeyR();\r\n            break;\r\n          case \"KeyT\":\r\n            if (callbackKeyT) callbackKeyT();\r\n            break;\r\n          case \"KeyY\":\r\n            if (callbackKeyY) callbackKeyY();\r\n            break;\r\n          case \"KeyD\":\r\n            if (callbackKeyD) callbackKeyD();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", keyDownListenerIgnore);\r\n    window.addEventListener(\"keyup\", keyListener);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyDownListenerIgnore);\r\n      window.removeEventListener(\"keyup\", keyListener);\r\n    };\r\n  }, [isHotkeyActive, isHotKeysPaused, callbacks]);\r\n};\r\n","import { useContext } from \"react\";\r\nimport Context from \"./Context\";\r\nexport { default } from \"./Provider\";\r\n\r\nexport function useRouletteControl() {\r\n  return useContext(Context);\r\n}\r\n","import { SeriesType } from \"./types\";\r\n\r\nexport const rouletteEndAnimationMethods: (() => void)[] = [];\r\nexport const roulettePlayAnimations = {\r\n  setStopAnimation: () => {},\r\n  setStartAnimation: () => {},\r\n  setFinishAnimation: (value: string | number) => {},\r\n};\r\n\r\nexport const seriesValues: SeriesType[] = [\r\n  \"all-black\",\r\n  \"all-red\",\r\n  \"odd\",\r\n  \"even\",\r\n  \"first-12\",\r\n  \"second-12\",\r\n  \"third-12\",\r\n  \"first-row\",\r\n  \"second-row\",\r\n  \"third-row\",\r\n  \"1-18\",\r\n  \"19-36\",\r\n];\r\n\r\nexport const pricesAmount = {\r\n  \"1\": 1,\r\n  \"10\": 10,\r\n  \"100\": 100,\r\n  \"1K\": 1000,\r\n  \"10K\": 10000,\r\n  \"100K\": 100000,\r\n  \"1M\": 1000000,\r\n  \"10M\": 10000000,\r\n  \"100M\": 100000000,\r\n  \"1B\": 1000000000,\r\n  \"10B\": 10000000000,\r\n  \"100B\": 100000000000,\r\n  \"1T\": 1000000000000,\r\n};\r\n\r\nexport const amountToPrice = {\r\n  1: \"1\",\r\n  10: \"10\",\r\n  100: \"100\",\r\n  1000: \"1K\",\r\n  10000: \"10K\",\r\n  100000: \"100K\",\r\n  1000000: \"1M\",\r\n  10000000: \"10M\",\r\n  100000000: \"100M\",\r\n  1000000000: \"1B\",\r\n  10000000000: \"10B\",\r\n  100000000000: \"100B\",\r\n  1000000000000: \"1T\",\r\n};\r\n\r\nexport const multiplyCoefficientValue = 100000000;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n});\n\nfunction SvgNavigateBefore(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": \"true\",\n    \"data-testid\": \"NavigateBeforeIcon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavigateBefore);\nexport default __webpack_public_path__ + \"static/media/navigate-before.196fea9a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC, HTMLAttributes } from \"react\";\r\nimport { Chip } from \"..\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { replaceNumbers } from \"utils/replaceString\";\r\nimport { abbrNum } from \"utils/abrNum\";\r\nimport { useWhiteTheme } from \"providers/WhiteTheme\";\r\n\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport type RouletteCellColors = \"red\" | \"black\" | \"transparent\" | \"green\";\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {\r\n  text: string;\r\n  color: RouletteCellColors;\r\n  hover?: boolean;\r\n  isWin?: boolean;\r\n  pulled?: number;\r\n  rotated?: boolean;\r\n  disabled?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst getPulledValue = (value?: number) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  const { letter, number } = abbrNum(value, 2);\r\n\r\n  let returnValue = Math.floor(number).toFixed(0);\r\n\r\n  return {\r\n    name: `${\"1\".padEnd(String(number.toFixed(0)).length, \"0\")}${letter}`,\r\n    value: `${replaceNumbers(returnValue)}${letter}`,\r\n  };\r\n};\r\n\r\nconst getColor = (isWhiteTheme: boolean, color: RouletteCellColors) => {\r\n  if (color !== \"black\") {\r\n    return color;\r\n  }\r\n\r\n  if (isWhiteTheme) {\r\n    return \"lightBlack\";\r\n  }\r\n\r\n  return \"black\";\r\n};\r\n\r\nexport const Cell: FC<Props> = ({\r\n  text,\r\n  color,\r\n  isWin,\r\n  hover,\r\n  pulled,\r\n  rotated,\r\n  disabled,\r\n  className,\r\n  ...props\r\n}) => {\r\n  const pulledValue = getPulledValue((pulled || 0) * 100000000);\r\n  const { isWhiteThemeActive } = useWhiteTheme();\r\n  const { state } = useRouletteControl();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        css.root,\r\n        css[getColor(isWhiteThemeActive, color)],\r\n        {\r\n          [css.winCell]: isWin,\r\n        },\r\n        {\r\n          [css.disabled]: disabled || state.autoPanel.isStarted,\r\n        },\r\n        {\r\n          //@ts-ignore\r\n          [css[`hover_${getColor(isWhiteThemeActive, color)}`]]: hover,\r\n        },\r\n        className,\r\n      )}\r\n      {...props}>\r\n      {pulledValue && (\r\n        <Chip\r\n          //@ts-ignore\r\n          price={pulledValue.name || \"1T\"}\r\n          value={pulledValue.value}\r\n          className={clsx(css.chip, {\r\n            [css.rotated]: rotated,\r\n          })}\r\n        />\r\n      )}\r\n      <p\r\n        className={clsx(css.text, {\r\n          [css.rotated]: rotated,\r\n        })}>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","export function abbrNum(incomeNumber: number, afterDot: number = 0) {\r\n  let number = incomeNumber;\r\n  // 2 decimal places => 100, 3 => 1000, etc\r\n  const decPlaces = Math.pow(10, afterDot);\r\n\r\n  // Enumerate number abbreviations\r\n  let abbrev = [\"K\", \"M\", \"B\", \"T\"];\r\n  let usedLetter = \"\";\r\n\r\n  // Go through the array backwards, so we do the largest first\r\n  for (let i = abbrev.length - 1; i >= 0; i--) {\r\n    // Convert array index to \"1000\", \"1000000\", etc\r\n    const size = Math.pow(10, (i + 1) * 3);\r\n\r\n    // If the number is bigger or equal do the abbreviation\r\n    if (size <= number) {\r\n      // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n      // This gives us nice rounding to a particular decimal place.\r\n      number = Math.round((number * decPlaces) / size) / decPlaces;\r\n\r\n      // Handle special case where we round up to the next abbreviation\r\n      if (number === 1000 && i < abbrev.length - 1) {\r\n        number = 1;\r\n        i++;\r\n      }\r\n\r\n      // Add the letter for the abbreviation\r\n      // We are done... stop\r\n      usedLetter = abbrev[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  number = Number(number.toFixed(afterDot));\r\n\r\n  return {\r\n    value: `${number}${usedLetter}`,\r\n    number,\r\n    letter: usedLetter,\r\n  };\r\n}\r\n","import React, { FC, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  ChipPull,\r\n  SeriesType,\r\n} from \"pages/Roulette/components/Reducer/reducer/types\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport css from \"./style.module.scss\";\r\nimport { Cell } from \"../Cell\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\n\r\ninterface CallBacks {\r\n  top: {\r\n    hover: () => void;\r\n    blur: () => void;\r\n  };\r\n  left: {\r\n    hover: () => void;\r\n    blur: () => void;\r\n  };\r\n  right: {\r\n    hover: () => void;\r\n    blur: () => void;\r\n  };\r\n}\r\n\r\ninterface Types {\r\n  top: SeriesType;\r\n  left: SeriesType;\r\n  right: SeriesType;\r\n}\r\ninterface CreateCellProps {\r\n  text: {\r\n    top: string;\r\n    left: string;\r\n    right: string;\r\n  };\r\n  isColored?: boolean;\r\n  onHover: CallBacks;\r\n  seriesTypes: Types;\r\n}\r\n\r\nconst ControlPanel: FC<CreateCellProps> = ({\r\n  text,\r\n  isColored,\r\n  onHover,\r\n  seriesTypes,\r\n}) => {\r\n  const { dispatch, state } = useRouletteControl();\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { chipPlacementLowPitch } = getSoundEffectNames(gamePathNames.ROULETTE);\r\n\r\n  const chipPull = useCallback((value: ChipPull) => {\r\n    dispatch({\r\n      type: \"chip_pull\",\r\n      value,\r\n    });\r\n  }, []);\r\n  const pullSeries = useCallback((series: SeriesType) => {\r\n    playEffect(chipPlacementLowPitch);\r\n    chipPull({\r\n      type: \"series\",\r\n      series,\r\n    });\r\n  }, []);\r\n\r\n  const takePull = useCallback((value: ChipPull) => {\r\n    dispatch({\r\n      type: \"take_pull\",\r\n      value,\r\n    });\r\n  }, []);\r\n  const takeSeries = useCallback((series: SeriesType) => {\r\n    takePull({\r\n      type: \"series\",\r\n      series,\r\n    });\r\n  }, []);\r\n\r\n  const getIsPulled = (value: ChipPull) => {\r\n    switch (value.type) {\r\n      case \"number\":\r\n        return state.cellPanel[value.number].betAmount;\r\n      case \"series\":\r\n        return state.controlPanel[value.series].betAmount;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.cells}>\r\n      <Cell\r\n        text={text.top}\r\n        color={\"transparent\"}\r\n        title=\"3x\"\r\n        className={clsx(css.cellCenter, css.cellUnit)}\r\n        onMouseOver={onHover.top.hover}\r\n        onMouseLeave={onHover.top.blur}\r\n        rotated\r\n        onClick={() => pullSeries(seriesTypes.top)}\r\n        onContextMenu={(event) => {\r\n          event.preventDefault();\r\n          takeSeries(seriesTypes.top);\r\n        }}\r\n        pulled={getIsPulled({\r\n          type: \"series\",\r\n          series: seriesTypes.top,\r\n        })}\r\n      />\r\n      <Cell\r\n        text={text.left}\r\n        color={isColored ? \"red\" : \"transparent\"}\r\n        title=\"2x\"\r\n        className={clsx(css.cellLeft, css.cellUnit)}\r\n        onMouseOver={onHover.left.hover}\r\n        onMouseLeave={onHover.left.blur}\r\n        rotated\r\n        onClick={() => pullSeries(seriesTypes.left)}\r\n        onContextMenu={(event) => {\r\n          event.preventDefault();\r\n          takeSeries(seriesTypes.left);\r\n        }}\r\n        pulled={getIsPulled({\r\n          type: \"series\",\r\n          series: seriesTypes.left,\r\n        })}\r\n      />\r\n      <Cell\r\n        text={text.right}\r\n        color={isColored ? \"black\" : \"transparent\"}\r\n        title=\"2x\"\r\n        className={clsx(css.cellRight, css.cellUnit)}\r\n        onMouseOver={onHover.right.hover}\r\n        onMouseLeave={onHover.right.blur}\r\n        rotated\r\n        onClick={() => pullSeries(seriesTypes.right)}\r\n        onContextMenu={(event) => {\r\n          event.preventDefault();\r\n          takeSeries(seriesTypes.right);\r\n        }}\r\n        pulled={getIsPulled({\r\n          type: \"series\",\r\n          series: seriesTypes.right,\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ButtonsPanel = () => {\r\n  const { dispatch, state } = useRouletteControl();\r\n\r\n  const fromTo = (start: number, end: number, isBlur?: boolean) => {\r\n    const length = end - start;\r\n\r\n    const cells = [];\r\n    for (let i = 0; i <= length; i++) {\r\n      cells.push(String(i + start));\r\n    }\r\n    dispatch({\r\n      type: isBlur ? \"blur\" : \"hover\",\r\n      cellNumber: cells,\r\n    });\r\n  };\r\n\r\n  const evenOdd = (isOdd: boolean, isBlur?: boolean) => {\r\n    const keys = Object.keys(state.cellPanel);\r\n    const cells = keys.filter((cell) =>\r\n      isOdd ? Number(cell) % 2 === 0 : Number(cell) % 2 !== 0,\r\n    );\r\n\r\n    dispatch({\r\n      type: isBlur ? \"blur\" : \"hover\",\r\n      cellNumber: cells,\r\n    });\r\n  };\r\n\r\n  const colored = (isRed: boolean, isBlur?: boolean) => {\r\n    const cells = Object.entries(state.cellPanel)\r\n      .filter(([, { color }]) => (isRed ? color === \"red\" : color === \"black\"))\r\n      .map(([number]) => number);\r\n\r\n    dispatch({\r\n      type: isBlur ? \"blur\" : \"hover\",\r\n      cellNumber: cells,\r\n    });\r\n  };\r\n\r\n  const onHoverList = {\r\n    leftPanel: {\r\n      top: {\r\n        hover: () => fromTo(1, 12),\r\n        blur: () => fromTo(1, 12, true),\r\n      },\r\n      left: {\r\n        hover: () => fromTo(1, 18),\r\n        blur: () => fromTo(1, 18, true),\r\n      },\r\n      right: {\r\n        hover: () => evenOdd(false),\r\n        blur: () => evenOdd(false, true),\r\n      },\r\n    },\r\n    centerPanel: {\r\n      top: {\r\n        hover: () => fromTo(13, 24),\r\n        blur: () => fromTo(13, 24, true),\r\n      },\r\n      left: {\r\n        hover: () => colored(true),\r\n        blur: () => colored(true, true),\r\n      },\r\n      right: {\r\n        hover: () => colored(false),\r\n        blur: () => colored(false, true),\r\n      },\r\n    },\r\n    rightPanel: {\r\n      top: {\r\n        hover: () => fromTo(25, 36),\r\n        blur: () => fromTo(25, 36, true),\r\n      },\r\n      left: {\r\n        hover: () => evenOdd(true),\r\n        blur: () => evenOdd(true, true),\r\n      },\r\n      right: {\r\n        hover: () => fromTo(19, 36),\r\n        blur: () => fromTo(19, 36, true),\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <ControlPanel\r\n        text={{ top: \"1 to 12\", left: \"1 to 18\", right: \"Even\" }}\r\n        onHover={onHoverList.leftPanel}\r\n        seriesTypes={{\r\n          top: \"first-12\",\r\n          left: \"1-18\",\r\n          right: \"even\",\r\n        }}\r\n      />\r\n      <ControlPanel\r\n        text={{ top: \"13 to 24\", left: \"\", right: \"\" }}\r\n        isColored\r\n        onHover={onHoverList.centerPanel}\r\n        seriesTypes={{\r\n          top: \"second-12\",\r\n          left: \"all-red\",\r\n          right: \"all-black\",\r\n        }}\r\n      />\r\n      <ControlPanel\r\n        text={{ top: \"25 to 36\", left: \"Odd\", right: \"19 to 36\" }}\r\n        onHover={onHoverList.rightPanel}\r\n        seriesTypes={{\r\n          top: \"third-12\",\r\n          left: \"odd\",\r\n          right: \"19-36\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport {\r\n  ChipPull,\r\n  SeriesType,\r\n} from \"pages/Roulette/components/Reducer/reducer/types\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport { ButtonsPanel } from \"../ButtonsPanel\";\r\nimport { Cell } from \"../Cell\";\r\nimport css from \"./style.module.scss\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\n\r\nexport interface PanelProps {\r\n  rootWidth: number;\r\n  isDesktop: boolean;\r\n  setIsDesktop: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const CellsPanel: FC<PanelProps> = ({\r\n  rootWidth,\r\n  setIsDesktop,\r\n  isDesktop,\r\n}) => {\r\n  const { dispatch, state } = useRouletteControl();\r\n\r\n  const panelRef = useRef<HTMLDivElement>(null);\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { chipPlacementHighPitch } = getSoundEffectNames(\r\n    gamePathNames.ROULETTE,\r\n  );\r\n  useEffect(() => {\r\n    if (\r\n      rootWidth &&\r\n      panelRef.current?.offsetHeight &&\r\n      rootWidth < panelRef.current?.offsetHeight\r\n    ) {\r\n      setIsDesktop(false);\r\n    } else {\r\n      setIsDesktop(true);\r\n    }\r\n  }, [rootWidth]);\r\n\r\n  const hoverRow = (rowNumber: number, isBlur?: boolean) => {\r\n    const keys = Object.keys(state.cellPanel);\r\n    const rowAmount = 3;\r\n    const cells = keys.filter((cell) => Number(cell) % rowAmount === rowNumber);\r\n\r\n    dispatch({\r\n      type: isBlur ? \"blur\" : \"hover\",\r\n      cellNumber: cells,\r\n    });\r\n  };\r\n\r\n  const chipPull = (value: ChipPull) => {\r\n    dispatch({\r\n      type: \"chip_pull\",\r\n      value,\r\n    });\r\n  };\r\n  const pullNumber = (cellNumber: string) => {\r\n    chipPull({\r\n      type: \"number\",\r\n      number: cellNumber,\r\n    });\r\n  };\r\n  const pullSeries = (series: SeriesType) => {\r\n    chipPull({\r\n      type: \"series\",\r\n      series,\r\n    });\r\n  };\r\n\r\n  const takePull = (value: ChipPull) => {\r\n    dispatch({\r\n      type: \"take_pull\",\r\n      value,\r\n    });\r\n  };\r\n  const takeNumber = (cellNumber: string) => {\r\n    takePull({\r\n      type: \"number\",\r\n      number: cellNumber,\r\n    });\r\n  };\r\n  const takeSeries = (series: SeriesType) => {\r\n    takePull({\r\n      type: \"series\",\r\n      series,\r\n    });\r\n  };\r\n\r\n  const getIsPulled = (value: ChipPull) => {\r\n    switch (value.type) {\r\n      case \"number\":\r\n        return state.cellPanel[value.number].betAmount;\r\n      case \"series\":\r\n        return state.controlPanel[value.series].betAmount;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={panelRef}\r\n      style={{\r\n        transform:\r\n          !isDesktop && rootWidth && panelRef.current\r\n            ? `translate(${\r\n                rootWidth / 2 - panelRef.current.offsetWidth / 2\r\n              }px, -12.5%) scale(0.75)`\r\n            : \"\",\r\n\r\n        opacity: state.autoPanel.isStarted ? 0.9 : 1,\r\n      }}\r\n      className={clsx(css.rootPanel, {\r\n        [css.rotated]: isDesktop,\r\n      })}>\r\n      <ButtonsPanel />\r\n      <div className={css.cellPanel}>\r\n        <Cell\r\n          color=\"green\"\r\n          text=\"0\"\r\n          title=\"36x\"\r\n          rotated={isDesktop}\r\n          isWin={state.betPanel.winNumber === \"0\"}\r\n          className={css.zeroCell}\r\n          onClick={() => pullNumber(\"0\")}\r\n          onContextMenu={(event) => {\r\n            event.preventDefault();\r\n            takeNumber(\"0\");\r\n          }}\r\n          pulled={getIsPulled({\r\n            type: \"number\",\r\n            number: \"0\",\r\n          })}\r\n        />\r\n        <div className={css.cells}>\r\n          {Object.entries(state.cellPanel).map(\r\n            ([number, { color, isHovered }]) => {\r\n              if (number === \"0\") {\r\n                return null;\r\n              }\r\n              const isWin = state.betPanel.winNumber === number;\r\n              return (\r\n                <React.Fragment key={`__${number}_${color}`}>\r\n                  <Cell\r\n                    text={number}\r\n                    color={color}\r\n                    title=\"36x\"\r\n                    rotated={isDesktop}\r\n                    className={css.cell}\r\n                    hover={isHovered}\r\n                    isWin={isWin}\r\n                    onClick={() => {\r\n                      pullNumber(number);\r\n                      playEffect(chipPlacementHighPitch);\r\n                    }}\r\n                    onContextMenu={(event) => {\r\n                      event.preventDefault();\r\n                      takeNumber(number);\r\n                    }}\r\n                    pulled={getIsPulled({\r\n                      type: \"number\",\r\n                      number: number,\r\n                    })}\r\n                  />\r\n                </React.Fragment>\r\n              );\r\n            },\r\n          )}\r\n\r\n          <Cell\r\n            color=\"transparent\"\r\n            text=\"2:1\"\r\n            title=\"3x\"\r\n            className={clsx(css.cell, css.rowCell)}\r\n            rotated={isDesktop}\r\n            onMouseOver={() => hoverRow(1)}\r\n            onMouseLeave={() => hoverRow(1, true)}\r\n            onClick={() => pullSeries(\"third-row\")}\r\n            onContextMenu={(event) => {\r\n              event.preventDefault();\r\n              takeSeries(\"third-row\");\r\n            }}\r\n            pulled={getIsPulled({\r\n              type: \"series\",\r\n              series: \"third-row\",\r\n            })}\r\n          />\r\n          <Cell\r\n            color=\"transparent\"\r\n            text=\"2:1\"\r\n            title=\"3x\"\r\n            className={clsx(css.cell, css.rowCell)}\r\n            rotated={isDesktop}\r\n            onMouseOver={() => hoverRow(2)}\r\n            onMouseLeave={() => hoverRow(2, true)}\r\n            onClick={() => pullSeries(\"second-row\")}\r\n            onContextMenu={(event) => {\r\n              event.preventDefault();\r\n              takeSeries(\"second-row\");\r\n            }}\r\n            pulled={getIsPulled({\r\n              type: \"series\",\r\n              series: \"second-row\",\r\n            })}\r\n          />\r\n          <Cell\r\n            color=\"transparent\"\r\n            text=\"2:1\"\r\n            title=\"3x\"\r\n            className={clsx(css.cell, css.rowCell)}\r\n            rotated={isDesktop}\r\n            onMouseOver={() => hoverRow(0)}\r\n            onMouseLeave={() => hoverRow(0, true)}\r\n            onClick={() => pullSeries(\"first-row\")}\r\n            onContextMenu={(event) => {\r\n              event.preventDefault();\r\n              takeSeries(\"first-row\");\r\n            }}\r\n            pulled={getIsPulled({\r\n              type: \"series\",\r\n              series: \"first-row\",\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { RouletteCellData } from \"pages/Roulette/components/Reducer/reducer/types\";\r\n\r\nimport { Cell } from \"../../../Cell\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  cells: RouletteCellData[];\r\n}\r\n\r\nconst SmallCellAnimation: FC<Props> = ({ cells }) => {\r\n  return (\r\n    <div className={css.rootAnm}>\r\n      {cells.map(({ color, number }) => {\r\n        return (\r\n          <Cell\r\n            color={color}\r\n            text={number}\r\n            disabled\r\n            className={clsx(css.cell, css.animation)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallCellAnimation;\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { RouletteCellData } from \"pages/Roulette/components/Reducer/reducer/types\";\r\n\r\nimport { Cell } from \"../../../Cell\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  setIsAnimation: React.Dispatch<React.SetStateAction<boolean>>;\r\n  prev?: RouletteCellData;\r\n  next: RouletteCellData;\r\n  isDesktop: boolean;\r\n}\r\n\r\nconst BigCellAnimation: FC<Props> = ({\r\n  prev,\r\n  next,\r\n  isDesktop,\r\n  setIsAnimation,\r\n}) => {\r\n  return (\r\n    <div className={css.root}>\r\n      {prev && isDesktop && (\r\n        <Cell\r\n          disabled\r\n          color={prev.color}\r\n          text={prev.number}\r\n          className={clsx(css.bigCell, css.oldAnimation)}\r\n        />\r\n      )}\r\n\r\n      <Cell\r\n        color={next.color}\r\n        text={next.number}\r\n        disabled\r\n        className={clsx(css.bigCell, css.newAnimation, {\r\n          [css.mobileCell]: !isDesktop,\r\n        })}\r\n        onAnimationEnd={() => {\r\n          setIsAnimation(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigCellAnimation;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { useWindowSize } from \"providers\";\r\n\r\nimport { RouletteCellData } from \"pages/Roulette/components/Reducer/reducer/types\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport { rouletteMobileSwipeWidth } from \"pages/Roulette/page\";\r\n\r\nimport SmallCellAnimation from \"./animation/SmallCellAnimation\";\r\nimport BigCellAnimation from \"./animation/BigCellAnimation\";\r\n\r\nimport rouletteCellCss from \"../CellsPanel/style.module.scss\";\r\nimport css from \"./style.module.scss\";\r\nimport { Cell } from \"../Cell\";\r\n\r\ninterface Props {\r\n  isDesktop: boolean;\r\n  rootWidth: number;\r\n  isRouletteHidden: boolean;\r\n}\r\n\r\nexport const History: FC<Props> = ({\r\n  isDesktop,\r\n  rootWidth,\r\n  isRouletteHidden,\r\n}) => {\r\n  const { state } = useRouletteControl();\r\n  const [history, setHistory] = useState<RouletteCellData[]>([]);\r\n  const [actualValue, setActualValue] = useState<RouletteCellData | null>(null);\r\n  const { width } = useWindowSize();\r\n  const [isAnimation, setIsAnimation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!state.betPanel.isRouletteAnimationPlay) {\r\n      const number = state.betPanel.winNumber;\r\n      if (number) {\r\n        const color = state.cellPanel[number].color;\r\n        setActualValue({\r\n          number,\r\n          color,\r\n        });\r\n      }\r\n    }\r\n  }, [state.betPanel.isRouletteAnimationPlay, state.betPanel.winNumber]);\r\n\r\n  useEffect(() => {\r\n    if (actualValue) {\r\n      setIsAnimation(true);\r\n      const reversed = [actualValue, ...history].slice(0, 4);\r\n      setHistory(reversed);\r\n    }\r\n  }, [actualValue]);\r\n\r\n  useEffect(() => {\r\n    if (!isAnimation && actualValue) {\r\n      setActualValue(null);\r\n    }\r\n  }, [isAnimation]);\r\n\r\n  const playLittleCellsAnimation =\r\n    isAnimation && actualValue && history.length > 1;\r\n\r\n  const calcMobilePosition = () => {\r\n    const leftSide = Math.abs(rootWidth - width);\r\n    if (width < rouletteMobileSwipeWidth) {\r\n      const center = 110;\r\n      return isRouletteHidden ? leftSide : center;\r\n    }\r\n    return \"calc(50% - 150px)\";\r\n  };\r\n\r\n  const historyPosition = isDesktop\r\n    ? {\r\n        transform: `translate(-${Math.abs(\r\n          rootWidth / 2 - Number(rouletteCellCss.rouletteCellSize) * 1.5,\r\n        )}px, 0)`,\r\n        marginLeft: 0,\r\n      }\r\n    : {\r\n        marginLeft: calcMobilePosition(),\r\n      };\r\n\r\n  return (\r\n    <div\r\n      style={historyPosition}\r\n      className={clsx(css.root, {\r\n        [css.mobilePosition]: !isDesktop,\r\n      })}>\r\n      <div className={css.bigCellWrapper}>\r\n        {isAnimation && actualValue ? (\r\n          <BigCellAnimation\r\n            prev={history[1]}\r\n            next={actualValue}\r\n            setIsAnimation={setIsAnimation}\r\n            isDesktop={isDesktop}\r\n          />\r\n        ) : (\r\n          history[0] && (\r\n            <Cell\r\n              color={history[0].color}\r\n              text={history[0].number}\r\n              className={clsx(css.bigCell, {\r\n                [css.mobileCell]: !isDesktop,\r\n              })}\r\n              disabled\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n      {isDesktop && (\r\n        <>\r\n          <div className={css.smallCellWrapper}>\r\n            {\r\n              <>\r\n                {history.map(({ number, color }, i) => {\r\n                  if (i === 0) {\r\n                    return;\r\n                  }\r\n                  return (\r\n                    <Cell\r\n                      disabled\r\n                      {...{\r\n                        color,\r\n                        text: number,\r\n                        className: clsx(css.smallCell, {\r\n                          [css.disable]: playLittleCellsAnimation,\r\n                        }),\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n              </>\r\n            }\r\n            {playLittleCellsAnimation && (\r\n              <SmallCellAnimation cells={history.filter((v, i) => i > 1)} />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Price } from \"pages/Roulette/components/Reducer/reducer/types\";\r\n\r\nconst colors = {\r\n  \"1\": \"#9E8EE8\",\r\n  \"10\": \"#9B89EC\",\r\n  \"100\": \"#907BEB\",\r\n  \"1K\": \"#7E65E8\",\r\n  \"10K\": \"#6D52E4\",\r\n  \"100K\": \"#6246DF\",\r\n  \"1M\": \"#5438D5\",\r\n  \"10M\": \"#4B2ED0\",\r\n  \"100M\": \"#4929d7\",\r\n  \"1B\": \"#3f1dd8\",\r\n  \"10B\": \"#330fd6\",\r\n  \"100B\": \"#2d0bc2\",\r\n  \"1T\": \"#1a008c\",\r\n};\r\n\r\ninterface Props extends React.SVGProps<SVGSVGElement> {\r\n  price: Price;\r\n  value?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const Chip: FC<Props> = ({ price, value, className, ...props }) => {\r\n  const color = colors[price] || colors[\"1\"];\r\n  return (\r\n    <svg\r\n      className={className}\r\n      {...props}\r\n      width=\"47\"\r\n      height=\"47\"\r\n      viewBox=\"0 0 47 47\">\r\n      <path\r\n        d=\"M47 23.5C47.0012 25.2385 46.81 26.9717 46.43 28.6681C45.8424 31.2893 44.8053 33.7888 43.3646 36.056C41.5002 39.0038 39.0038 41.5002 36.056 43.3646C33.7888 44.8053 31.2893 45.8424 28.6681 46.4299C25.2646 47.19 21.7354 47.19 18.3319 46.4299C15.7107 45.8424 13.2112 44.8053 10.944 43.3646C7.9962 41.5002 5.49977 39.0038 3.63542 36.056C2.19471 33.7888 1.15759 31.2893 0.570037 28.6681C-0.190012 25.2633 -0.190012 21.7329 0.570037 18.3281C1.55129 13.9928 3.74033 10.024 6.88374 6.88131C10.0271 3.73857 13.9964 1.55038 18.3319 0.570043C21.7354 -0.190014 25.2646 -0.190014 28.6681 0.570043C33.0031 1.55146 36.9718 3.74002 40.115 6.88257C43.2582 10.0251 45.4476 13.9933 46.43 18.3281C46.8102 20.0258 47.0014 21.7603 47 23.5Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M23.5 37.56C31.2664 37.56 37.5622 31.2642 37.5622 23.4978C37.5622 15.7314 31.2664 9.43555 23.5 9.43555C15.7336 9.43555 9.43774 15.7314 9.43774 23.4978C9.43774 31.2642 15.7336 37.56 23.5 37.56Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M28.6671 0.570043L27.3836 5.28514H19.6144L18.3309 0.570043C21.7344 -0.190014 25.2636 -0.190014 28.6671 0.570043Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M28.6671 46.4298C25.2636 47.1899 21.7344 47.1899 18.3309 46.4298L19.6144 41.7109H27.3836L28.6671 46.4298Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M43.364 10.9432L39.1246 13.3668L33.6318 7.8703L36.0517 3.63086C39.0016 5.49544 41.4995 7.9933 43.364 10.9432Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M13.3677 39.1256L10.9441 43.365C7.99628 41.5007 5.49985 39.0042 3.6355 36.0564L7.87494 33.6328L13.3677 39.1256Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M47 23.5C47.0011 25.2385 46.81 26.9717 46.4299 28.6681L41.7148 27.3846V19.6154L46.4299 18.3281C46.8102 20.0258 47.0014 21.7603 47 23.5Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M5.28514 19.6154V27.3846L0.570037 28.6681C-0.190012 25.2634 -0.190012 21.7329 0.570037 18.3281L5.28514 19.6154Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M43.364 36.0564C41.4997 39.0042 39.0033 41.5007 36.0555 43.365L33.6318 39.1256L39.1246 33.6328L43.364 36.0564Z\"\r\n        fill={color}\r\n      />\r\n      <path\r\n        d=\"M13.3677 7.8703L7.87494 13.3668L3.6355 10.9432C5.50008 7.9933 7.99794 5.49544 10.9479 3.63086L13.3677 7.8703Z\"\r\n        fill={color}\r\n      />\r\n      <text x=\"50%\" y=\"28\" fill=\"white\" textAnchor=\"middle\" fontSize=\"10\">\r\n        {value || price}\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n","import { seriesValues } from \"./config\";\r\nimport {\r\n  ControlCellStateType,\r\n  RouletteCellStateType,\r\n  RouletteState,\r\n} from \"./types\";\r\n\r\nexport const createCell = (start: number, noFirst?: boolean) => {\r\n  const cellAmount = 9;\r\n  const result: RouletteCellStateType = {};\r\n\r\n  for (let i = 0; i < cellAmount; i++) {\r\n    let color: \"red\" | \"black\" = i % 2 === 0 ? \"red\" : \"black\";\r\n    if (noFirst && i === 0) {\r\n      color = \"black\";\r\n    }\r\n\r\n    result[`${i + start}`] = {\r\n      color,\r\n      isHovered: false,\r\n      betAmount: 0,\r\n    };\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst createControlPanel = (): ControlCellStateType =>\r\n  //@ts-ignore\r\n  seriesValues.reduce((controlState, key) => {\r\n    //@ts-ignore\r\n    controlState[key] = {\r\n      betAmount: 0,\r\n    };\r\n\r\n    return controlState;\r\n  }, {});\r\n\r\nexport const initialRouletteState: RouletteState = {\r\n  betPanel: {\r\n    totalAmount: 0,\r\n    chipPrice: \"0.00000001\",\r\n    selectedChip: \"1\",\r\n    lastProfitValue: \"0\",\r\n    isRouletteAnimationPlay: false,\r\n\r\n    limits: {\r\n      limitsList: [],\r\n    },\r\n  },\r\n  cellPanel: {\r\n    0: {\r\n      color: \"green\",\r\n      isHovered: false,\r\n      betAmount: 0,\r\n    },\r\n    ...createCell(1),\r\n    ...createCell(10, true),\r\n    ...createCell(19),\r\n    ...createCell(28, true),\r\n  },\r\n  controlPanel: createControlPanel(),\r\n\r\n  autoPanel: {\r\n    isOpen: false,\r\n    isStarted: false,\r\n\r\n    values: {\r\n      onWin: {\r\n        betPercent: \"0\",\r\n        variant: 1,\r\n      },\r\n      onLoss: {\r\n        betPercent: \"0\",\r\n        variant: 1,\r\n      },\r\n    },\r\n\r\n    limits: {\r\n      expected: {\r\n        numberOfBets: \"0\",\r\n        stopOnLoss: \"0.00000000\",\r\n        stopOnProfit: \"0.00000000\",\r\n      },\r\n      real: {\r\n        profit: 0,\r\n        numberOfBets: 0,\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { multiplyCoefficientValue, pricesAmount } from \"../config\";\r\nimport { Price } from \"../types\";\r\n\r\nexport const isChipBetDisable = (\r\n  chipValue: Price,\r\n  maxBet: number,\r\n  balance: number,\r\n  totalBetAmount: number,\r\n  isAuto: boolean,\r\n) => {\r\n  if (isAuto) {\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    pricesAmount[chipValue] >\r\n    Math.min(\r\n      maxBet * multiplyCoefficientValue,\r\n      balance * multiplyCoefficientValue,\r\n    ) -\r\n      totalBetAmount * multiplyCoefficientValue\r\n  );\r\n};\r\n","import { pricesAmount } from \"../config\";\r\nimport { Price } from \"../types\";\r\n\r\nexport const chipPriceCalculate = (selectedChip: Price) =>\r\n  (pricesAmount[selectedChip] / 100000000).toFixed(8);\r\n","import { liveStatsManager } from \"components/LiveStats/eventEmitter/emitter\";\r\nimport { coinsManager } from \"hooks\";\r\n\r\nimport { clearRouletteAutoModeTimeouts } from \"./extentions/autoMode/playAuto\";\r\nimport { changeBetValue } from \"./extentions/autoMode/changeBetValue\";\r\nimport { chipPriceCalculate } from \"./extentions/chipPriceCalculate\";\r\nimport { isChipBetDisable } from \"./extentions/isChipBetDisable\";\r\nimport { clearBet } from \"./extentions/changeBet\";\r\n\r\nimport { RouletteActions, RouletteState } from \"./types\";\r\nimport { roulettePlayAnimations } from \"./config\";\r\nimport { calculateWithMultiplier } from \"./extentions/calculateTotalAmount\";\r\nimport { findMinChipValue } from \"./extentions/findMinChipValue\";\r\n\r\nexport const rouletteReducer = (\r\n  state: RouletteState,\r\n  action: RouletteActions,\r\n) => {\r\n  const { selectedChip, limits, totalAmount } = state.betPanel;\r\n  const isDisable = () =>\r\n    isChipBetDisable(\r\n      selectedChip,\r\n      Number(limits.actualCoinLimit?.maximum_bet),\r\n      Number(coinsManager.selectedCoin?.balance || 0),\r\n      totalAmount,\r\n      state.autoPanel.isStarted,\r\n    );\r\n\r\n  const stopAuto = () => {\r\n    clearRouletteAutoModeTimeouts();\r\n    roulettePlayAnimations.setStopAnimation();\r\n  };\r\n\r\n  switch (action.type) {\r\n    case \"init\":\r\n      state.betPanel.limits.limitsList = action.value;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"change_animation\":\r\n      state.betPanel.isRouletteAnimationPlay = action.value;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"hover\":\r\n    case \"blur\":\r\n      if (state.autoPanel.isStarted) {\r\n        return state;\r\n      }\r\n\r\n      if (typeof action.cellNumber === \"string\") {\r\n        state.cellPanel[action.cellNumber].isHovered = action.type === \"hover\";\r\n      } else {\r\n        action.cellNumber.forEach((value) => {\r\n          state.cellPanel[value].isHovered = action.type === \"hover\";\r\n        });\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"chip_select\":\r\n      state.betPanel.selectedChip = action.value;\r\n      state.betPanel.chipPrice = chipPriceCalculate(action.value);\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"chip_pull\":\r\n      if (!isDisable()) {\r\n        switch (action.value.type) {\r\n          case \"number\":\r\n            state.cellPanel[action.value.number].betAmount =\r\n              calculateWithMultiplier(\r\n                state.cellPanel[action.value.number].betAmount,\r\n                Number(state.betPanel.chipPrice),\r\n                \"add\",\r\n              );\r\n\r\n            break;\r\n          case \"series\":\r\n            state.controlPanel[action.value.series].betAmount =\r\n              calculateWithMultiplier(\r\n                state.controlPanel[action.value.series].betAmount,\r\n                Number(state.betPanel.chipPrice),\r\n                \"add\",\r\n              );\r\n\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        state.betPanel.totalAmount = calculateWithMultiplier(\r\n          state.betPanel.totalAmount,\r\n          Number(state.betPanel.chipPrice),\r\n          \"add\",\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"take_pull\":\r\n      if (state.autoPanel.isStarted) {\r\n        return state;\r\n      }\r\n\r\n      switch (action.value.type) {\r\n        case \"number\":\r\n          const takePullNumberCell = state.cellPanel[action.value.number];\r\n          state.betPanel.totalAmount = calculateWithMultiplier(\r\n            state.betPanel.totalAmount,\r\n            takePullNumberCell.betAmount,\r\n            \"remove\",\r\n          );\r\n\r\n          takePullNumberCell.betAmount = 0;\r\n          break;\r\n\r\n        case \"series\":\r\n          const takePullSeriesCell = state.controlPanel[action.value.series];\r\n\r\n          state.betPanel.totalAmount = calculateWithMultiplier(\r\n            state.betPanel.totalAmount,\r\n            takePullSeriesCell.betAmount,\r\n            \"remove\",\r\n          );\r\n\r\n          takePullSeriesCell.betAmount = 0;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"chip_clean\":\r\n      if (state.autoPanel.isStarted) {\r\n        return state;\r\n      }\r\n\r\n      clearBet(state);\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"change_bet_amount\":\r\n      switch (action.value) {\r\n        case \"divide\":\r\n          changeBetValue(state, \"-50\");\r\n          break;\r\n\r\n        case \"multiply\":\r\n          changeBetValue(state, \"100\");\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_selected_coin\":\r\n      const defaultChip = findMinChipValue(\r\n        action.limit?.minimum_bet,\r\n        coinsManager.selectedCoin?.balance,\r\n      );\r\n\r\n      state.betPanel.limits.actualCoinLimit = action.limit;\r\n      state.betPanel.selectedChip = defaultChip;\r\n      state.betPanel.chipPrice = chipPriceCalculate(defaultChip);\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_win\":\r\n      state.betPanel.winNumber = action.value;\r\n      if (action.profit) {\r\n        state.betPanel.lastProfitValue = action.profit;\r\n      }\r\n\r\n      if (action.value && !action.noStats && action.coin) {\r\n        const { lastProfitValue, totalAmount } = state.betPanel;\r\n\r\n        const amount = Number(totalAmount),\r\n          profit = Number(lastProfitValue);\r\n        if (lastProfitValue && (profit || profit === 0) && totalAmount) {\r\n          liveStatsManager.addBet({\r\n            amount,\r\n            profit,\r\n            coin: action.coin,\r\n          });\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_auto_open\":\r\n      state.autoPanel.isOpen = action.value;\r\n      state.autoPanel.isStarted = false;\r\n      stopAuto();\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_auto_started\":\r\n      state.autoPanel.isStarted = action.value;\r\n\r\n      if (!action.value) {\r\n        stopAuto();\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_on_option_value\":\r\n      state.autoPanel.values[action.operation] = action.value;\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_auto_limits\":\r\n      const expectedValue =\r\n        action.value.type === \"win\" ? \"stopOnProfit\" : \"stopOnLoss\";\r\n      state.autoPanel.limits.expected[expectedValue] = action.value.value;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"set_auto_number_of_bets\":\r\n      state.autoPanel.limits.expected.numberOfBets = action.value;\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"reloadState\":\r\n      return {\r\n        ...action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { RouletteState } from \"../types\";\r\n\r\nexport const clearBet = (state: RouletteState) => {\r\n  const changeCellValue = (cell: { betAmount: number }) => {\r\n    cell.betAmount = 0;\r\n  };\r\n\r\n  Object.values(state.cellPanel).forEach((value) => {\r\n    changeCellValue(value);\r\n  }, 0);\r\n\r\n  Object.values(state.controlPanel).forEach((value) => {\r\n    changeCellValue(value);\r\n  }, 0);\r\n\r\n  state.betPanel.totalAmount = 0;\r\n};\r\n","import { amountToPrice, pricesAmount } from \"../config\";\r\nimport { isChipBetDisable } from \"./isChipBetDisable\";\r\n\r\nexport const findMinChipValue = (\r\n  minimum: string | undefined,\r\n  balance: string | undefined,\r\n) => {\r\n  const valuesLength = Object.values(pricesAmount).length;\r\n\r\n  for (let index = valuesLength; index > 0; index--) {\r\n    const amount = \"1\".padEnd(index, \"0\");\r\n    //@ts-ignore\r\n    const value = amountToPrice[amount];\r\n    if (value) {\r\n      const isTooMuch = isChipBetDisable(\r\n        value,\r\n        Number(minimum),\r\n        Number(balance),\r\n        0,\r\n        false,\r\n      );\r\n\r\n      if (!isTooMuch) {\r\n        return value;\r\n      }\r\n    }\r\n  }\r\n};\r\n","import React, { FC, useEffect, useReducer } from \"react\";\r\n\r\nimport {  fetchBase } from \"utils\";\r\nimport { useCoins } from \"hooks\";\r\n\r\n\r\nimport { getSelectedCoinLimits } from \"./reducer/extentions/getSelectedCoinLimits\";\r\nimport { initialRouletteState } from \"./reducer/state\";\r\nimport { rouletteReducer } from \"./reducer/reducer\";\r\nimport { CoinLimit } from \"./reducer/types\";\r\nimport Context from \"./Context\";\r\nimport { clearSetInfoAboutWin } from \"../ControlPanel/components/Control/components/Bet\";\r\n\r\ninterface ConfigurationFetch {\r\n  message: string;\r\n  success: boolean;\r\n  coins: CoinLimit[];\r\n}\r\n\r\nexport const RouletteControl: FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(rouletteReducer, initialRouletteState);\r\n  const { selectedCoin } = useCoins();\r\n\r\n  useEffect(() => {\r\n    const getCoinsConfiguration = async () => {\r\n      const { data } = await fetchBase<ConfigurationFetch>(\r\n        \"roulette/get-configuration\",\r\n      );\r\n\r\n      if (data) {\r\n        dispatch({\r\n          type: \"init\",\r\n          value: data.coins,\r\n        });\r\n      }\r\n    };\r\n\r\n    getCoinsConfiguration();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCoin?.coin) {\r\n      const limit = getSelectedCoinLimits(\r\n        selectedCoin.coin,\r\n        state.betPanel.limits.limitsList,\r\n      );\r\n\r\n      limit &&\r\n        dispatch({\r\n          type: \"set_selected_coin\",\r\n          limit,\r\n        });\r\n\r\n      dispatch({\r\n        type: \"set_auto_started\",\r\n        value: false,\r\n      });\r\n\r\n      clearSetInfoAboutWin();\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout();\r\n    };\r\n  }, [selectedCoin?.coin, state.betPanel.limits.limitsList]);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n      }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default RouletteControl;\r\n","import { CoinName } from \"hooks\";\r\nimport { CoinLimit } from \"../types\";\r\n\r\nexport const getSelectedCoinLimits = (\r\n  actualCoin: CoinName,\r\n  limits: CoinLimit[],\r\n) => limits.find((value) => value.coin === actualCoin);\r\n","import {\r\n  RouletteCellStateType,\r\n  ControlCellStateType,\r\n  BetTable,\r\n  CellPanelValue,\r\n  SeriesType,\r\n  ControlPanelValue,\r\n} from \"pages/Roulette/components/Reducer/reducer/types\";\r\n\r\nconst calcNumbers = ([number, value]: [string, CellPanelValue]): BetTable => ({\r\n  type: \"number\",\r\n  number: number,\r\n  bet_amt: value.betAmount.toFixed(8),\r\n});\r\n\r\nconst calcPanel = ([series, value]: [\r\n  SeriesType,\r\n  ControlPanelValue,\r\n]): BetTable => ({\r\n  type: \"series\",\r\n  series,\r\n  bet_amt: value.betAmount.toFixed(8),\r\n});\r\n\r\nexport const createBetTable = (\r\n  cellPanel: RouletteCellStateType,\r\n  controlPanel: ControlCellStateType,\r\n) => {\r\n  const cellTable = Object.entries(cellPanel).reduce(\r\n    (acm: BetTable[], cell) => {\r\n      if (Number(cell[1].betAmount)) {\r\n        acm.push(calcNumbers(cell));\r\n      }\r\n\r\n      return acm;\r\n    },\r\n    [],\r\n  );\r\n\r\n  const panelTable = Object.entries(controlPanel).reduce(\r\n    (acm: BetTable[], cell) => {\r\n      if (Number(cell[1].betAmount)) {\r\n        //@ts-ignore\r\n        acm.push(calcPanel(cell));\r\n      }\r\n      return acm;\r\n    },\r\n    [],\r\n  );\r\n\r\n  return [...cellTable, ...panelTable];\r\n};\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { createTimeouts, fetchBase } from \"utils\";\r\nimport { useSeed } from \"providers\";\r\nimport { Button, SwitchBox, notifyBarManager } from \"components\";\r\nimport { coinsManager, useCoins } from \"hooks\";\r\n\r\nimport { useHotKeyListener } from \"components/HotKeys/Listener\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport {\r\n  rouletteEndAnimationMethods,\r\n  roulettePlayAnimations,\r\n} from \"pages/Roulette/components/Reducer/reducer/config\";\r\nimport { startRouletteAutoMode } from \"pages/Roulette/components/Reducer/reducer/extentions/autoMode\";\r\nimport {\r\n  PlayBet,\r\n  RouletteState,\r\n} from \"pages/Roulette/components/Reducer/reducer/types\";\r\n\r\nimport { createBetTable } from \"./createBetTable\";\r\nimport { useButtonText } from \"./useButtonText\";\r\nimport css from \"./style.module.scss\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\n\r\nconst { clearTimeouts, pushTimeout } = createTimeouts();\r\nlet isNoStats = false;\r\nexport const clearSetInfoAboutWin = () => (isNoStats = true);\r\n\r\nexport const Bet = () => {\r\n  const intl = useGetLocale();\r\n  const { state, dispatch } = useRouletteControl();\r\n  const { rotateClientSeed, updateNonce, clientSeed } = useSeed();\r\n  const { selectedCoin } = useCoins();\r\n  const buttonText = useButtonText();\r\n\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { ballSpinLong, winning, loss, win } = getSoundEffectNames(\r\n    gamePathNames.ROULETTE,\r\n  );\r\n  const handleSetIsAuto = useCallback((value) => {\r\n    dispatch({\r\n      type: \"set_auto_open\",\r\n      value,\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (\r\n      !state.betPanel.isRouletteAnimationPlay &&\r\n      state.betPanel.lastProfitValue &&\r\n      state.betPanel.winNumber\r\n    ) {\r\n      if (Number(state.betPanel.lastProfitValue) > 0) {\r\n        playEffect(winning);\r\n      }\r\n      if (Number(state.betPanel.lastProfitValue) === 0) {\r\n        playEffect(win);\r\n      }\r\n      if (Number(state.betPanel.lastProfitValue) < 0) {\r\n        playEffect(loss);\r\n      }\r\n    }\r\n  }, [state.betPanel.isRouletteAnimationPlay, state.betPanel.lastProfitValue]);\r\n\r\n  const play = async (state: RouletteState) => {\r\n    isNoStats = false;\r\n    roulettePlayAnimations.setStartAnimation();\r\n    if (!state.autoPanel.isStarted) {\r\n      playEffect(ballSpinLong);\r\n      dispatch({\r\n        type: \"set_win\",\r\n        value: \"\",\r\n      });\r\n    }\r\n\r\n    if (clientSeed) {\r\n      const betTable = createBetTable(state.cellPanel, state.controlPanel);\r\n\r\n      const { data, error } = await fetchBase<PlayBet>(\"roulette/play\", {\r\n        variables: {\r\n          bet_table: betTable,\r\n          coin: selectedCoin?.coin,\r\n          client_seed: clientSeed?.seed,\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        notifyBarManager.error({\r\n          message: error,\r\n          timeOut: 4000,\r\n        });\r\n        dispatch({\r\n          type: \"set_win\",\r\n          value: undefined,\r\n        });\r\n      }\r\n\r\n      if (data && data.success) {\r\n        if (!state.autoPanel.isStarted) {\r\n          roulettePlayAnimations.setFinishAnimation(data.outcome);\r\n        }\r\n\r\n        pushTimeout(() => {\r\n          dispatch({\r\n            type: \"set_win\",\r\n            value: data.outcome,\r\n            profit: data.profit,\r\n            noStats: isNoStats,\r\n            coin: data.coin,\r\n          });\r\n        }, 1000);\r\n\r\n        coinsManager.coinValueUpdate(data.balance, data.coin);\r\n      }\r\n\r\n      if (!clientSeed?.isSetManually) {\r\n        rotateClientSeed();\r\n      } else {\r\n        updateNonce();\r\n      }\r\n\r\n      return { data, error };\r\n    }\r\n  };\r\n\r\n  const bet = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      if (!state.autoPanel.isOpen) {\r\n        dispatch({\r\n          type: \"change_animation\",\r\n          value: true,\r\n        });\r\n        play(state);\r\n      } else {\r\n        if (!state.autoPanel.isStarted) {\r\n          startRouletteAutoMode(play, state, dispatch);\r\n        } else {\r\n          dispatch({\r\n            type: \"set_auto_started\",\r\n            value: false,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      notifyBarManager.error({\r\n        message: intl.formatMessage({\r\n          id: \"plinko.bet.notLoggedIn\",\r\n        }),\r\n        timeOut: 4000,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    rouletteEndAnimationMethods[0] = () => {\r\n      dispatch({\r\n        type: \"change_animation\",\r\n        value: false,\r\n      });\r\n    };\r\n\r\n    return () => {\r\n      dispatch({\r\n        type: \"set_auto_started\",\r\n        value: false,\r\n      });\r\n\r\n      clearTimeouts();\r\n    };\r\n  }, []);\r\n\r\n  useHotKeyListener({\r\n    callbackSpace: () => {\r\n      if (\r\n        Number(state.betPanel.totalAmount) <\r\n        Number(state.betPanel.limits.actualCoinLimit?.minimum_bet)\r\n      ) {\r\n        return;\r\n      }\r\n      bet();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <SwitchBox\r\n        isChecked={state.autoPanel.isOpen}\r\n        text={{\r\n          off: intl.formatMessage({ id: \"crashInterface.bet.switch.manual\" }),\r\n          on: intl.formatMessage({ id: \"crashInterface.bet.switch.auto\" }),\r\n          color: \"#ffffff\",\r\n        }}\r\n        switchHandleChange={handleSetIsAuto}\r\n        classes={{\r\n          root: css.switch,\r\n          switch: {\r\n            toggle: css.switchToggle,\r\n            track: css.switchTrack,\r\n          },\r\n        }}\r\n      />\r\n      <Button\r\n        onClick={bet}\r\n        className={css.button}\r\n        disabled={\r\n          Number(state.betPanel.totalAmount) <\r\n          Number(state.betPanel.limits.actualCoinLimit?.minimum_bet)\r\n          // || state.betPanel.isRouletteAnimationPlay //It is necessary either to refine the logic of the animation, or not to enable this dependency\r\n        }>\r\n        {buttonText}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport { useMemo } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nexport const useButtonText = () => {\r\n  const intl = useGetLocale();\r\n  const { state } = useRouletteControl();\r\n\r\n  return useMemo(() => {\r\n    if (state.autoPanel.isOpen) {\r\n      if (state.autoPanel.isStarted) {\r\n        return intl.formatMessage({\r\n          id: \"crashInterface.bet.button.autoStop\",\r\n        });\r\n      } else {\r\n        return intl.formatMessage({\r\n          id: \"crashInterface.bet.button.autoStart\",\r\n        });\r\n      }\r\n    } else {\r\n      return intl.formatMessage({\r\n        id: \"crashInterface.bet.button.placeABet\",\r\n      });\r\n    }\r\n  }, [state.autoPanel.isOpen, state.autoPanel.isStarted]);\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { RouletteActions, RouletteState } from \"../../types\";\r\nimport { setRouletteBaseBet } from \"./baseBetValues\";\r\nimport { rouletteAutoMode } from \"./playAuto\";\r\nimport { PlayFunction } from \"./types\";\r\n\r\nexport const startRouletteAutoMode = (\r\n  play: PlayFunction,\r\n  state: RouletteState,\r\n  dispatch: Dispatch<RouletteActions>,\r\n) => {\r\n  const { cellPanel, controlPanel, autoPanel } = state;\r\n  const { real } = autoPanel.limits;\r\n\r\n  real.numberOfBets = 0;\r\n  real.profit = 0;\r\n\r\n  setRouletteBaseBet({\r\n    cellPanel: JSON.stringify(cellPanel),\r\n    controlPanel: JSON.stringify(controlPanel),\r\n  });\r\n\r\n  rouletteAutoMode(play, state, dispatch);\r\n};\r\n","import React, { Dispatch } from \"react\";\r\nimport { initialRouletteState } from \"./reducer/state\";\r\nimport { RouletteActions, RouletteState } from \"./reducer/types\";\r\n\r\ntype RouletteControlContext = {\r\n  state: RouletteState;\r\n  dispatch: Dispatch<RouletteActions>;\r\n};\r\n\r\nexport const defaultValue: RouletteControlContext = {\r\n  state: initialRouletteState,\r\n  dispatch: () => initialRouletteState,\r\n};\r\n\r\nexport const Context =\r\n  React.createContext<RouletteControlContext>(defaultValue);\r\n\r\nexport default Context;\r\n","interface BaseBetValues {\r\n  cellPanel: string;\r\n  controlPanel: string;\r\n}\r\n\r\ninterface BaseBet {\r\n  values?: BaseBetValues;\r\n}\r\n\r\nexport const rouletteBaseBet: BaseBet = {};\r\n\r\nexport const setRouletteBaseBet = (values: BaseBetValues) => {\r\n  rouletteBaseBet.values = values;\r\n};\r\n","import { coinsManager } from \"hooks\";\r\nimport { multiplyCoefficientValue } from \"../../config\";\r\nimport { RouletteState } from \"../../types\";\r\nimport { calculateWithMultiplier } from \"../calculateTotalAmount\";\r\n\r\ninterface CellList {\r\n  [key: string]: {\r\n    betAmount: number;\r\n  };\r\n}\r\n\r\nexport const changeBetValue = (state: RouletteState, percent: string) => {\r\n  const { controlPanel, cellPanel, betPanel } = state;\r\n  const percentValue = Number(percent) / 100;\r\n\r\n  const calculateCellAmount = (cell: { betAmount: number }) => {\r\n    const difference =\r\n      Math.round(cell.betAmount * multiplyCoefficientValue) * percentValue;\r\n    const calculatedAmount =\r\n      (Math.round(cell.betAmount * multiplyCoefficientValue) + difference) /\r\n      multiplyCoefficientValue;\r\n\r\n    cell.betAmount = calculatedAmount > 0 ? Number(calculatedAmount) : 0;\r\n  };\r\n\r\n  const setCellAmount = (cell: { betAmount: number }, amount: number) => {\r\n    if (cell.betAmount) {\r\n      cell.betAmount = amount;\r\n    }\r\n  };\r\n\r\n  const calculateListAmount = (list: CellList, setValue?: number) => {\r\n    return Object.values(list).reduce(\r\n      (acm, cell) => {\r\n        if (!setValue) {\r\n          calculateCellAmount(cell);\r\n        } else {\r\n          setCellAmount(cell, setValue);\r\n        }\r\n        return {\r\n          totalBet: calculateWithMultiplier(\r\n            acm.totalBet,\r\n            cell.betAmount,\r\n            \"add\",\r\n          ),\r\n          chipCellsAmount: cell.betAmount\r\n            ? acm.chipCellsAmount + 1\r\n            : acm.chipCellsAmount,\r\n        };\r\n      },\r\n      {\r\n        totalBet: 0,\r\n        chipCellsAmount: 0,\r\n      },\r\n    );\r\n  };\r\n\r\n  const calculateTotalAmount = (setValue?: number) => {\r\n    const cellAmount = calculateListAmount(cellPanel, setValue);\r\n    const panelAmount = calculateListAmount(controlPanel, setValue);\r\n    return {\r\n      totalBet: calculateWithMultiplier(\r\n        cellAmount.totalBet,\r\n        panelAmount.totalBet,\r\n        \"add\",\r\n      ),\r\n      chipCellsAmount: cellAmount.chipCellsAmount + panelAmount.chipCellsAmount,\r\n    };\r\n  };\r\n\r\n  let totalAmount = calculateTotalAmount();\r\n\r\n  const { limits } = betPanel;\r\n  const maximum_bet = Number(limits.actualCoinLimit?.maximum_bet),\r\n    minimum_bet = Number(limits.actualCoinLimit?.minimum_bet),\r\n    balance = Number(coinsManager.selectedCoin?.balance);\r\n\r\n  if (totalAmount.totalBet > maximum_bet || totalAmount.totalBet > balance) {\r\n    const newMaxValue =\r\n      Math.floor(\r\n        Math.round(Math.min(maximum_bet, balance) * multiplyCoefficientValue) /\r\n          totalAmount.chipCellsAmount,\r\n      ) / multiplyCoefficientValue;\r\n\r\n    totalAmount = calculateTotalAmount(newMaxValue);\r\n  }\r\n\r\n  if (totalAmount.totalBet < minimum_bet) {\r\n    totalAmount = calculateTotalAmount(\r\n      Math.ceil(\r\n        Math.round(minimum_bet * multiplyCoefficientValue) /\r\n          totalAmount.chipCellsAmount,\r\n      ) / multiplyCoefficientValue,\r\n    );\r\n  }\r\n\r\n  state.betPanel.totalAmount = totalAmount.totalBet;\r\n};\r\n","import { multiplyCoefficientValue } from \"../config\";\r\n\r\nexport const calculateWithMultiplier = (\r\n  firstValue: number,\r\n  secondValue: number,\r\n  type: \"add\" | \"remove\" | \"divide\" | \"multiply\",\r\n) => {\r\n  const first = Math.round(firstValue * multiplyCoefficientValue),\r\n    second = Math.round(secondValue * multiplyCoefficientValue);\r\n\r\n  switch (type) {\r\n    case \"add\":\r\n      return Number(((first + second) / multiplyCoefficientValue).toFixed(8));\r\n\r\n    case \"remove\":\r\n      return Number(((first - second) / multiplyCoefficientValue).toFixed(8));\r\n\r\n    case \"divide\":\r\n      return Number((first / second / multiplyCoefficientValue).toFixed(8));\r\n\r\n    case \"multiply\":\r\n      return Number(((first * second) / multiplyCoefficientValue).toFixed(8));\r\n    default:\r\n      return NaN;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"rouletteBoxSize\":\"270\",\"cellPanelMargin\":\"20\",\"rouletteCellGap\":\"5\",\"rouletteCellSize\":\"50\",\"img\":\"style_img__1IoJV\",\"rouletteRoot\":\"style_rouletteRoot__24234\",\"roulette\":\"style_roulette__1vigi\",\"rootPanel\":\"style_rootPanel__2vCyA\",\"rotated\":\"style_rotated__3AWqU\",\"cellPanel\":\"style_cellPanel__wX52U\",\"cells\":\"style_cells__1fFQz\",\"cell\":\"style_cell__2OixH\",\"rowCell\":\"style_rowCell__3A2aQ\",\"zeroCell\":\"style_zeroCell__1kHIy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rouletteBoxSize\":\"270\",\"img\":\"style_img__OBsBm\",\"rouletteRoot\":\"style_rouletteRoot__1DnbQ\",\"roulette\":\"style_roulette__2vhBp\"};","import { useDocumentLoaded } from \"hooks\";\r\nimport { useWindowSize } from \"providers\";\r\nimport React, { FC, useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nimport { CellsPanel, History } from \"./components\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  isRouletteHidden: boolean;\r\n  isDesktop: boolean;\r\n  setIsDesktop: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const RoulettePanel: FC<Props> = ({\r\n  isDesktop,\r\n  setIsDesktop,\r\n  isRouletteHidden,\r\n}) => {\r\n  const { width } = useWindowSize();\r\n  const isLoaded = useDocumentLoaded();\r\n  const [rootWidth, setRootWidth] = useState(0);\r\n  const cellRootRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const setWidth = (node: HTMLDivElement | null) => {\r\n    if (node) {\r\n      setRootWidth(node.offsetWidth);\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (cellRootRef.current) {\r\n      setWidth(cellRootRef.current);\r\n    }\r\n  }, [width, isLoaded]);\r\n  return (\r\n    <div\r\n      className={css.root}\r\n      ref={(node) => {\r\n        setWidth(node);\r\n        cellRootRef.current = node;\r\n      }}>\r\n      <CellsPanel\r\n        {...{\r\n          isDesktop,\r\n          setIsDesktop,\r\n          rootWidth,\r\n        }}\r\n      />\r\n      <History\r\n        {...{\r\n          rootWidth,\r\n          isDesktop,\r\n          isRouletteHidden,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\n\r\nimport LiveStats from \"components/LiveStats\";\r\nimport { HotKeysModal } from \"components/HotKeys\";\r\nimport LazyComponentLoader from \"config/LazyComponentLoader\";\r\n\r\nimport { RouletteOptionsState } from \"..\";\r\nimport { SoundModals } from \"components/SoundModal\";\r\n\r\nconst BettingInformation = React.lazy(() =>\r\n  LazyComponentLoader(import(\"pages/ModalPages/pages/BettingInformation\")),\r\n);\r\n\r\ninterface Props {\r\n  state: RouletteOptionsState;\r\n  setState: (value: RouletteOptionsState) => void;\r\n}\r\n\r\nconst Modals: FC<Props> = ({ state, setState }) => {\r\n  const handleLiveStatsClose = () => {\r\n    setState({\r\n      ...state,\r\n      liveStats: {\r\n        ...state.liveStats,\r\n        isOpen: false,\r\n      },\r\n    });\r\n  };\r\n  const handleHotKeysClose = () => {\r\n    setState({\r\n      ...state,\r\n      hotKeys: {\r\n        isOpen: false,\r\n      },\r\n    });\r\n  };\r\n  const handleBetInfoClose = () => {\r\n    setState({\r\n      ...state,\r\n      betInfo: {\r\n        isOpen: false,\r\n      },\r\n    });\r\n  };\r\n  const handleSoundClose = () => {\r\n    setState({\r\n      ...state,\r\n      sound: {\r\n        isOpen: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SoundModals isOpen={state.sound.isOpen} onClose={handleSoundClose} />\r\n      <LiveStats\r\n        handleClose={handleLiveStatsClose}\r\n        isOpen={state.liveStats.isOpen}\r\n      />\r\n      <HotKeysModal\r\n        isOpen={state.hotKeys.isOpen}\r\n        onClose={handleHotKeysClose}\r\n      />\r\n      <BettingInformation\r\n        game=\"roulette\"\r\n        onClose={handleBetInfoClose}\r\n        isOpen={state.betInfo.isOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modals;\r\n","import React, { useState } from \"react\";\r\nimport { ReactComponent as ReloadIcon } from \"assets/icons/cached.svg\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport OptionWrapper from \"components/OptionsButton/OptionElement\";\r\nimport OptionsButton from \"components/OptionsButton\";\r\n\r\nimport css from \"./style.module.scss\";\r\nimport Modals from \"./Modals\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\nimport {\r\n  gamePathNames,\r\n  getSoundEffectNames,\r\n} from \"components/SoundModal/Provider/config\";\r\n\r\nexport interface RouletteOptionsState {\r\n  liveStats: {\r\n    isOpen: boolean;\r\n  };\r\n  hotKeys: {\r\n    isOpen: boolean;\r\n  };\r\n  betInfo: {\r\n    isOpen: boolean;\r\n  };\r\n  sound: {\r\n    isOpen: boolean;\r\n  };\r\n}\r\n\r\nexport const Options = () => {\r\n  const intl = useGetLocale();\r\n\r\n  const { dispatch } = useRouletteControl();\r\n  const [optionsState, setOptionsState] = useState<RouletteOptionsState>({\r\n    liveStats: {\r\n      isOpen: false,\r\n    },\r\n    hotKeys: {\r\n      isOpen: false,\r\n    },\r\n    betInfo: {\r\n      isOpen: false,\r\n    },\r\n    sound: {\r\n      isOpen: false,\r\n    },\r\n  });\r\n  const {\r\n    controlFunctions: { playEffect },\r\n  } = useSoundSystemControl();\r\n  const { numberShuffle } = getSoundEffectNames(gamePathNames.ROULETTE);\r\n  const reload = () => {\r\n    playEffect(numberShuffle);\r\n    dispatch({\r\n      type: \"chip_clean\",\r\n    });\r\n  };\r\n\r\n  const handleSetLiveStatsIsOpen = () => {\r\n    setOptionsState({\r\n      ...optionsState,\r\n      liveStats: {\r\n        ...optionsState.liveStats,\r\n        isOpen: !optionsState.liveStats.isOpen,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleHotKeysOpen = () => {\r\n    setOptionsState({\r\n      ...optionsState,\r\n      hotKeys: {\r\n        isOpen: true,\r\n      },\r\n    });\r\n  };\r\n  const handleSoundChange = () => {\r\n    setOptionsState({\r\n      ...optionsState,\r\n      sound: {\r\n        isOpen: !optionsState.sound.isOpen,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleBetInfoOpen = () => {\r\n    setOptionsState({\r\n      ...optionsState,\r\n      betInfo: {\r\n        isOpen: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p onClick={reload} className={css.reloadButton}>\r\n        <OptionWrapper Icon={ReloadIcon} />\r\n        {intl.formatMessage({\r\n          id: \"roulette.reload\",\r\n        })}\r\n      </p>\r\n      <OptionsButton\r\n        withSound\r\n        soundOnClick={handleSoundChange}\r\n        liveStatOnclick={handleSetLiveStatsIsOpen}\r\n        hotKeysOnClick={handleHotKeysOpen}\r\n        bettingInformationOnClick={handleBetInfoOpen}\r\n      />\r\n      <Modals state={optionsState} setState={setOptionsState} />\r\n      <div className={css.line} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { useWindowSize } from \"providers\";\r\nimport { useCoins } from \"hooks\";\r\n\r\nimport { ReactComponent as LeftArrowIcon } from \"assets/icons/navigate-before.svg\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport { Price } from \"pages/Roulette/components/Reducer/reducer/types\";\r\nimport { Chip } from \"pages/Roulette/components/RoulettePanel/components\";\r\nimport { isChipBetDisable } from \"pages/Roulette/components/Reducer/reducer/extentions/isChipBetDisable\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nconst prices: Price[] = [\r\n  \"1\",\r\n  \"10\",\r\n  \"100\",\r\n  \"1K\",\r\n  \"10K\",\r\n  \"100K\",\r\n  \"1M\",\r\n  \"10M\",\r\n  \"100M\",\r\n  \"1B\",\r\n  \"10B\",\r\n  \"100B\",\r\n  \"1T\",\r\n];\r\nconst chipSize = 47;\r\n\r\nexport const ChipInput = () => {\r\n  const { state, dispatch } = useRouletteControl();\r\n  const chipBoxRef = useRef<HTMLDivElement>(null);\r\n  const [blocked, setBlocked] = useState<\"left\" | \"right\" | \"none\" | \"both\">(\r\n    \"left\",\r\n  );\r\n  const { width } = useWindowSize();\r\n  const { selectedCoin } = useCoins(\"selectedCoin\");\r\n\r\n  const scroll = (direction: \"left\" | \"right\") => {\r\n    if (chipBoxRef.current) {\r\n      const box = chipBoxRef.current;\r\n\r\n      const scrollValue =\r\n        direction === \"right\" ? chipSize * 2 : chipSize * 2 * -1;\r\n      const scrollLeft = box.scrollLeft + scrollValue;\r\n      const maxLeftScroll = box.scrollWidth - box.offsetWidth;\r\n\r\n      if (maxLeftScroll === 0) {\r\n        setBlocked(\"both\");\r\n      } else if (scrollLeft <= 0) {\r\n        setBlocked(\"left\");\r\n      } else if (scrollLeft >= maxLeftScroll) {\r\n        setBlocked(\"right\");\r\n      } else {\r\n        setBlocked(\"none\");\r\n      }\r\n\r\n      box.scrollTo({\r\n        behavior: \"smooth\",\r\n        left: scrollLeft,\r\n      });\r\n    }\r\n  };\r\n\r\n  const scrollToRight = () => {\r\n    scroll(\"right\");\r\n  };\r\n\r\n  const scrollToLeft = () => {\r\n    scroll(\"left\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToLeft();\r\n  }, [width]);\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <button\r\n        className={clsx(css.button, {\r\n          [css.buttonDisable]: blocked === \"left\" || blocked === \"both\",\r\n        })}\r\n        onClick={scrollToLeft}>\r\n        <LeftArrowIcon className={css.arrow} />\r\n      </button>\r\n      <div className={css.chipBox} ref={chipBoxRef}>\r\n        {prices.map((value) => {\r\n          const callBack = () => {\r\n            dispatch({\r\n              type: \"chip_select\",\r\n              value,\r\n            });\r\n          };\r\n\r\n          const isDisable = isChipBetDisable(\r\n            value,\r\n            Number(state.betPanel.limits.actualCoinLimit?.maximum_bet),\r\n            Number(selectedCoin?.balance),\r\n            state.betPanel.totalAmount,\r\n            state.autoPanel.isStarted,\r\n          );\r\n\r\n          return (\r\n            <React.Fragment key={value}>\r\n              <Chip\r\n                price={value}\r\n                onClick={() => {\r\n                  !isDisable && callBack();\r\n                }}\r\n                className={clsx(\r\n                  css.chip,\r\n                  {\r\n                    [css.chipSelected]: state.betPanel.selectedChip === value,\r\n                  },\r\n                  {\r\n                    [css.chipDisable]: isDisable,\r\n                  },\r\n                )}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        className={clsx(css.button, {\r\n          [css.buttonDisable]: blocked === \"right\" || blocked === \"both\",\r\n        })}\r\n        onClick={scrollToRight}>\r\n        <LeftArrowIcon className={clsx(css.rightArrow, css.arrow)} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GetCoinImg, InputAdornment } from \"components\";\r\nimport { useHotKeyListener } from \"components/HotKeys/Listener\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport { RouletteInput } from \"../../../index\";\r\nimport css from \"./style.module.scss\";\r\nimport ButtonComponent from \"components/Button\";\r\n\r\nexport const BetInput = () => {\r\n  const { dispatch, state } = useRouletteControl();\r\n\r\n  const divideBet = useCallback(() => {\r\n    dispatch({\r\n      type: \"change_bet_amount\",\r\n      value: \"divide\",\r\n    });\r\n  }, []);\r\n\r\n  const multiplyBet = useCallback(() => {\r\n    dispatch({\r\n      type: \"change_bet_amount\",\r\n      value: \"multiply\",\r\n    });\r\n  }, []);\r\n\r\n  useHotKeyListener({\r\n    callbackKeyA: divideBet,\r\n    callbackKeyS: multiplyBet,\r\n  });\r\n\r\n  const Buttons = () => (\r\n    <div className={css.buttons}>\r\n      <ButtonComponent\r\n        className={clsx(css.button, css.leftButton)}\r\n        disabled={state.autoPanel.isStarted}\r\n        onClick={divideBet}>\r\n        1/2\r\n      </ButtonComponent>\r\n      <ButtonComponent\r\n        className={clsx(css.button, css.rightButton)}\r\n        disabled={state.autoPanel.isStarted}\r\n        onClick={multiplyBet}>\r\n        2x\r\n      </ButtonComponent>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <RouletteInput\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <GetCoinImg className={css.coinImg} />\r\n          </InputAdornment>\r\n        }\r\n        className={clsx(css.input, {\r\n          [css.errorCoin]:\r\n            state.betPanel.totalAmount &&\r\n            Number(state.betPanel.totalAmount) <\r\n              Number(state.betPanel.limits.actualCoinLimit?.minimum_bet),\r\n        })}\r\n        value={\r\n          state.betPanel.totalAmount\r\n            ? state.betPanel.totalAmount.toFixed(8)\r\n            : \"0\"\r\n        }\r\n        placeholder={`Min bet: ${\r\n          state.betPanel.limits.actualCoinLimit?.minimum_bet || \"0.00000000\"\r\n        }`}\r\n        endAdornment={<Buttons />}\r\n        disabled\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useRef } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { useWindowSize } from \"providers\";\r\nimport { GetCoinImg } from \"components\";\r\nimport { useCoins, useDocumentLoaded } from \"hooks\";\r\n\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport { ChipInput, BetInput } from \"./components\";\r\nimport css from \"./style.module.scss\";\r\nimport { Bet } from \"..\";\r\n\r\nexport const Manual = () => {\r\n  const intl = useGetLocale();\r\n\r\n  const { state } = useRouletteControl();\r\n  const { width } = useWindowSize();\r\n  const isLoad = useDocumentLoaded();\r\n  const { selectedCoin } = useCoins(\"selectedCoin\");\r\n\r\n  const rootRef = useRef<HTMLDivElement>(null);\r\n\r\n  const rootGridStyle = useMemo(() => {\r\n    const box = rootRef.current;\r\n\r\n    if (box && isLoad) {\r\n      const maxWidth = 750;\r\n      if (box.offsetWidth < maxWidth) {\r\n        return {\r\n          gridTemplateColumns: \"100%\",\r\n        };\r\n      }\r\n    }\r\n\r\n    return {};\r\n  }, [rootRef.current, width, isLoad]);\r\n\r\n  return (\r\n    <div className={css.root} ref={rootRef} style={rootGridStyle}>\r\n      <span>\r\n        <p className={css.title}>\r\n          {`${intl.formatMessage({\r\n            id: \"roulette.chipValue\",\r\n          })} `}\r\n          ({state.betPanel.chipPrice}\r\n          <GetCoinImg className={css.coin} />)\r\n        </p>\r\n        <ChipInput />\r\n      </span>\r\n\r\n      <Bet />\r\n\r\n      <span>\r\n        <p className={css.title}>\r\n          {`${intl.formatMessage({\r\n            id: \"roulette.totalBet\",\r\n          })} ($`}\r\n          {(\r\n            state.betPanel.totalAmount * Number(selectedCoin?.price) || 0\r\n          ).toFixed(8)}\r\n          )\r\n        </p>\r\n        <BetInput />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { AutoOnOptions } from \"components\";\r\nimport { OnOptionValues } from \"components/AutoOnOptions\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport { RouletteInput } from \"../../..\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const Operations = () => {\r\n  const { state, dispatch } = useRouletteControl();\r\n\r\n  const changeOnOption = (\r\n    value: OnOptionValues,\r\n    operation: \"onWin\" | \"onLoss\",\r\n  ) => {\r\n    dispatch({\r\n      type: \"set_on_option_value\",\r\n      operation,\r\n      value,\r\n    });\r\n  };\r\n\r\n  const handleChangeOnWin = useCallback((value: OnOptionValues) => {\r\n    changeOnOption(value, \"onWin\");\r\n  }, []);\r\n  const handleChangeOnLoss = useCallback((value: OnOptionValues) => {\r\n    changeOnOption(value, \"onLoss\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <AutoOnOptions\r\n        title={\"on Win\"}\r\n        value={state.autoPanel.values.onWin}\r\n        onChange={handleChangeOnWin}\r\n        Input={RouletteInput}\r\n      />\r\n      <AutoOnOptions\r\n        title={\"on Loss\"}\r\n        value={state.autoPanel.values.onLoss}\r\n        onChange={handleChangeOnLoss}\r\n        Input={RouletteInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useCallback } from \"react\";\r\n\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\nimport { NumberOfBetsInput } from \"components\";\r\nimport css from \"./style.module.scss\";\r\n\r\nconst NumberOfBets = () => {\r\n  const { dispatch, state } = useRouletteControl();\r\n\r\n  const handleChange = useCallback(\r\n    ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = target;\r\n      if (Number(value) >= 0) {\r\n        dispatch({\r\n          type: \"set_auto_number_of_bets\",\r\n          value,\r\n        });\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <NumberOfBetsInput\r\n        value={state.autoPanel.limits.expected.numberOfBets}\r\n        onChange={handleChange}\r\n        className={css.input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberOfBets;\r\n","import React, { ChangeEvent, FC, FocusEvent, useCallback } from \"react\";\r\nimport { useGetLocale } from \"providers\";\r\n\r\nimport { GetCoinImg, Input, InputAdornment } from \"components\";\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  type: \"win\" | \"loss\";\r\n}\r\n\r\nconst StopOn: FC<Props> = ({ type }) => {\r\n  const intl = useGetLocale();\r\n  const { dispatch, state } = useRouletteControl();\r\n\r\n  const handleOnChange = useCallback(\r\n    ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = target;\r\n      if (Number(value) || value === \"0\") {\r\n        dispatch({\r\n          type: \"set_auto_limits\",\r\n          value: {\r\n            type,\r\n            value,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleOnBlur = useCallback(\r\n    ({ target }: FocusEvent<HTMLInputElement>) => {\r\n      const { value } = target;\r\n      if (Number(value) || value === \"0\") {\r\n        dispatch({\r\n          type: \"set_auto_limits\",\r\n          value: {\r\n            type,\r\n            value: Math.abs(Number(value)).toFixed(8),\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      <Input\r\n        onChange={handleOnChange}\r\n        onBlur={handleOnBlur}\r\n        label={intl.formatMessage({\r\n          id: `crashInterface.autoBet.${\r\n            type === \"win\" ? \"stopOnProfit\" : \"stopOnLoss\"\r\n          }`,\r\n        })}\r\n        classes={{\r\n          input: css.input,\r\n          root: css.inputRoot,\r\n        }}\r\n        value={\r\n          type === \"win\"\r\n            ? state.autoPanel.limits.expected.stopOnProfit\r\n            : state.autoPanel.limits.expected.stopOnLoss\r\n        }\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <GetCoinImg className={css.coin} />\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopOn;\r\n","import React from \"react\";\r\n\r\nimport NumberOfBets from \"./NumberOfBets\";\r\nimport css from \"./style.module.scss\";\r\nimport StopOn from \"./StopOn\";\r\n\r\nexport const Limits = () => {\r\n  return (\r\n    <div className={css.root}>\r\n      <StopOn type=\"win\" />\r\n      <StopOn type=\"loss\" />\r\n      <NumberOfBets />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Operations, Limits } from \"./components\";\r\n\r\nexport const Auto = () => {\r\n  return (\r\n    <div>\r\n      <Operations />\r\n      <Limits />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport InputBase, { BaseInputProps } from \"components/Input/InputBase\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const RouletteInput: FC<BaseInputProps> = ({ className, ...props }) => {\r\n  return <InputBase className={clsx(css.root, className)} {...props} />;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useRouletteControl } from \"pages/Roulette/components/Reducer\";\r\n\r\nimport { Manual, Auto } from \"./components\";\r\n\r\nexport const Control = () => {\r\n  const { state } = useRouletteControl();\r\n  return (\r\n    <div>\r\n      <Manual />\r\n      {state.autoPanel.isOpen && <Auto />}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Control, Options } from \"./components\";\r\n\r\nexport const ControlPanel = () => {\r\n  return (\r\n    <div>\r\n      <Options />\r\n      <Control />\r\n    </div>\r\n  );\r\n};\r\n","import { Scene } from \"phaser\";\r\n\r\nimport { Follower } from \"../types\";\r\nimport { dots, angles } from \"../data\";\r\nimport { rouletteBoxSize } from \"../../data/config\";\r\nimport {\r\n  rouletteEndAnimationMethods,\r\n  roulettePlayAnimations,\r\n} from \"pages/Roulette/components/Reducer/reducer/config\";\r\n\r\nconst cellAmount = Object.keys(angles).length;\r\n\r\nexport default class Roulette {\r\n  scene: Scene;\r\n  ball?: Phaser.GameObjects.Arc;\r\n  layer?: Phaser.GameObjects.Container;\r\n\r\n  circlePath?: Phaser.Curves.Path;\r\n  circleFollower: Follower;\r\n\r\n  finishPath?: Phaser.Curves.Path;\r\n  finishTween?: Phaser.Tweens.Tween;\r\n  finishFollower: Follower;\r\n\r\n  rouletteCellNumber: keyof typeof angles | null = null;\r\n\r\n  animationStepState = {\r\n    finish: false,\r\n    default: false,\r\n\r\n    isReady: false,\r\n  };\r\n\r\n  constructor(scene: Scene) {\r\n    this.scene = scene;\r\n\r\n    this.circleFollower = { t: 0, vec: new Phaser.Math.Vector2() };\r\n    this.finishFollower = { ...this.circleFollower };\r\n  }\r\n\r\n  draw() {\r\n    const ballSize = 10;\r\n\r\n    this.layer = this.scene.add.container(\r\n      rouletteBoxSize / 2,\r\n      rouletteBoxSize / 2,\r\n    );\r\n\r\n    this.ball = this.scene.add\r\n      .circle(0, 0, ballSize / 2, 0xffffff)\r\n      .setOrigin(0.5);\r\n\r\n    this.layer.add(this.ball);\r\n\r\n    roulettePlayAnimations.setFinishAnimation = (value: string | number) => {\r\n      this.animationStepState.isReady = true;\r\n      //@ts-ignore\r\n      this.rouletteCellNumber = `${value}`;\r\n    };\r\n    roulettePlayAnimations.setStartAnimation = () => {\r\n      this.animationStepState.finish = false;\r\n      this.animationStepState.default = false;\r\n\r\n      this.rouletteCellNumber = \"18\";\r\n    };\r\n    roulettePlayAnimations.setStopAnimation = () => {\r\n      this.rouletteCellNumber = null;\r\n    };\r\n  }\r\n\r\n  createCirclePath() {\r\n    const edgeDistanceDivider = 4.5;\r\n    const radius = (rouletteBoxSize + rouletteBoxSize) / edgeDistanceDivider;\r\n\r\n    this.circlePath = new Phaser.Curves.Path();\r\n    this.circlePath.add(\r\n      new Phaser.Curves.Ellipse(\r\n        rouletteBoxSize / 2,\r\n        rouletteBoxSize / 2,\r\n        radius,\r\n      ),\r\n    );\r\n    // this.drawPath(this.circlePath);\r\n\r\n    this.scene.tweens.add({\r\n      targets: this.circleFollower,\r\n      t: 1,\r\n      ease: \"Sine.linear\",\r\n      duration: 1000,\r\n      repeat: -1,\r\n    });\r\n  }\r\n\r\n  createFinishPath() {\r\n    const createPath = () =>\r\n      dots.forEach(([x, y]) => this.finishPath?.lineTo(x, y));\r\n\r\n    this.finishPath = new Phaser.Curves.Path(...dots[0]);\r\n    createPath();\r\n    // this.drawPath(this.finishPath);\r\n\r\n    this.finishTween = this.scene.tweens.add({\r\n      targets: this.finishFollower,\r\n      t: 1,\r\n      ease: \"Sine.Out\",\r\n      duration: 2500,\r\n      repeat: 0,\r\n      onComplete: () => {\r\n        rouletteEndAnimationMethods.forEach((f) => f());\r\n      },\r\n    });\r\n  }\r\n\r\n  checkPath() {\r\n    const positions = {\r\n      //defaultValue === cell [0] position\r\n      x: 220,\r\n      y: 142,\r\n    };\r\n\r\n    if (this.rouletteCellNumber)\r\n      if (this.animationStepState.finish) {\r\n        this.finishPath?.getPoint(\r\n          this.finishFollower.t,\r\n          this.finishFollower.vec,\r\n        );\r\n        positions.x = this.finishFollower.vec.x;\r\n        positions.y = this.finishFollower.vec.y;\r\n      } else {\r\n        this.circlePath?.getPoint(\r\n          this.circleFollower.t,\r\n          this.circleFollower.vec,\r\n        );\r\n        positions.x = this.circleFollower.vec.x;\r\n        positions.y = this.circleFollower.vec.y;\r\n\r\n        if (this.animationStepState.default) {\r\n          const checkPositionX = Math.round(positions.x);\r\n          const checkPositionY = Math.round(positions.y);\r\n\r\n          // check if the ball is in the desired range of coordinates:\r\n          if (\r\n            checkPositionX >= 250 &&\r\n            checkPositionX <= 260 &&\r\n            checkPositionY >= 130 &&\r\n            checkPositionY <= 140\r\n          ) {\r\n            this.animationStepState.finish = true;\r\n            this.finishTween?.restart();\r\n          }\r\n        }\r\n      }\r\n    this.ball?.setPosition(\r\n      positions.x - rouletteBoxSize / 2,\r\n      positions.y - rouletteBoxSize / 2,\r\n    );\r\n  }\r\n\r\n  drawPath(path: Phaser.Curves.Path) {\r\n    const pathGraphics = this.scene.add.graphics();\r\n    pathGraphics.lineStyle(2, 0xffffff, 1);\r\n    path.draw(pathGraphics);\r\n  }\r\n\r\n  setFinishValue() {\r\n    if (this.layer && this.rouletteCellNumber) {\r\n      const circle = 360;\r\n      const cellSize = circle / cellAmount;\r\n\r\n      const calcAngle = cellSize * angles[this.rouletteCellNumber];\r\n      const calcActiveAngle =\r\n        this.layer.angle < 0 ? circle + this.layer.angle : this.layer.angle;\r\n      const anglePosition = Number((calcAngle - calcActiveAngle).toFixed(0));\r\n\r\n      if (anglePosition === 0 || anglePosition === -360) {\r\n        this.layer.setAngle(calcAngle);\r\n\r\n        if (this.animationStepState.isReady) {\r\n          this.animationStepState.default = true;\r\n          this.animationStepState.isReady = false;\r\n        }\r\n      } else {\r\n        const angleSpeedChangeModifier = 0.5; //50%\r\n        const setAngle = Math.min(\r\n          anglePosition > 0\r\n            ? anglePosition * angleSpeedChangeModifier\r\n            : (circle + anglePosition) * angleSpeedChangeModifier,\r\n          5, //max setAngle speed\r\n        );\r\n        this.layer.setAngle(this.layer.angle + setAngle);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Scene } from \"phaser\";\r\nimport Roulette from \"./modules/entities/Roulette\";\r\nimport { RouletteEntities } from \"./modules/types\";\r\n\r\nconst isDevelopment = process.env.NODE_ENV === \"development\";\r\n\r\nexport default class Main extends Scene {\r\n  entities: RouletteEntities;\r\n  fpsDomObject?: Element | null;\r\n\r\n  constructor(config: string) {\r\n    super(config);\r\n\r\n    this.entities = {\r\n      roulette: new Roulette(this),\r\n    };\r\n\r\n    this.fpsDomObject = document.querySelector(\"#rouletteFPS\");\r\n  }\r\n\r\n  showFps(disable = false) {\r\n    if (disable) {\r\n      return;\r\n    }\r\n\r\n    if (this.fpsDomObject) {\r\n      let fps = this.game.loop.actualFps;\r\n      this.fpsDomObject.innerHTML = fps.toFixed(1);\r\n    }\r\n  }\r\n\r\n  preload() {\r\n    this.entities.roulette.draw();\r\n  }\r\n  create() {\r\n    this.entities.roulette.createCirclePath();\r\n    this.entities.roulette.createFinishPath();\r\n  }\r\n  update() {\r\n    this.entities.roulette.checkPath();\r\n    this.entities.roulette.setFinishValue();\r\n\r\n    this.showFps(!isDevelopment);\r\n  }\r\n}\r\n","import Main from \"../Main\";\r\nimport css from \"../style.module.scss\";\r\n\r\nexport const rouletteBoxSize = Number(css.rouletteBoxSize);\r\n\r\nexport const config: Phaser.Types.Core.GameConfig = {\r\n  type: Phaser.AUTO,\r\n  scene: [Main],\r\n\r\n  width: rouletteBoxSize,\r\n  height: rouletteBoxSize,\r\n  parent: \"roulette-app-box\",\r\n\r\n  dom: {\r\n    createContainer: false,\r\n  },\r\n  audio: {\r\n    disableWebAudio: true,\r\n  },\r\n  disableContextMenu: false,\r\n  transparent: true,\r\n};\r\n\r\nexport default config;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport gameConfig from \"./data/config\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const Game = React.memo(() => {\r\n  const crashGame = useRef<Phaser.Game>();\r\n\r\n  useEffect(() => {\r\n    crashGame.current = new Phaser.Game(gameConfig);\r\n\r\n    return () => {\r\n      crashGame.current?.destroy(true, false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"roulette-app-box\" className={css.rouletteRoot}>\r\n      <img\r\n        src=\"/assets/roulette/panel.svg\"\r\n        alt=\"roulette panel\"\r\n        className={css.img}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { Game } from \"./game/render\";\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  isDesktop: boolean;\r\n}\r\n\r\nconst RouletteGame: FC<Props> = ({ isDesktop }) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.root, {\r\n        [css.mobile]: !isDesktop,\r\n      })}>\r\n      <p id=\"rouletteFPS\" className={css.fps}></p>\r\n      <img\r\n        src=\"/assets/roulette/background.svg\"\r\n        alt=\"roulette background\"\r\n        className={css.img}\r\n      />\r\n\r\n      <Game />\r\n\r\n      <img\r\n        src=\"/assets/roulette/arm.png\"\r\n        alt=\"roulette arm\"\r\n        className={clsx(css.img, css.arm)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouletteGame;\r\n","import React, { FC, useMemo, useRef, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { useWindowSize } from \"providers\";\r\n\r\nimport RouletteGame from \"games/Roulette\";\r\nimport { rouletteMobileSwipeWidth } from \"pages/Roulette/page\";\r\n\r\nimport { RoulettePanel } from \"..\";\r\nimport { useRouletteControl } from \"../Reducer\";\r\nimport css from \"./style.module.scss\";\r\n\r\nexport const RouletteGamePanel: FC = () => {\r\n  const { width } = useWindowSize();\r\n  const { state } = useRouletteControl();\r\n  const [isDesktop, setIsDesktop] = useState(true);\r\n\r\n  const swapRef = useRef<HTMLDivElement>(null);\r\n\r\n  const isRouletteHidden = useMemo(() => {\r\n    const { winNumber } = state.betPanel;\r\n    return !(!winNumber && typeof winNumber === \"string\");\r\n  }, [state.betPanel.winNumber]);\r\n\r\n  return (\r\n    <div\r\n      className={css.root}\r\n      ref={swapRef}\r\n      style={\r\n        !isRouletteHidden && width < rouletteMobileSwipeWidth\r\n          ? {\r\n              transform: `translateX(${\r\n                Number(swapRef.current?.offsetWidth) - width\r\n              }px)`,\r\n            }\r\n          : {}\r\n      }>\r\n      <div\r\n        className={clsx({\r\n          [css.mobileGamePosition]: !isDesktop,\r\n        })}>\r\n        <RouletteGame {...{ isDesktop }} />\r\n      </div>\r\n      <RoulettePanel {...{ isDesktop, setIsDesktop, isRouletteHidden }} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Statistics } from \"components\";\r\n\r\nimport { ControlPanel, RouletteGamePanel } from \"./components\";\r\nimport { RouletteControl } from \"./components/Reducer/Provider\";\r\nimport classes from \"./page.module.scss\";\r\n\r\nexport const rouletteMobileSwipeWidth = Number(\r\n    classes.rouletteMobileSwipeWidth,\r\n  ),\r\n  rouletteGameBlockPadding = Number(classes.rouletteGameBlockPadding);\r\n\r\nconst RoulettePage = () => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.item}>\r\n        <div className={classes.gameBlock}>\r\n          <RouletteControl>\r\n            <div className={classes.gameCell}>\r\n              <RouletteGamePanel />\r\n              <div className={classes.gameFooter}>\r\n                <ControlPanel />\r\n              </div>\r\n            </div>\r\n          </RouletteControl>\r\n        </div>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <div className={classes.statisticsWrapper}>\r\n          <Statistics withFairness />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoulettePage;\r\n","import { ControlCellStateType, RouletteCellStateType } from \"../../types\";\r\n\r\nexport const calculateTotalAmount = (\r\n  cellPanel: RouletteCellStateType,\r\n  controlPanel: ControlCellStateType,\r\n) => {\r\n  const reduce = (list: {\r\n    [key: string]: {\r\n      betAmount: number;\r\n    };\r\n  }) =>\r\n    Object.values(list).reduce((acm, cell) => {\r\n      return acm + cell.betAmount;\r\n    }, 0);\r\n\r\n  const calcCell = reduce(cellPanel);\r\n  const calcPanel = reduce(controlPanel);\r\n\r\n  return calcCell + calcPanel;\r\n};\r\n","import { createTimeouts } from \"utils\";\r\nimport { RouletteActions, RouletteState } from \"../../types\";\r\nimport { rouletteBaseBet } from \"./baseBetValues\";\r\nimport { calculateTotalAmount } from \"./calculateTotalAmount\";\r\nimport { changeBetValue } from \"./changeBetValue\";\r\nimport { PlayFunction } from \"./types\";\r\n\r\nconst { clearTimeouts, pushTimeout } = createTimeouts();\r\n\r\nexport const clearRouletteAutoModeTimeouts = () => {\r\n  clearTimeouts();\r\n};\r\n\r\nexport const rouletteAutoMode = async (\r\n  play: PlayFunction,\r\n  state: RouletteState,\r\n  dispatch: React.Dispatch<RouletteActions>,\r\n) => {\r\n  state.autoPanel.isStarted = true;\r\n  const response = await play(state);\r\n  if (response?.data?.success) {\r\n    const activeOperation = response.data.win ? \"onWin\" : \"onLoss\";\r\n    const { betPercent, variant } = state.autoPanel.values[activeOperation];\r\n\r\n    switch (variant) {\r\n      case 0:\r\n        changeBetValue(state, betPercent);\r\n        break;\r\n\r\n      case 1:\r\n        if (rouletteBaseBet.values) {\r\n          const cellPanel = JSON.parse(rouletteBaseBet.values.cellPanel),\r\n            controlPanel = JSON.parse(rouletteBaseBet.values.controlPanel);\r\n          state.cellPanel = cellPanel;\r\n          state.controlPanel = controlPanel;\r\n          state.betPanel.totalAmount = calculateTotalAmount(\r\n            cellPanel,\r\n            controlPanel,\r\n          );\r\n        }\r\n        break;\r\n\r\n      case 2:\r\n        state.autoPanel.isStarted = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    const { expected, real } = state.autoPanel.limits;\r\n    real.numberOfBets += 1;\r\n    real.profit += Number(response.data.profit);\r\n\r\n    const { numberOfBets, stopOnLoss, stopOnProfit } = expected;\r\n\r\n    if (\r\n      (Number(numberOfBets) && real.numberOfBets >= Number(numberOfBets)) ||\r\n      (Number(stopOnLoss) && real.profit <= Number(stopOnLoss) * -1) ||\r\n      (Number(stopOnProfit) && real.profit >= Number(stopOnProfit))\r\n    ) {\r\n      state.autoPanel.isStarted = false;\r\n    }\r\n\r\n    dispatch({\r\n      type: \"reloadState\",\r\n      value: state,\r\n    });\r\n\r\n    if (state.autoPanel.isStarted) {\r\n      pushTimeout(() => {\r\n        rouletteAutoMode(play, state, dispatch);\r\n      }, 1000);\r\n    }\r\n  } else if (response?.error) {\r\n    dispatch({\r\n      type: \"set_auto_started\",\r\n      value: false,\r\n    });\r\n  }\r\n};\r\n"],"sourceRoot":""}