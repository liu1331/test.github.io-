{"version":3,"sources":["pages/ModalPages/pages/BetData/components/Games/KenoComponent/components/RewardInfoComponent/style.module.scss","pages/ModalPages/pages/BetData/components/Games/KenoComponent/style.module.scss","pages/ModalPages/pages/BetData/components/Games/KenoComponent/components/RewardInfoComponent/index.tsx","pages/ModalPages/pages/BetData/components/Games/KenoComponent/index.tsx"],"names":["module","exports","RewardInfoComponent","betAmount","matchedNumbersCount","risk","selectedCellsCount","coin","className","useState","payoutTable","setPayoutTable","getPayoutTable","useCallback","a","fetch","process","response","json","responseBody","success","table","track","errors","console","log","useEffect","clsx","css","root","fieldClasses","field","getResult","cells","selected_numbers","cellsResult","key","includes","getMatchedNumbersCount","drawn_numbers","count","i","length","KenoComponent","draw_numbers","bet_amnt","getResultCells","getHighlightCells","onCellClickHandler","cellClasses","selected","cell","classes","fieldRoot"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,qBCArDD,EAAOC,QAAU,CAAC,mBAAqB,OAAO,kBAAoB,OAAO,kBAAoB,OAAO,iBAAmB,QAAQ,gBAAkB,QAAQ,cAAgB,OAAO,aAAe,OAAO,aAAe,OAAO,YAAc,OAAO,YAAc,OAAO,UAAY,QAAQ,QAAU,MAAM,aAAe,QAAQ,mBAAqB,SAAS,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,0B,uMCqBrdC,EAAkC,SAAC,GAOzC,IANLC,EAMI,EANJA,UACAC,EAKI,EALJA,oBACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,KACAC,EACI,EADJA,UACI,EACkCC,mBAA6B,MAD/D,mBACGC,EADH,KACgBC,EADhB,KAGEC,EAAiBC,sBAAW,sBAAC,kCAAAC,EAAA,+EAERC,MAAM,GAAD,OACvBC,4BADuB,uBAFG,cAEzBC,EAFyB,gBAKHA,EAASC,OALN,QAKzBC,EALyB,QAMdC,UACTV,EAAcS,EAAaE,MACjCV,EAAeD,IARc,kDAW1B,QAAL,EAAAY,yBAAA,SAASC,OAAT,MACAC,QAAQC,IAAR,MAZ+B,0DAchC,IAKH,OAHAC,qBAAU,WACRd,MACC,IAED,qBAAKJ,UAAWmB,YAAKC,IAAIC,KAAMrB,GAA/B,SACE,cAAC,aAAD,CACEF,mBAAoBA,EACpBH,UAAWA,EACXE,KAAMA,EACNK,YAAaA,EACbN,oBAAqBA,EACrBG,KAAMA,EACNuB,aAAc,CACZC,MAAOH,IAAIG,Y,mBC7CfC,EAAY,SAACC,EAAuBC,GACxC,IAAMC,EAAcF,EAEpB,IAAK,IAAIG,KAAOH,EACK,IAAfA,EAAMG,IAAcF,EAAiBG,UAAUD,KACjDH,EAAMG,GAAO,GAEI,IAAfH,EAAMG,IAAcF,EAAiBG,UAAUD,KACjDH,EAAMG,GAAO,GAGjB,OAAOD,GAEHG,EAAyB,SAC7BC,EACAL,GAGA,IADA,IAAIM,EAAQ,EACHC,EAAI,EAAGA,EAAIF,EAAcG,OAAQD,IACpCP,EAAiBG,SAASE,EAAcE,KAC1CD,IAGJ,OAAOA,GAGIG,EAAyC,SAAC,GAMhD,IALLC,EAKI,EALJA,aACAvC,EAII,EAJJA,KACA6B,EAGI,EAHJA,iBACAW,EAEI,EAFJA,SACAtC,EACI,EADJA,KAEM0B,EAAQa,YAAeC,YAAkB,GAAIH,GACnD,OACE,sBAAKpC,UAAWoB,IAAIC,KAApB,UACE,cAAC,QAAD,CACEmB,mBAAoB,aACpBf,MAAOD,EAAUC,EAAMA,MAAOC,GAC9Be,YAAa,CACXC,SAAUtB,IAAIsB,SACdC,KAAMvB,IAAIuB,MAEZC,QAAS,CACPrB,MAAOH,IAAIG,MACXsB,UAAWzB,IAAIyB,aAGnB,cAAC,EAAD,CACElD,UAAW0C,EACXzC,oBAAqBkC,EACnBM,EACAV,GAEF7B,KAAMA,EACNC,mBAAoB4B,EAAiBQ,OACrCnC,KAAMA","file":"static/js/95.e330ddb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1Ts9U\",\"field\":\"style_field__Xdhq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__2VZsd\",\"fieldRoot\":\"style_fieldRoot__3WJ1a\",\"field\":\"style_field__2COQG\",\"cell\":\"style_cell__3r3IP\",\"selected\":\"style_selected__3fsA_\"};","import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { track } from \"utils\";\r\nimport { PayoutTable, RewardInfo } from \"games/Keno\";\r\nimport { Risk } from \"pages/Keno/Controller/components/Reducer\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface IProps {\r\n  selectedCellsCount: number;\r\n  betAmount: string;\r\n  risk: Risk;\r\n  matchedNumbersCount: number;\r\n  coin?: string;\r\n  className?: string;\r\n}\r\ninterface PayoutTableResponseBody {\r\n  message: string;\r\n  success: boolean;\r\n  table: PayoutTable;\r\n}\r\nexport const RewardInfoComponent: FC<IProps> = ({\r\n  betAmount,\r\n  matchedNumbersCount,\r\n  risk,\r\n  selectedCellsCount,\r\n  coin,\r\n  className,\r\n}) => {\r\n  const [payoutTable, setPayoutTable] = useState<PayoutTable | null>(null);\r\n\r\n  const getPayoutTable = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_URL}/keno/payout-table`,\r\n      );\r\n      const responseBody = (await response.json()) as PayoutTableResponseBody;\r\n      if (responseBody.success) {\r\n        const payoutTable = responseBody.table;\r\n        setPayoutTable(payoutTable);\r\n      }\r\n    } catch (error) {\r\n      track()?.errors(error);\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPayoutTable();\r\n  }, []);\r\n  return (\r\n    <div className={clsx(css.root, className)}>\r\n      <RewardInfo\r\n        selectedCellsCount={selectedCellsCount}\r\n        betAmount={betAmount}\r\n        risk={risk}\r\n        payoutTable={payoutTable}\r\n        matchedNumbersCount={matchedNumbersCount}\r\n        coin={coin}\r\n        fieldClasses={{\r\n          field: css.field,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Field } from \"games/Keno\";\r\nimport { HighlightCells, Risk } from \"pages/Keno/Controller/components/Reducer\";\r\nimport { getResultCells } from \"pages/Keno/Controller/components/Reducer/actions\";\r\nimport { getHighlightCells } from \"pages/Keno/Controller/components/Reducer/reducer\";\r\nimport { RewardInfoComponent } from \"./components/RewardInfoComponent\";\r\nimport { IKenoResult } from \"../types\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport interface IKenoComponentProps extends IKenoResult {\r\n  bet_amnt: string;\r\n  coin: string;\r\n}\r\n\r\nconst getResult = (cells: HighlightCells, selected_numbers: number[]) => {\r\n  const cellsResult = cells;\r\n\r\n  for (let key in cells) {\r\n    if (cells[key] === 1 && selected_numbers.includes(+key)) {\r\n      cells[key] = 2;\r\n    }\r\n    if (cells[key] === 4 && selected_numbers.includes(+key)) {\r\n      cells[key] = 3;\r\n    }\r\n  }\r\n  return cellsResult;\r\n};\r\nconst getMatchedNumbersCount = (\r\n  drawn_numbers: number[],\r\n  selected_numbers: number[],\r\n) => {\r\n  let count = 0;\r\n  for (let i = 0; i < drawn_numbers.length; i++) {\r\n    if (selected_numbers.includes(drawn_numbers[i])) {\r\n      count++;\r\n    }\r\n  }\r\n  return count;\r\n};\r\n\r\nexport const KenoComponent: FC<IKenoComponentProps> = ({\r\n  draw_numbers,\r\n  risk,\r\n  selected_numbers,\r\n  bet_amnt,\r\n  coin,\r\n}) => {\r\n  const cells = getResultCells(getHighlightCells(0), draw_numbers);\r\n  return (\r\n    <div className={css.root}>\r\n      <Field\r\n        onCellClickHandler={() => {}}\r\n        cells={getResult(cells.cells, selected_numbers)}\r\n        cellClasses={{\r\n          selected: css.selected,\r\n          cell: css.cell,\r\n        }}\r\n        classes={{\r\n          field: css.field,\r\n          fieldRoot: css.fieldRoot,\r\n        }}\r\n      />\r\n      <RewardInfoComponent\r\n        betAmount={bet_amnt}\r\n        matchedNumbersCount={getMatchedNumbersCount(\r\n          draw_numbers,\r\n          selected_numbers,\r\n        )}\r\n        risk={risk}\r\n        selectedCellsCount={selected_numbers.length}\r\n        coin={coin}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}