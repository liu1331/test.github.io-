{"version":3,"sources":["pages/ModalPages/pages/BetData/components/Games/RouletteComponent/components/CellsComponent/style.module.scss","pages/ModalPages/pages/BetData/components/Games/RouletteComponent/components/ButtonsPanel/style.module.scss","pages/ModalPages/pages/BetData/components/Games/RouletteComponent/style.module.scss","pages/ModalPages/pages/BetData/components/Games/RouletteComponent/angles.ts","pages/ModalPages/pages/BetData/components/Games/RouletteComponent/components/ButtonsPanel/index.tsx","pages/ModalPages/pages/BetData/components/Games/RouletteComponent/components/CellsComponent/index.tsx","pages/ModalPages/pages/BetData/components/Games/RouletteComponent/index.tsx"],"names":["module","exports","angels","ControlPanel","text","isColored","onHover","seriesTypes","className","css","cells","top","color","title","clsx","cellCenter","cellUnit","left","cellLeft","right","cellRight","ButtonsPanel","cellPanel","root","onHoverList","leftPanel","centerPanel","rightPanel","hover","blur","CellsComponent","isDesktop","winNumber","rootWidth","classes","panelRef","useRef","ref","rootPanel","rotated","isWin","zeroCell","cell","Object","entries","map","number","isHovered","Fragment","rowCell","0","betAmount","createCell","itemCount","values","length","RouletteComponent","outcome","useState","loading","setLoading","style","transform","rootGame","visible","id","rouletteRoot","src","alt","roulette","onLoad","ballContainer","ball","setIsDesktop"],"mappings":"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","file":"static/js/85.6a6282f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"rootPanel\":\"style_rootPanel__1QwOG\",\"rotated\":\"style_rotated__2-awd\",\"cellPanel\":\"style_cellPanel__70tsg\",\"cells\":\"style_cells__3qEX6\",\"cell\":\"style_cell__1owHn\",\"zeroCell\":\"style_zeroCell__2Eckd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapperPadding\":\"10px\",\"desktopHeaderSize\":\"64px\",\"bottomButtonsSize\":\"60px\",\"desktopChatWidth\":\"310px\",\"swipedChatWidth\":\"960px\",\"arrBlockWidth\":\"12px\",\"headerHeight\":\"60px\",\"inputPadding\":\"16px\",\"chatPadding\":\"16px\",\"inputHeight\":\"56px\",\"chatWidth\":\"280px\",\"spacing\":\"8px\",\"mobileScreen\":\"600px\",\"feyorraDisableSize\":\"1080px\",\"root\":\"style_root__ihh2B\",\"cells\":\"style_cells__1d58y\",\"cellUnit\":\"style_cellUnit__3W8xZ\",\"cellCenter\":\"style_cellCenter__3dsYi\",\"cellLeft\":\"style_cellLeft__2d5fM\",\"cellRight\":\"style_cellRight__2ye-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootGame\":\"style_rootGame__1Dolt\",\"rouletteRoot\":\"style_rouletteRoot__1_QQn\",\"roulette\":\"style_roulette__1NoK0\",\"ballContainer\":\"style_ballContainer__3HeWG\",\"visible\":\"style_visible__3l32b\",\"cell\":\"style_cell__3iTTZ\"};","export const angels = {\r\n  \"23\": 8,\r\n  \"10\": 9,\r\n  \"5\": 10,\r\n  \"24\": 11,\r\n  \"16\": 12,\r\n  \"33\": 13,\r\n  \"1\": 14,\r\n  \"20\": 15,\r\n  \"14\": 16,\r\n  \"31\": 17,\r\n  \"9\": 18,\r\n  \"22\": 19,\r\n  \"18\": 20,\r\n  \"29\": 21,\r\n  \"7\": 22,\r\n  \"28\": 23,\r\n  \"12\": 24,\r\n  \"35\": 25,\r\n  \"3\": 26,\r\n  \"26\": 27,\r\n  \"0\": 28,\r\n  \"32\": 29,\r\n  \"15\": 30,\r\n  \"19\": 31,\r\n  \"4\": 32,\r\n  \"21\": 33,\r\n  \"2\": 34,\r\n  \"25\": 35,\r\n  \"17\": 36,\r\n\r\n  \"34\": 0,\r\n  \"6\": 1,\r\n  \"27\": 2,\r\n  \"13\": 3,\r\n  \"36\": 4,\r\n  \"11\": 5,\r\n  \"30\": 6,\r\n  \"8\": 7,\r\n};\r\n","import clsx from \"clsx\";\r\nimport { SeriesType } from \"pages/Roulette/components/Reducer/reducer/types\";\r\nimport { Cell } from \"pages/Roulette/components/RoulettePanel/components\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport css from \"./style.module.scss\";\r\ninterface Types {\r\n  top: SeriesType;\r\n  left: SeriesType;\r\n  right: SeriesType;\r\n}\r\n\r\ninterface CallBacks {\r\n  top: {\r\n    hover: () => void;\r\n    blur: () => void;\r\n  };\r\n  left: {\r\n    hover: () => void;\r\n    blur: () => void;\r\n  };\r\n  right: {\r\n    hover: () => void;\r\n    blur: () => void;\r\n  };\r\n}\r\ninterface CreateCellProps {\r\n  text: {\r\n    top: string;\r\n    left: string;\r\n    right: string;\r\n  };\r\n  isColored?: boolean;\r\n  onHover: CallBacks;\r\n  seriesTypes: Types;\r\n}\r\nconst ControlPanel: FC<CreateCellProps> = ({\r\n  text,\r\n  isColored,\r\n  onHover,\r\n  seriesTypes,\r\n}) => {\r\n  return (\r\n    <div className={css.cells}>\r\n      <Cell\r\n        text={text.top}\r\n        color={\"transparent\"}\r\n        title=\"3x\"\r\n        className={clsx(css.cellCenter, css.cellUnit)}\r\n      />\r\n      <Cell\r\n        text={text.left}\r\n        color={isColored ? \"red\" : \"transparent\"}\r\n        title=\"2x\"\r\n        className={clsx(css.cellLeft, css.cellUnit)}\r\n      />\r\n      <Cell\r\n        text={text.right}\r\n        color={isColored ? \"black\" : \"transparent\"}\r\n        title=\"2x\"\r\n        className={clsx(css.cellRight, css.cellUnit)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport const ButtonsPanel = ({\r\n  cellPanel,\r\n}: {\r\n  cellPanel: {\r\n    0: {\r\n      color: string;\r\n      isHovered: boolean;\r\n      betAmount: number;\r\n    };\r\n  };\r\n}) => {\r\n  return (\r\n    <div className={css.root}>\r\n      <ControlPanel\r\n        text={{ top: \"1 to 12\", left: \"1 to 18\", right: \"Even\" }}\r\n        onHover={onHoverList.leftPanel}\r\n        seriesTypes={{\r\n          top: \"first-12\",\r\n          left: \"1-18\",\r\n          right: \"even\",\r\n        }}\r\n      />\r\n      <ControlPanel\r\n        text={{ top: \"13 to 24\", left: \"\", right: \"\" }}\r\n        isColored\r\n        onHover={onHoverList.centerPanel}\r\n        seriesTypes={{\r\n          top: \"second-12\",\r\n          left: \"all-red\",\r\n          right: \"all-black\",\r\n        }}\r\n      />\r\n      <ControlPanel\r\n        text={{ top: \"25 to 36\", left: \"Odd\", right: \"19 to 36\" }}\r\n        onHover={onHoverList.rightPanel}\r\n        seriesTypes={{\r\n          top: \"third-12\",\r\n          left: \"odd\",\r\n          right: \"19-36\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst onHoverList = {\r\n  leftPanel: {\r\n    top: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n    left: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n    right: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n  },\r\n  centerPanel: {\r\n    top: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n    left: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n    right: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n  },\r\n  rightPanel: {\r\n    top: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n    left: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n    right: {\r\n      hover: () => {},\r\n      blur: () => {},\r\n    },\r\n  },\r\n};\r\n","import React, { CSSProperties, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Cell } from \"pages/Roulette/components/RoulettePanel/components\";\r\nimport { PanelProps } from \"pages/Roulette/components/RoulettePanel/components/CellsPanel\";\r\n\r\nimport css from \"./style.module.scss\";\r\nimport { createCell } from \"pages/Roulette/components/Reducer/reducer/state\";\r\nimport { ButtonsPanel } from \"../ButtonsPanel\";\r\ninterface IProps extends PanelProps {\r\n  winNumber: string;\r\n  classes?: {\r\n    cell?: string;\r\n  };\r\n}\r\nexport const CellsComponent = ({\r\n  isDesktop,\r\n  rootWidth,\r\n  winNumber,\r\n  classes,\r\n}: IProps) => {\r\n  const panelRef = useRef<HTMLDivElement>(null);\r\n\r\n  //   useEffect(() => {\r\n  //     if (\r\n  //       rootWidth &&\r\n  //       panelRef.current?.offsetHeight &&\r\n  //       rootWidth < panelRef.current?.offsetHeight\r\n  //     ) {\r\n  //       setIsDesktop(false);\r\n  //     } else {\r\n  //       setIsDesktop(true);\r\n  //     }\r\n  //   }, [rootWidth]);\r\n\r\n  return (\r\n    <div\r\n      ref={panelRef}\r\n      className={clsx(css.rootPanel, {\r\n        [css.rotated]: isDesktop,\r\n      })}>\r\n      <ButtonsPanel cellPanel={cellPanel} />\r\n      <div className={css.cellPanel}>\r\n        <Cell\r\n          color=\"green\"\r\n          text=\"0\"\r\n          title=\"36x\"\r\n          rotated={isDesktop}\r\n          isWin={winNumber === \"0\"}\r\n          className={clsx(css.zeroCell, classes?.cell)}\r\n        />\r\n        <div className={css.cells}>\r\n          {Object.entries(cellPanel).map(([number, { color, isHovered }]) => {\r\n            if (number === \"0\") {\r\n              return null;\r\n            }\r\n            const isWin = winNumber === number;\r\n            return (\r\n              <React.Fragment key={`__${number}_${color}`}>\r\n                <Cell\r\n                  text={number}\r\n                  //@ts-ignore\r\n                  color={color}\r\n                  title=\"36x\"\r\n                  rotated={isDesktop}\r\n                  className={clsx(css.cell, classes?.cell)}\r\n                  hover={isHovered}\r\n                  isWin={isWin}\r\n                />\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n\r\n          <Cell\r\n            color=\"transparent\"\r\n            text=\"2:1\"\r\n            title=\"3x\"\r\n            className={clsx(css.cell, css.rowCell, classes?.cell)}\r\n            rotated={isDesktop}\r\n          />\r\n          <Cell\r\n            color=\"transparent\"\r\n            text=\"2:1\"\r\n            title=\"3x\"\r\n            className={clsx(css.cell, css.rowCell, classes?.cell)}\r\n            rotated={isDesktop}\r\n          />\r\n          <Cell\r\n            color=\"transparent\"\r\n            text=\"2:1\"\r\n            title=\"3x\"\r\n            className={clsx(css.cell, css.rowCell, classes?.cell)}\r\n            rotated={isDesktop}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst cellPanel = {\r\n  0: {\r\n    color: \"green\",\r\n    isHovered: false,\r\n    betAmount: 0,\r\n  },\r\n  ...createCell(1),\r\n  ...createCell(10, true),\r\n  ...createCell(19),\r\n  ...createCell(28, true),\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { IRouletteResult } from \"../types\";\r\nimport { angels } from \"./angles\";\r\nimport { CellsComponent } from \"./components/CellsComponent\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\nexport interface IRouletteComponenttProps extends IRouletteResult {}\r\nconst itemCount = Object.values(angels).length;\r\nexport const RouletteComponent: FC<IRouletteComponenttProps> = ({\r\n  outcome,\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const angle = (360 / itemCount) * angels[outcome] + 1;\r\n  const style = { transform: `translateY(-50%) rotate(${angle}deg)` };\r\n  const onLoad = () => {\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <div className={css.root}>\r\n      <div className={clsx(css.rootGame, !loading && css.visible)}>\r\n        <div id=\"bet-roulette-app-box\" className={css.rouletteRoot}>\r\n          <img\r\n            src=\"/assets/roulette/roulette.svg\"\r\n            alt=\"roulette\"\r\n            className={css.roulette}\r\n            onLoad={onLoad}\r\n          />\r\n          <div className={css.ballContainer} style={style}>\r\n            <img\r\n              src=\"/assets/roulette/ball.svg\"\r\n              alt=\"ball\"\r\n              className={css.ball}\r\n            />\r\n          </div>\r\n        </div>\r\n        <CellsComponent\r\n          classes={{ cell: css.cell }}\r\n          isDesktop={true}\r\n          setIsDesktop={() => {}}\r\n          rootWidth={380}\r\n          winNumber={outcome}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}