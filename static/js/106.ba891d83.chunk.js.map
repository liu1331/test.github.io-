{"version":3,"sources":["components/SoundModal/Modal/components/Content/index.tsx","components/SoundModal/Modal/components/Content/style.module.scss"],"names":["Content","onClose","intl","useGetLocale","useSoundSystemControl","controlFunctions","switchSoundEnableState","changeVolume","soundSystemState","isBackgroundPlay","isGameEffectsPlay","volume","className","css","header","formatMessage","id","variant","onClick","fontSize","closeIcon","clsx","itemWrapper","text","on","off","isChecked","switchHandleChange","arg","type","min","max","step","value","onChange","e","Number","target","module","exports"],"mappings":"mLAiGeA,UApFY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,EAAOC,yBAD6B,EAKtCC,kCALsC,IAGxCC,iBAAoBC,EAHoB,EAGpBA,uBAAwBC,EAHJ,EAGIA,aAHJ,IAIxCC,iBAAoBC,EAJoB,EAIpBA,iBAAkBC,EAJE,EAIFA,kBAAmBC,EAJjB,EAIiBA,OAK3D,OACE,qCACE,sBAAKC,UAAWC,IAAIC,OAApB,UACE,+BACGZ,EAAKa,cAAc,CAClBC,GAAI,kBAGR,cAAC,OAAD,CACEC,QAAQ,QACRC,QAASjB,EACTkB,SAAU,GACVP,UAAWC,IAAIO,eAGnB,sBAAKR,UAAWS,YAAKR,IAAIS,aAAzB,UACE,4BACGpB,EAAKa,cAAc,CAClBC,GAAI,4BAGR,cAAC,YAAD,CACEO,KAAM,CACJC,GAAItB,EAAKa,cAAc,CACrBC,GAAI,oBAENS,IAAKvB,EAAKa,cAAc,CACtBC,GAAI,sBAGRU,UAAWjB,EACXkB,mBAAoB,SAACC,GAAD,OAClBtB,EAAuB,aAAcsB,SAI3C,sBAAKhB,UAAWS,YAAKR,IAAIS,aAAzB,UACE,4BACGpB,EAAKa,cAAc,CAClBC,GAAI,wBAGR,cAAC,YAAD,CACEO,KAAM,CACJC,GAAItB,EAAKa,cAAc,CACrBC,GAAI,oBAENS,IAAKvB,EAAKa,cAAc,CACtBC,GAAI,sBAGRU,UAAWhB,EACXiB,mBAAoB,SAACC,GAAD,OAAStB,EAAuB,UAAWsB,SAInE,sBAAKhB,UAAWS,YAAKR,IAAIS,aAAzB,UACE,4BACGpB,EAAKa,cAAc,CAClBC,GAAI,mBAGR,uBACEa,KAAK,QACLC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNC,MAAOtB,EACPuB,SAvEoB,SAACC,GAC3B5B,EAAa6B,OAAOD,EAAEE,OAAOJ,mB,oBCnBjCK,EAAOC,QAAU,CAAC,OAAS,sBAAsB,UAAY,yBAAyB,YAAc","file":"static/js/106.ba891d83.chunk.js","sourcesContent":["import React, { ChangeEvent, FC } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { useGetLocale } from \"providers\";\r\nimport { Icon, SwitchBox } from \"components\";\r\nimport { useSoundSystemControl } from \"components/SoundModal/Provider\";\r\n\r\nimport css from \"./style.module.scss\";\r\n\r\ninterface Props {\r\n  onClose: () => void;\r\n}\r\n\r\nconst Content: FC<Props> = ({ onClose }) => {\r\n  const intl = useGetLocale();\r\n  const {\r\n    controlFunctions: { switchSoundEnableState, changeVolume },\r\n    soundSystemState: { isBackgroundPlay, isGameEffectsPlay, volume },\r\n  } = useSoundSystemControl();\r\n  const changeVolumeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    changeVolume(Number(e.target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <div className={css.header}>\r\n        <span>\r\n          {intl.formatMessage({\r\n            id: \"sound.title\",\r\n          })}\r\n        </span>\r\n        <Icon\r\n          variant=\"close\"\r\n          onClick={onClose}\r\n          fontSize={12}\r\n          className={css.closeIcon}\r\n        />\r\n      </div>\r\n      <div className={clsx(css.itemWrapper)}>\r\n        <p>\r\n          {intl.formatMessage({\r\n            id: \"sound.backgroundMusic\",\r\n          })}\r\n        </p>\r\n        <SwitchBox\r\n          text={{\r\n            on: intl.formatMessage({\r\n              id: \"sound.switch.on\",\r\n            }),\r\n            off: intl.formatMessage({\r\n              id: \"sound.switch.off\",\r\n            }),\r\n          }}\r\n          isChecked={isBackgroundPlay}\r\n          switchHandleChange={(arg) =>\r\n            switchSoundEnableState(\"background\", arg)\r\n          }\r\n        />\r\n      </div>\r\n      <div className={clsx(css.itemWrapper)}>\r\n        <p>\r\n          {intl.formatMessage({\r\n            id: \"sound.gameEffects\",\r\n          })}\r\n        </p>\r\n        <SwitchBox\r\n          text={{\r\n            on: intl.formatMessage({\r\n              id: \"sound.switch.on\",\r\n            }),\r\n            off: intl.formatMessage({\r\n              id: \"sound.switch.off\",\r\n            }),\r\n          }}\r\n          isChecked={isGameEffectsPlay}\r\n          switchHandleChange={(arg) => switchSoundEnableState(\"effects\", arg)}\r\n        />\r\n      </div>\r\n\r\n      <div className={clsx(css.itemWrapper)}>\r\n        <p>\r\n          {intl.formatMessage({\r\n            id: \"sound.volume\",\r\n          })}\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          min={0}\r\n          max={1}\r\n          step={0.1}\r\n          value={volume}\r\n          onChange={changeVolumeHandler}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__2h6mV\",\"closeIcon\":\"style_closeIcon__3B_HF\",\"itemWrapper\":\"style_itemWrapper__1h_cS\"};"],"sourceRoot":""}